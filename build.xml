<?xml version="1.0" encoding="utf-8" ?>
<project name="FreeRapid Downloader" default="all" basedir=".">
    <property name="application" value="FreeRapid"/>
    <property name="version" value="0.9u2"/>
    <property name="version.name" value="${application}-${version}"/>
    <property name="mainclass" value="cz.vity.freerapid.core.MainApp"/>
    <property name="mainjar.file" value="frd.jar"/>

    <!--<property name="mainjar-packed.file" value="${mainjar.file}.pack.gz"/>-->

    <!-- output data directories -->
    <property name="build.dir" value="${version.name}"/>
    <property name="classes.dir" value="_classes"/>
    <property name="build.tests" value="_testClasses"/>
    <property name="reports.tests" value="_reportTests"/>
    <property name="src.tests" value="src-test"/>

    <property name="dist.dir" value="dist"/>
    <property name="macos.dmg.temp.dir" value="macos_dmg_temp"/>
    <property name="macos.dmg" value="${dist.dir}/${version.name}.dmg"/>

    <property name="javadoc.dir" value="${dist.dir}/javadoc"/>

    <!-- input data directories -->
    <property name="src.dir" value="src"/>
    <property name="etc.dir" value="etc"/>
    <property name="doc.dir" value="doc"/>
    <property name="lib.dir" value="lib"/>
    <property name="dev.dir" value="dev"/>
    <property name="resources.dir" value="resources"/>
    <property name="plugins.dir" value="plugins"/>
    <property name="lookandfeel.dir" value="lookandfeel"/>
    <property name="lib-src.dir" value="lib-src"/>
    <property name="plugins-src.dir" value="plugins-src"/>

    <!-- keep in sync with Consts.PLUGINS_DIST_FILE_NAME -->
    <property name="plugins-dist-file-name" value="instplgs.dat"/>

    <property name="resources" value="cz/vity/freerapid/core/resources/"/>
    <property name="splash" value="${resources}icons/splash.jpg"/>


    <property name="ignoreProperties" value="log*,lookandfeels*"/>

    <fileset id="jars" dir="${lib.dir}" includes="**/*"/>
    <fileset id="libjars" dir="${lib.dir}" includes="**/?*.jar"/>
    <fileset id="devjars" dir="dev/lib" includes="**/*"/>

    <taskdef name="native2AsciiExt" classpath="${dev.dir}/ant-tasks/vityanttasks.jar"
             classname="cz.vity.ant.tasks.Native2AsciiExt"/>

    <patternset id="compiler.resources">
        <!--<include name="**/?*.properties"/>-->
        <include name="**/?*.xml"/>
        <include name="**/?*.txt"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.mid"/>
        <include name="**/?*.wav"/>
        <include name="**/?*.xsd"/>

        <exclude name="**/plugin.xml"/>
        <exclude name="**/Thumbs.db"/>
    </patternset>

    <path id="cp">
        <fileset refid="jars"/>
        <fileset refid="devjars"/>
    </path>

    <path id="test-cp">
        <fileset refid="libjars"/>
        <fileset refid="devjars"/>
    </path>

    <path id="dist-jars">
        <fileset dir="${build.dir}/${lib.dir}" includes="**/*.jar"/>
        <fileset dir="${build.dir}/${lookandfeel.dir}" includes="**/*.jar"/>
        <fileset dir="${build.dir}" includes="${mainjar.file}"/>
    </path>

    <pathconvert property="lib.prefix" pathsep=" ">
        <path location="${lib.dir}"/>
    </pathconvert>

    <pathconvert property="classpath" refid="jars" pathsep=" " dirsep="/">
        <map from="${lib.prefix}" to="${lib.dir}"/>
    </pathconvert>


    <target name="build" depends="compile, objectDbEnhance, tests" description="building">
        <buildnumber file="build.txt"/>

        <!--copying properties files-->
        <copy todir="${classes.dir}" overwrite="true" encoding="utf-8">
            <filterchain>
                <ignoreblank byline="true"/>
                <striplinecomments>
                    <comment value="#"/>
                </striplinecomments>
            </filterchain>
            <fileset dir="${src.dir}" includes="**/?*.properties"/>
            <mapper type="glob" from="*.properties" to="*.stripped">
            </mapper>
        </copy>

        <native2AsciiExt src="${classes.dir}" encoding="utf-8" includes="**/?*.stripped"
                         dest="${classes.dir}" ext=".properties"/>

        <delete>
            <fileset dir="${classes.dir}" includes="**/?*.stripped"/>
        </delete>

        <jar jarfile="${build.dir}/${mainjar.file}" compress="false">
            <manifest>
                <!--suppress AntResolveInspection -->
                <attribute name="Build-Date" value="${TODAY}"/>
                <attribute name="Build" value="${build.number}"/>
                <attribute name="Class-Path" value="${lib.dir}/languages.jar ${classpath}"/>
                <attribute name="Main-Class" value="${mainclass}"/>
                <attribute name="SplashScreen-Image" value="${splash}"/>
            </manifest>
            <fileset dir="${classes.dir}" includes="**/*"
                     excludes="**/services/**,**/sandbox/**, **/**/?*.properties,**/**/?*.java"/>
        </jar>
        <mkdir dir="${build.dir}/${lib.dir}"/>
        <!--<mkdir dir="${build.dir}/help"/>-->
        <copy todir="${build.dir}">
            <fileset dir="${etc.dir}" includes="**/*" excludes="**/jnlp/**"/>
        </copy>
        <!--<copy todir="${build.dir}/help">-->
        <!--<fileset dir="${help}" includes="**/*"></fileset>-->
        <!--</copy>-->
        <copy todir="${build.dir}/${lib.dir}">
            <fileset dir="${lib.dir}" includes="**/*"/>
        </copy>
        <jar jarfile="${build.dir}/${lib.dir}/languages.jar" compress="true">
            <manifest>
                <!--suppress AntResolveInspection -->
                <attribute name="Build-Date" value="${TODAY}"/>
            </manifest>
            <fileset dir="${classes.dir}" includes="**/**/?*.properties"/>
        </jar>

        <zip file="${build.dir}/${plugins-dist-file-name}" compress="false" basedir="${plugins.dir}">
            <!--<fileset dir="${plugins.dir}" includes="**/*"/>-->
        </zip>

        <jar jarfile="${dist.dir}/plugin-api.jar" compress="true">
            <manifest>
                <!--suppress AntResolveInspection -->
                <attribute name="Build-Date" value="${TODAY}"/>
            </manifest>
            <fileset dir="${classes.dir}" includes="**/plugins/**"/>
            <fileset dir="${classes.dir}" includes="**/**/EDTPropertyChangeSupport**"/>
            <fileset dir="${classes.dir}" includes="**/**/Utils**"/>
            <fileset dir="${classes.dir}" includes="**/**/LogUtils**"/>
            <fileset dir="${classes.dir}" includes="**/**/Crc32**"/>
        </jar>

        <zip file="${dist.dir}/plugin-api-src.zip" compress="true">
            <fileset dir="${src.dir}" includes="**/plugins/**"/>
            <fileset dir="${src.dir}" includes="**/**/EDTPropertyChangeSupport**"/>
            <fileset dir="${src.dir}" includes="**/**/Utils**"/>
            <fileset dir="${src.dir}" includes="**/**/LogUtils**"/>
            <fileset dir="${src.dir}" includes="**/**/Crc32**"/>
        </zip>

    </target>

    <target name="compile" depends="clean, init" description="compiling source codes">
        <mkdir dir="${classes.dir}"/>
        <javac debug="true" srcdir="${src.dir}" destdir="${classes.dir}" classpathref="cp" source="1.6" target="1.6"
               defaultexcludes="false" excludes="**/sandbox/**" includeantruntime="true" encoding="UTF-8">

        </javac>

        <mkdir dir="${build.tests}"/>
        <javac srcdir="${src.tests}" destdir="${build.tests}" classpathref="test-cp" optimize="false" source="1.6"
               target="1.6" includeantruntime="true" encoding="UTF-8">
            <classpath location="${classes.dir}"/>
        </javac>

        <!-- zkopirovani resourcu -->

        <copy todir="${classes.dir}">
            <fileset dir="${src.dir}">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="init" description="initialization">
        <tstamp/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="javadoc" depends="init" description="Create javadoc">
        <delete dir="${javadoc.dir}" quiet="true"/>
        <mkdir dir="${javadoc.dir}"/>
        <javadoc Author="true" Version="true" charset="utf-8" destdir="${javadoc.dir}" docencoding="utf-8"
                 encoding="utf-8" link="http://java.sun.com/javase/6/docs/api/" packagenames="*" package="true"
                 source="1.6">
            <sourcepath>
                <pathelement location="${src.dir}"/>
            </sourcepath>
            <classpath refid="cp"/>
        </javadoc>
    </target>


    <target name="clean" description="clean up">
        <delete dir="${build.dir}" failonerror="false"/>
        <delete dir="${classes.dir}"/>
        <delete dir="${dist.dir}" failonerror="false"/>
        <delete dir="${resources.dir}"/>
        <delete dir="${build.tests}"/>
        <delete dir="${reports.tests}"/>
    </target>

    <target name="all" depends="clean,init, build, dist" description="build all"/>

    <!-- run -->

    <target name="run" depends="build">
        <java fork="true" jar="${build.dir}/${mainjar.file}"/>
    </target>


    <target name="tests" depends="compile">
        <copy todir="${build.tests}">
            <fileset dir="${src.tests}">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>

        <mkdir dir="${reports.tests}"/>
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <path refid="test-cp"/>
                <pathelement location="${build.tests}"/>
                <pathelement location="${classes.dir}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>

            <formatter type="plain"/>

            <batchtest fork="yes" todir="${reports.tests}">
                <fileset dir="${build.tests}">
                    <include name="**/*Test.class"/>
                </fileset>
            </batchtest>
        </junit>
    </target>


    <target name="resources" depends="init">
        <delete dir="${resources.dir}"/>
        <mkdir dir="${resources.dir}"/>
        <copy todir="${resources.dir}" overwrite="">
            <fileset dir="${src.dir}" includes="**/?*.properties" excludes="${ignoreProperties}"/>
        </copy>
        <zip zipfile="${dist.dir}/resources.zip">
            <fileset dir="${resources.dir}"/>
        </zip>
    </target>

    <target name="intellij">
        <delete>
            <fileset dir="out/production/freerapid" includes="**/?*.properties" excludes="${ignoreProperties}"/>
        </delete>

        <native2AsciiExt src="${src.dir}" encoding="utf-8" includes="**/?*.properties"
                         excludes="${ignoreProperties}"
                         dest="out/production/freerapid" ext=".properties"/>
    </target>


    <target name="objectDbEnhance" description="enhancing Object db entities">
        <!--@see http://www.objectdb.com/java/jpa/tool/enhancer-->
        <java classname="com.objectdb.Enhancer" fork="false" classpathref="test-cp">
            <arg line="-cp ${classes.dir}"/>
            <arg line="cz.vity.freerapid.gui.managers.FileHistoryItem"/>
            <arg line="cz.vity.freerapid.model.DownloadFile"/>
            <arg line="cz.vity.freerapid.model.PluginMetaData"/>
        </java>
    </target>


    <target name="dist" depends="build" description="creating release">
        <zip zipfile="${dist.dir}/${version.name}.zip" level="9" compress="true">
            <fileset dir=".">
                <include name="${build.dir}/"/>
                <!--<exclude name="${build.dir}/${mainjar-packed.file}"/>-->
            </fileset>
        </zip>
        <checksum algorithm="md5" forceoverwrite="true" file="${dist.dir}/${version.name}.zip"/>
        <!--<zip destfile="${dist.dir}/${version.name}-src.zip">-->
        <!--<fileset dir=".">-->
        <!--<include name="${lib.dir}/"/>-->
        <!--<include name="${lib-src.dir}/"/>-->
        <!--<include name="${etc.dir}/"/>-->
        <!--<include name="${src.dir}/"/>-->
        <!--<include name="${dev.dir}/"/>-->
        <!--<include name="${plugins.dir}/"/>-->
        <!--<include name="${doc.dir}/"/>-->
        <!--<include name="build.xml"/>-->
        <!--</fileset>-->
        <!--</zip>-->
    </target>

    <taskdef name="jarbundler"
             classpath="./dev/ant-tasks/jarbundler.jar"
             classname="net.sourceforge.jarbundler.JarBundler"/>

    <!--todo chali you have to call target "dist" before this target-->
    <!--this task is platform depend, you can use it only on mac os x-->
    <target name="mac-os-package">
        <delete file="${macos.dmg}"/>
        <mkdir dir="${macos.dmg.temp.dir}"/>
        <jarbundler dir="${macos.dmg.temp.dir}"
                    name="FreeRapid"
                    mainclass="cz.vity.freerapid.core.MainApp"
                    icon="./${build.dir}/frd.icns"
                    vmoptions="-Djava.net.preferIPv4Stack=true -Xmx128m"
                    arguments="">
            <jarfileset dir="./${build.dir}/lib"/>
            <jarfileset dir="./${build.dir}" includes="frd.jar"/>
            <jarfileset dir="./${build.dir}/lookandfeel"/>
            <javafileset dir="./${build.dir}" includes="*/*.xml"/>
            <javafileset dir="./${build.dir}" includes="*/*.txt"/>
            <javafileset dir="./${build.dir}" includes="*.conf"/>
            <javafileset dir="./${build.dir}" includes="*.dat"/>
            <javafileset dir="./${build.dir}" includes="*.properties"/>
        </jarbundler>
        <mkdir dir="${macos.dmg.temp.dir}"/>
        <exec executable="./make_alias">
            <arg line="/Applications ${macos.dmg.temp.dir}"/>
        </exec>
        <exec executable="hdiutil">
            <arg line="create -volname ${version.name} -srcfolder ${macos.dmg.temp.dir} ${macos.dmg}"/>
        </exec>
        <delete dir="${macos.dmg.temp.dir}"/>
    </target>

    <target name="reverseResources" description="Target reverse all properties into UTF-8 encoded files">
        <native2AsciiExt src="c:/temp/korejstina" encoding="utf-8" includes="**/?*.properties" excludes="${ignoreProperties}"
                         dest="c:/temp/korejstina2" ext=".properties2" reverse="true"/>

        <!--<native2AsciiExt src="${src.dir}" encoding="UTF-16LE" includes="${unicodeResources}"-->
        <!--dest="${src.dir}" ext=".properties2" reverse="true"/>-->

        <copy todir="c:/temp/korejstina2" overwrite="true" encoding="utf-8">
            <fileset dir="c:/temp/korejstina2" includes="**/?*.properties2"/>
            <mapper type="glob" from="*.properties2" to="*.properties">
            </mapper>
        </copy>
        <delete dir="c:/temp/korejstina2" includes="**/?*.properties2"/>
    </target>
</project>
