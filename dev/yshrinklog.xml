<?xml version="1.0" encoding="UTF-8"?>
<yshrink version="0.1">
    <!-- parsing C:\develope\freerapid\dev\swingx.jar -->
    <entrypoints>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4"/>
        <method signature="void run()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$4"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$2"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3"/>
        <field name="val$commit" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$3"/>
        <class name="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <method signature="java.lang.String[] getDaysOfTheWeek()" class="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <method signature="java.util.Date getDayAtLocation(int,int)" class="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <method signature="java.util.Date getLastDisplayedDay()" class="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.MonthViewUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <method signature="void install(javax.swing.JFormattedTextField)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,javax.swing.JFormattedTextField)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <method signature="void uninstall()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <field name="editor" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <field name="cancelAction" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <field name="TEXT_CANCEL_KEY" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$EditorCancelAction"/>
        <class name="org.jdesktop.swingx.plaf.LookAndFeelUtils"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelUtils"/>
        <method signature="java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI,java.lang.Class)"
                class="org.jdesktop.swingx.plaf.LookAndFeelUtils"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelUtils"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void uninstallDefaults(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void installListeners(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void setLeftDecoration(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="javax.swing.JLabel createAndConfigureCaption(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="javax.swing.JComponent getRightDecoration()"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="javax.swing.JComponent getLeftDecoration()"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void paint(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void uninstallListeners(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void uninstallComponents(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void installDefaults(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="java.awt.Container getTitleBar()" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void setRightDecoration(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="org.jdesktop.swingx.JXPanel createAndConfigureTopPanel(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void installComponents(org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="java.awt.Insets getCaptionInsets()"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void installProperty(javax.swing.JComponent,java.lang.String,java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="$assertionsDisabled" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="left" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="titleChangeListener" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="caption" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="topPanel" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <field name="right" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader createCalendarHeader()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader getHeaderComponent()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="void uninstall(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="void install(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent getHeaderComponent()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent createCalendarHeader()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="void installNavigationActions()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler"/>
        <class name="org.jdesktop.swingx.plaf.nimbus.NimbusLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.nimbus.NimbusLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.nimbus.NimbusLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="java.awt.Paint getPaint()" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void setPosition(org.jdesktop.swingx.painter.GlossPainter$GlossPosition)"
                class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,org.jdesktop.swingx.painter.GlossPainter$GlossPosition)"
                class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint)" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void setPaint(java.awt.Paint)" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="org.jdesktop.swingx.painter.GlossPainter$GlossPosition getPosition()"
                class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.painter.GlossPainter$GlossPosition)"
                class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.GlossPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <field name="position" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <field name="paint" class="org.jdesktop.swingx.painter.GlossPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler"/>
        <method signature="javax.swing.JComponent prepareRenderingComponent(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler"/>
        <method signature="void setLocale(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <method signature="void installComponents()" class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXTipOfTheDay)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI"/>
        <class name="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <method signature="void paintTitleBackground(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <method signature="void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <method signature="boolean isMouseOverBorder()"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI$GlossyPaneBorder"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <method signature="void paintTitleBackground(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <method signature="void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <method signature="boolean isMouseOverBorder()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$2"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$2"/>
        <class name="org.jdesktop.swingx.plaf.macosx.MacOSXLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void paint(java.awt.Graphics,java.awt.Shape)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="int getEndOffset()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="float getMaximumSpan(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="javax.swing.text.Document getDocument()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="int viewToModel(float,float,java.awt.Shape,javax.swing.text.Position$Bias[])"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="javax.swing.text.View getView(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="javax.swing.text.AttributeSet getAttributes()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="int getStartOffset()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="int getViewCount()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="float getPreferredSpan(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="java.awt.Container getContainer()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="javax.swing.text.Element getElement()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void preferenceChanged(javax.swing.text.View,boolean,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="java.awt.Shape modelToView(int,java.awt.Shape,javax.swing.text.Position$Bias)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="float getMinimumSpan(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void setSize(float,float)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void setParent(javax.swing.text.View)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="java.awt.Shape modelToView(int,javax.swing.text.Position$Bias,int,javax.swing.text.Position$Bias,java.awt.Shape)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="javax.swing.text.ViewFactory getViewFactory()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="void &lt;init&gt;(javax.swing.JComponent,javax.swing.text.ViewFactory,javax.swing.text.View)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <method signature="float getAlignment(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <field name="host" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <field name="width" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <field name="factory" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <field name="view" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$Renderer"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$1"/>
        <method signature="java.lang.String getString(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction$1"/>
        <class name="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TitledPanelAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <method signature="javax.swing.JComponent getRendererComponent(org.jdesktop.swingx.JXMultiThumbSlider)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <method signature="void paintComponent(java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI,org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <field name="slider" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicTrackRenderer"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <method signature="javax.swing.border.Border createPaneBorder()"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.motif.MotifLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.motif.MotifLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.motif.MotifLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <method signature="org.jdesktop.swingx.painter.ImagePainter$ScaleType valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <method signature="org.jdesktop.swingx.painter.ImagePainter$ScaleType[] values()"
                class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <field name="InsideFit" class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <field name="OutsideFit" class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <field name="Distort" class="org.jdesktop.swingx.painter.ImagePainter$ScaleType"/>
        <class name="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isPlastic()" class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void initialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="java.lang.Object[] getDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="java.lang.String getName()" class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void &lt;init&gt;(java.lang.String)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isWindows(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isMotif(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isMetal(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addMotifDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isNimbus(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isLinux(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="void uninitialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isSynth()" class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <method signature="boolean isMac(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <field name="name" class="org.jdesktop.swingx.plaf.AbstractComponentAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <method signature="int getNullWidth()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,javax.swing.JFormattedTextField$AbstractFormatter)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <method signature="java.awt.Dimension getPreferredSize()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <field name="prefSizeCache" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <field name="prefEmptyInset" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$DefaultEditor"/>
        <class name="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setMonthText(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setSpinnerFocusable(boolean)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setActions(javax.swing.Action,javax.swing.Action,javax.swing.SpinnerModel)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void initComponents()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void addComponents()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setBackground(java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="javax.swing.JSpinner createSpinner()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setArrowsSurroundMonth(boolean)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="javax.swing.AbstractButton createNavigationButton()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void uninstallZoomAction()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void setFont(java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void createComponents()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="javax.swing.JLabel createMonthText()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void installZoomAction(javax.swing.SpinnerModel)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <field name="monthText"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <field name="nextButton"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <field name="prevButton"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <field name="yearSpinner"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <field name="surroundMonth"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseClicked(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseEntered(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="java.awt.Dimension preferredLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void buttonPropertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void addLayoutComponent(java.lang.String,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void editorActionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void monthViewActionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void focusLost(java.awt.event.FocusEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="java.awt.Dimension minimumLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void editorPropertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseMoved(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void removeLayoutComponent(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void monthViewPropertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseExited(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void valueChanged(org.jdesktop.swingx.event.DateSelectionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mousePressed(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void datePickerPropertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseDragged(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void mouseReleased(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void focusGained(java.awt.event.FocusEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <method signature="void layoutContainer(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <field name="_forwardReleaseEvent" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler"/>
        <class name="org.jdesktop.swingx.painter.Painter"/>
        <method signature="void paint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.Painter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.Painter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <method signature="void &lt;init&gt;(javax.swing.text.html.StyleSheet,java.awt.Font,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <method signature="void setFontAndColor(java.awt.Font,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <method signature="java.lang.String displayPropertiesToCSS(java.awt.Font,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <field name="displayPropertiesToCSS"
               class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <field name="clz" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicDocument"/>
        <class name="org.jdesktop.swingx.plaf.BusyLabelAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.BusyLabelAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.BusyLabelAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.BusyLabelAddon"/>
        <class name="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int getColumnCount()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isTestable(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.String getString()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isEditable()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int getRowCount()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isSelected()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isCellEditable(int,int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.String getString(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.Object getValue()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.Object getFilteredValueAt(int,int)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int getDepth()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int getColumnIndex(java.lang.Object)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isHierarchical()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int viewToModel(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.Object getColumnIdentifierAt(int)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.Object getValue(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.String getFilteredStringAt(int,int)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="void refresh()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isExpanded()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.String getColumnName(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.String getStringAt(int,int)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="java.lang.Object getValueAt(int,int)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean isLeaf()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="javax.swing.JComponent getComponent()"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="int modelToView(int)" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="boolean hasFocus()" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <method signature="void &lt;init&gt;(javax.swing.JComponent)"
                class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <field name="target" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <field name="column" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <field name="DEFAULT_COLUMN_IDENTIFIER" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <field name="row" class="org.jdesktop.swingx.decorator.ComponentAdapter"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <method signature="java.awt.Insets getSeparatorInsets(java.awt.Insets)"
                class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <method signature="void paintBackground(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <field name="rightImage" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <field name="leftImage" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <field name="log" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <field name="middleImage" class="org.jdesktop.swingx.plaf.windows.WindowsStatusBarUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsClickEvent"/>
        <class name="org.jdesktop.swingx.plaf.TipOfTheDayUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TipOfTheDayUI"/>
        <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice)"
                class="org.jdesktop.swingx.plaf.TipOfTheDayUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TipOfTheDayUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <method signature="void &lt;init&gt;(boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <method signature="int getIconWidth()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <method signature="int getIconHeight()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <method signature="void paintIcon(java.awt.Component,java.awt.Graphics,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <field name="up" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChevronIcon"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$1000(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$900(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$100(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$700(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$1200(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$1100(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$600(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$800(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$000(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$400(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="javax.swing.border.Border createPaneBorder()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$300(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="void update(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$200(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="int access$500(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.TaskPaneContainerUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneContainerUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneContainerUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$BasicHyperlinkListener"/>
        <method signature="void &lt;init&gt;(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$BasicHyperlinkListener"/>
        <method signature="void stateChanged(javax.swing.event.ChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$BasicHyperlinkListener"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$BasicHyperlinkListener"/>
        <class name="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void applyBackground(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="java.awt.Color getSelectedBackground()"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void applyForeground(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void setBackground(java.awt.Color)" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void setSelectedBackground(java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="java.awt.Color getBackground()" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="java.awt.Color getSelectedForeground()"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="java.awt.Color getForeground()" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="java.awt.Component doHighlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void setForeground(java.awt.Color)" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;(java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void setSelectedForeground(java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.decorator.HighlightPredicate)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.decorator.HighlightPredicate,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;(java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <field name="selectedBackground" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <field name="background" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <field name="selectedForeground" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <field name="foreground" class="org.jdesktop.swingx.decorator.ColorHighlighter"/>
        <class name="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="javax.swing.JInternalFrame getErrorInternalFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void configureDetailsButton(boolean)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="javax.swing.JFrame getErrorFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void reinit()" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="javax.swing.JDialog getErrorDialog(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="java.awt.LayoutManager createDetailPanelLayout()"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="java.awt.LayoutManager createErrorPaneLayout()"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void configureReportAction(org.jdesktop.swingx.action.AbstractActionExt)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void createExtraComponents()" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="int getDetailsHeight()" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <field name="disclaimerText" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <field name="titleLabel" class="org.jdesktop.swingx.plaf.macosx.MacOSXErrorPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void uninstallDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="java.awt.LayoutManager createDefaultLayout()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <field name="taskPane" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup"/>
        <method signature="void updateLinkPanel(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup"/>
        <class name="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="java.awt.Paint getPaint()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void setStripeWidth(double)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void setAngle(double)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void setPaint(java.awt.Paint)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,double,double,double)"
                class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;init&gt;(double)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,double)"
                class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="double getAngle()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void setSpacing(double)" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="double getStripeWidth()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <method signature="double getSpacing()" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <field name="paint" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <field name="stripeWidth" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <field name="spacing" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <field name="angle" class="org.jdesktop.swingx.painter.PinstripePainter"/>
        <class name="org.jdesktop.swingx.painter.effects.GlowPathEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.GlowPathEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.GlowPathEffect"/>
        <class name="org.jdesktop.swingx.plaf.TipOfTheDayAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TipOfTheDayAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TipOfTheDayAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TipOfTheDayAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TipOfTheDayAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1"/>
        <field name="val$pane" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$2"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$2"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,javax.swing.Action,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <method signature="void windowClosed(java.awt.event.WindowEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <field name="val$closeAction" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <field name="val$resizeListener" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$3"/>
        <class name="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <method signature="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior[] values()"
                class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <method signature="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior valueOf(java.lang.String)"
                class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <field name="$VALUES" class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <field name="FILL" class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <field name="FIXED" class="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseClicked(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="int getPreferredRows()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseMoved(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void removeLayoutComponent(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseEntered(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="java.awt.Dimension preferredLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void addLayoutComponent(java.lang.String,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseExited(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="java.awt.Dimension minimumLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void valueChanged(org.jdesktop.swingx.event.DateSelectionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mousePressed(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseDragged(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void mouseReleased(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="int getPreferredColumns()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <method signature="void layoutContainer(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <field name="startDate" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <field name="preferredSize" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <field name="endDate" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <field name="armed" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$1"/>
        <class name="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment[] values()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <field name="RIGHT" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <field name="LEFT" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <field name="CENTER" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment"/>
        <class name="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI$LocaleHandler"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI$LocaleHandler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI$LocaleHandler"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI$LocaleHandler"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI$LocaleHandler"/>
        <class name="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="java.awt.Insets getInsets()" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="boolean isFillVertical()" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="boolean isFillHorizontal()" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void setInsets(java.awt.Insets)" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment getHorizontalAlignment()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="int calculateY(int,int)" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="int calculateX(int,int)" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void setFillVertical(boolean)" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void setVerticalAlignment(org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void setHorizontalAlignment(org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment getVerticalAlignment()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void setFillHorizontal(boolean)" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="java.awt.Rectangle calculateLayout(int,int,int,int)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <field name="horizontalAlignment" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <field name="verticalAlignment" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <field name="insets" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <field name="fillHorizontal" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <field name="fillVertical" class="org.jdesktop.swingx.painter.AbstractLayoutPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$2"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsClassicLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.UIColorHighlighterAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void uninstallComponentDefaults(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="org.jdesktop.swingx.painter.Painter createBackgroundPainter()"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="boolean isUIInstallable(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void installComponentDefaults(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void installListeners(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="java.awt.Color getAsNotUIResource(java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void onPropertyChange(org.jdesktop.swingx.JXHeader,java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void uninstallDefaults(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="java.awt.Font getAsNotUIResource(java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void installComponents(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void installDefaults(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void resetLayout(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void uninstallListeners(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <method signature="void uninstallComponents(org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="$assertionsDisabled" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="descriptionPane" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="imagePanel" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="titleLabel" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="gradientLightColor" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="propListener" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="gradientDarkColor" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <field name="boundsListener" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="int getPreferredWidth(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void removeLayoutComponent(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="java.awt.Dimension preferredLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void addLayoutComponent(java.lang.String,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void invalidateLayout(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="float getLayoutAlignmentX(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="float getLayoutAlignmentY(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void addLayoutComponent(java.awt.Component,java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="java.awt.Dimension minimumLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicStatusBarUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="java.awt.Dimension maximumLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <method signature="void layoutContainer(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <field name="$assertionsDisabled" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <field name="constraints" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.JInternalFrame getErrorInternalFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="java.awt.Dimension calculatePreferredSize()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void configureDetailsButton(boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void access$400(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="java.lang.String escapeXml(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void centerWindow(javax.swing.JInternalFrame,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="java.awt.LayoutManager createErrorPaneLayout()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void access$500(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,java.awt.Window,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="java.lang.String getDetailsAsHTML(org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void setDetails(java.lang.String)" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void setErrorMessage(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="int getDetailsHeight()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.Icon getDefaultErrorIcon()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void initWindow(java.awt.Window,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void uninstallDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void reinit()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.JFrame getErrorFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.JDialog getErrorDialog(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="java.awt.LayoutManager createDetailPanelLayout()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void setDetailsVisible(boolean)" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void configureReportAction(org.jdesktop.swingx.action.AbstractActionExt)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void uninstallComponents()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void exitIfFatal()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void centerWindow(java.awt.Window,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void access$600(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void installComponents()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.Icon getDefaultWarningIcon()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <method signature="javax.swing.TransferHandler createDetailsTransferHandler(javax.swing.text.JTextComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="errorMessage" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="detailsPanel" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="CLASS_NAME" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="expandedHeight" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="detailButton" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="closeButton" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="detailsScrollPane" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="detailListener" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="pane" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="iconLabel" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="reportButton" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="collapsedHeight" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="errorScrollPane" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="details" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="copyToClipboardListener" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="errorPaneListener" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <field name="copyToClipboardButton" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI"/>
        <class name="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void setCellRenderer(javax.swing.ListCellRenderer)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(java.lang.Object[])" class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.ListCellRenderer getWrappedCellRenderer()" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.search.Searchable getSearchable()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void doFind()" class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.ListCellRenderer createDefaultCellRenderer()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter(int)"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.Action createFindAction()" class="org.jdesktop.swingx.JXList"/>
        <method signature="int convertIndexToView(int)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void setModel(javax.swing.ListModel)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(java.util.Vector)" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="java.lang.Object getElementAt(int)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void setFilterEnabled(boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void toggleSortOrder()" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.rollover.ListRolloverController getLinkController()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.event.ChangeListener getHighlighterChangeListener()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.ListModel getWrappedModel()" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.JXList$DelegatingRenderer getDelegatingRenderer()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void setComparator(java.util.Comparator)" class="org.jdesktop.swingx.JXList"/>
        <method signature="boolean isRolloverEnabled()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(javax.swing.ListModel,boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="int convertIndexToModel(int)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(javax.swing.ListModel)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void updateHighlighterUI()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(java.lang.Object[],boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void updateSortAfterComparatorChange()" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.rollover.ListRolloverController createLinkController()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.rollover.RolloverProducer createRolloverProducer()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void setRolloverEnabled(boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void setSelectionModel(javax.swing.ListSelectionModel)" class="org.jdesktop.swingx.JXList"/>
        <method signature="java.lang.String getStringAt(int)" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.JXList$DelegatingRenderer access$000(org.jdesktop.swingx.JXList)"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.ListCellRenderer getCellRenderer()" class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.SortOrder getSortOrder()" class="org.jdesktop.swingx.JXList"/>
        <method signature="boolean isFilterEnabled()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void init(boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="javax.swing.event.ChangeListener createHighlighterChangeListener()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void setSearchable(org.jdesktop.swingx.search.Searchable)"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void &lt;init&gt;(java.util.Vector,boolean)" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.sort.SortController getSortController()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="int getElementCount()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void resetSortOrder()" class="org.jdesktop.swingx.JXList"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="void setSortOrder(javax.swing.SortOrder)" class="org.jdesktop.swingx.JXList"/>
        <method signature="void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])"
                class="org.jdesktop.swingx.JXList"/>
        <method signature="java.util.Comparator getComparator()" class="org.jdesktop.swingx.JXList"/>
        <method signature="void updateRendererUI()" class="org.jdesktop.swingx.JXList"/>
        <field name="highlighterChangeListener" class="org.jdesktop.swingx.JXList"/>
        <field name="filterEnabled" class="org.jdesktop.swingx.JXList"/>
        <field name="rolloverProducer" class="org.jdesktop.swingx.JXList"/>
        <field name="compoundHighlighter" class="org.jdesktop.swingx.JXList"/>
        <field name="linkController" class="org.jdesktop.swingx.JXList"/>
        <field name="uiClassID" class="org.jdesktop.swingx.JXList"/>
        <field name="dataAdapter" class="org.jdesktop.swingx.JXList"/>
        <field name="comparator" class="org.jdesktop.swingx.JXList"/>
        <field name="delegatingRenderer" class="org.jdesktop.swingx.JXList"/>
        <field name="EXECUTE_BUTTON_ACTIONCOMMAND" class="org.jdesktop.swingx.JXList"/>
        <field name="LOG" class="org.jdesktop.swingx.JXList"/>
        <field name="searchable" class="org.jdesktop.swingx.JXList"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="java.awt.Component createAction(javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void ensureVisible()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="java.awt.Dimension getPreferredSize(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="javax.swing.ActionMap getActionMap()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="javax.swing.border.Border createContentPaneBorder()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="javax.swing.border.Border createPaneBorder()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="int getTitleHeight(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="int getRoundHeight()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void configure(org.jdesktop.swingx.JXHyperlink)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="java.beans.PropertyChangeListener createPropertyListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void installKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="boolean isInBorder(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="javax.swing.event.MouseInputListener createMouseInputListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="propertyListener" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="mouseListener" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="titleHeight" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="roundHeight" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="mouseOver" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="focusListener" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <field name="group" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="void removeResourceBundle(java.lang.String)"
                class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="void addResourceBundle(java.lang.String)"
                class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="java.lang.Object access$000(org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt,java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="java.util.Map getResourceCache(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="java.lang.Object getFromResourceBundle(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <field name="resourceCache" class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <field name="resourceBundles" class="org.jdesktop.swingx.plaf.UIManagerExt$UIDefaultsExt"/>
        <class name="org.jdesktop.swingx.plaf.XListAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.XListAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.XListAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.XListAddon"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <method signature="void paintButtonPressed(java.awt.Graphics,javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <method signature="void installDefaults(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsHyperlinkUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$2"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI,org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$2"/>
        <field name="val$titledPanel" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$2"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarState valueOf(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarState[] values()"
                class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="TRAILING" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="IN_MONTH" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="DAY_OF_WEEK" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="TODAY" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="$VALUES" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="LEADING" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="TITLE" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <field name="WEEK_OF_YEAR" class="org.jdesktop.swingx.plaf.basic.CalendarState"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI,java.lang.String,org.jdesktop.swingx.JXTitledPanel)"
                class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$1"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$1"/>
        <field name="val$titledPanel" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTitledPanelUI$1"/>
        <class name="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void updateRendererUI(javax.swing.table.TableCellRenderer)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setComparator(java.util.Comparator)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.lang.String getToolTipText()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="boolean isEditable()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="boolean access$000(org.jdesktop.swingx.table.TableColumnExt)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void copyClientPropertiesFrom(org.jdesktop.swingx.table.TableColumnExt)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.util.Hashtable getClientProperties()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setPrototypeValue(java.lang.Object)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void updateHighlighterUI()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setEditable(boolean)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setToolTipText(java.lang.String)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;init&gt;(int,int)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setSortable(boolean)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="boolean isSortable()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void updateEditorUI(javax.swing.table.TableCellEditor)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.lang.Object getPrototypeValue()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.lang.Object getClientProperty(java.lang.Object)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.lang.String getTitle()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setTitle(java.lang.String)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="javax.swing.event.ChangeListener createHighlighterChangeListener()"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.table.TableColumnExt)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;init&gt;(int,int,javax.swing.table.TableCellRenderer,javax.swing.table.TableCellEditor)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setVisible(boolean)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="boolean isVisible()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void putClientProperty(java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void copyFrom(org.jdesktop.swingx.table.TableColumnExt)"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;init&gt;(int)" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="java.util.Comparator getComparator()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="boolean getResizable()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="javax.swing.event.ChangeListener getHighlighterChangeListener()"
                class="org.jdesktop.swingx.table.TableColumnExt"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="highlighterChangeListener" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="visible" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="compoundHighlighter" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="sortable" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="ignoreHighlighterStateChange" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="prototypeValue" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="comparator" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="toolTipText" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="editable" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <field name="clientProperties" class="org.jdesktop.swingx.table.TableColumnExt"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicHeaderUI,org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2"/>
        <method signature="void ancestorResized(java.awt.event.HierarchyEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2"/>
        <field name="val$header" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$2"/>
        <class name="org.jdesktop.swingx.painter.effects.InnerShadowPathEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.InnerShadowPathEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.InnerShadowPathEffect"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicHeaderUI,org.jdesktop.swingx.JXHeader)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1"/>
        <field name="val$header" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$1"/>
        <class name="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <method signature="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment[] values()"
                class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <field name="BOTTOM" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <field name="TOP" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <field name="CENTER" class="org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment"/>
        <class name="org.jdesktop.swingx.plaf.linux.LinuxLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.linux.LinuxLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.linux.LinuxLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.ErrorPaneAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.ErrorPaneAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.ErrorPaneAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.ErrorPaneAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.ErrorPaneAddon"/>
        <class name="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint)" class="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.MattePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,boolean)" class="org.jdesktop.swingx.painter.MattePainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void home(boolean)" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup access$002(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI,org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup access$000(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void revertValue(java.util.Date)" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.event.DateSelectionListener createMonthViewSelectionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$BasicDatePickerPopup createMonthViewPopup()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFormatsFromTimeZone(java.util.TimeZone)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateEditorValue()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateLocale()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.event.MouseMotionListener createMouseMotionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromValueChanged(java.util.Date,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.beans.PropertyChangeListener createPropertyChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$Handler getHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.JFormattedTextField createEditor()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateLinkDate()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void hidePopup()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallEditorListeners(javax.swing.JFormattedTextField)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.text.DateFormat[] getCustomFormats(javax.swing.JFormattedTextField)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallLinkPanelKeyboardActions(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.Action createHomeAction(boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction createTogglePopupAction()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void toggleShowPopup()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromMonthViewChanged(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromEditorChanged(javax.swing.JFormattedTextField,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void setActionEnabled(java.lang.String,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.util.Date getSelectableDate(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromEditableChanged()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.beans.PropertyChangeListener createEditorPropertyListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installLinkPanelKeyboardActions()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.event.FocusListener createFocusListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.Action createCancelAction()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateEditorListeners(javax.swing.JFormattedTextField)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.Dimension getEditorPreferredSize()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installComponents()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.Dimension getMinimumSize(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateTimeZone(java.util.TimeZone)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromSelectionModelChanged(org.jdesktop.swingx.calendar.DateSelectionModel)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFormatLocale(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.JButton access$100(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.event.ActionListener createMonthViewActionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.Action createCommitAction()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.beans.PropertyChangeListener createMonthViewPropertyListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.JButton createPopupButton()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromDateChanged()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.event.ActionListener createEditorActionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateSelectionModelListeners(org.jdesktop.swingx.calendar.DateSelectionModel)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.LayoutManager createLayoutManager()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.Dimension getPreferredSize(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover access$200(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateLinkPanel(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="int getBaseline(int,int)" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateFromSelectionChanged(org.jdesktop.swingx.event.DateSelectionEvent$EventType,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void commit()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateChildLocale(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void updateMonthViewListeners(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallComponents()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="java.awt.event.MouseListener createMouseListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void cancel()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="void installKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="boolean isPopupVisible()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="mouseListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="datePicker" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="popupButton" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="focusListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="propertyChangeListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="editorActionListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="popupRemover" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="mouseMotionListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="monthViewActionListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="popup" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="monthViewSelectionListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="monthViewPropertyListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="editorCancelAction" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="editorPropertyListener" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <field name="handler" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader$1"/>
        <method signature="java.awt.Dimension getMaximumSize()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader$1"/>
        <field name="this$0"
               class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader$1"/>
        <class name="org.jdesktop.swingx.plaf.metal.MetalStatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalStatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalStatusBarUI"/>
        <method signature="void paintBackground(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.metal.MetalStatusBarUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.metal.MetalStatusBarUI"/>
        <class name="org.jdesktop.swingx.plaf.DatePickerUI"/>
        <method signature="int getBaseline(int,int)" class="org.jdesktop.swingx.plaf.DatePickerUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.DatePickerUI"/>
        <method signature="java.util.Date getSelectableDate(java.util.Date)"
                class="org.jdesktop.swingx.plaf.DatePickerUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.DatePickerUI"/>
        <class name="org.jdesktop.swingx.plaf.LookAndFeelAddons$1"/>
        <class name="org.jdesktop.swingx.plaf.StatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.StatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.StatusBarUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$1"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler,java.lang.String,javax.swing.Icon,java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$2"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$2"/>
        <field name="val$actionKey" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler$2"/>
        <class name="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <method signature="javax.swing.border.Border createPaneBorder()"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <method signature="void &lt;init&gt;(java.awt.Window)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <method signature="void &lt;init&gt;(java.awt.Window,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <field name="w" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$CloseAction"/>
        <class name="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="boolean isResizeHandleEnabled()" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="void setUI(org.jdesktop.swingx.plaf.StatusBarUI)" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="void setResizeHandleEnabled(boolean)" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="org.jdesktop.swingx.plaf.StatusBarUI getUI()" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.JXStatusBar"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXStatusBar"/>
        <field name="resizeHandleEnabled" class="org.jdesktop.swingx.JXStatusBar"/>
        <field name="uiClassID" class="org.jdesktop.swingx.JXStatusBar"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$6"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler,org.jdesktop.swingx.decorator.HighlightPredicate)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$6"/>
        <method signature="java.awt.Component doHighlight(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$6"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$6"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$7"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$7"/>
        <method signature="boolean isHighlighted(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$7"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$7"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$3"/>
        <method signature="java.lang.String getString(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$3"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$3"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$3"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$2"/>
        <method signature="java.lang.String getString(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler,java.lang.String[])"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$2"/>
        <field name="val$monthNames" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$2"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$5"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$5"/>
        <method signature="boolean isHighlighted(java.awt.Component,org.jdesktop.swingx.decorator.ComponentAdapter)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$5"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$5"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$4"/>
        <method signature="java.lang.String getString(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$4"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler,java.text.Format)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$4"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$4"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$1"/>
        <method signature="java.lang.String getValueAsString(org.jdesktop.swingx.renderer.CellContext)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler$1"/>
        <class name="org.jdesktop.swingx.plaf.MonthViewAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.MonthViewAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.MonthViewAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.MonthViewAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$1"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$1"/>
        <class name="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="java.awt.Container getTitleBar()" class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="void setRightDecoration(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="void setLeftDecoration(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="javax.swing.JComponent getRightDecoration()" class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="javax.swing.JComponent getLeftDecoration()" class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TitledPanelUI"/>
        <class name="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="javax.swing.JInternalFrame getErrorInternalFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="java.awt.Dimension calculatePreferredSize()" class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="javax.swing.JFrame getErrorFrame(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="javax.swing.JDialog getErrorDialog(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.ErrorPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <method signature="void paint(java.awt.Graphics2D,javax.swing.JComponent,int,int)"
                class="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <method signature="void paint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.painter.Painter)"
                class="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <field name="p" class="org.jdesktop.swingx.plaf.PainterUIResource"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="java.util.Date previousDay(java.util.Calendar,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="boolean isIntervalMode()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="java.util.Date nextWeek(java.util.Calendar,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="void addToSelection(int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="java.util.Date nextDay(java.util.Calendar,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="void traverse(int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="java.util.Date previousWeek(java.util.Calendar,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="ACCEPT_SELECTION" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="SELECT_DAY_PREVIOUS_WEEK" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="SELECT_NEXT_DAY" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="SELECT_PREVIOUS_DAY" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="SELECT_DAY_NEXT_WEEK" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="action" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="ADJUST_SELECTION_NEXT_DAY" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="CANCEL_SELECTION" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="ADJUST_SELECTION_NEXT_WEEK"
               class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="ADJUST_SELECTION_PREVIOUS_DAY"
               class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <field name="ADJUST_SELECTION_PREVIOUS_WEEK"
               class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$KeyboardAction"/>
        <class name="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneContainerAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicLookAndFeelAddons"/>
        <method signature="void initialize()" class="org.jdesktop.swingx.plaf.basic.BasicLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicLookAndFeelAddons"/>
        <method signature="void uninitialize()" class="org.jdesktop.swingx.plaf.basic.BasicLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="javax.swing.plaf.BorderUIResource createBorder()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void uninstallListeners(org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler getHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="java.awt.Insets getSeparatorInsets(java.awt.Insets)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="java.awt.LayoutManager createLayout()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void installDefaults(org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void paintSeparator(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="boolean includeSeparators()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="java.awt.event.MouseMotionListener createMouseMotionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void paintBackground(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void paint(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void uninstallDefaults(org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="int getSeparatorWidth()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="java.awt.event.MouseListener createMouseListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="java.beans.PropertyChangeListener createPropertyChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void installListeners(org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="mouseListener" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="$assertionsDisabled" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="AUTO_ADD_SEPARATOR" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="mouseMotionListener" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="statusBar" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="TEMP_INSETS" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="propertyChangeListener" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <field name="handler" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI"/>
        <class name="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <method signature="org.jdesktop.swingx.painter.AbstractAreaPainter$Style[] values()"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <method signature="org.jdesktop.swingx.painter.AbstractAreaPainter$Style valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <field name="BOTH" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <field name="OUTLINE" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <field name="FILLED" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <field name="NONE" class="org.jdesktop.swingx.painter.AbstractAreaPainter$Style"/>
        <class name="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <method signature="org.jdesktop.swingx.painter.CapsulePainter$Portion[] values()"
                class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <method signature="org.jdesktop.swingx.painter.CapsulePainter$Portion valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="Right" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="Bottom" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="Top" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="Full" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <field name="Left" class="org.jdesktop.swingx.painter.CapsulePainter$Portion"/>
        <class name="org.jdesktop.swingx.plaf.MultiThumbSliderUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.MultiThumbSliderUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.MultiThumbSliderUI"/>
        <class name="org.jdesktop.swingx.painter.effects.AreaEffect"/>
        <method signature="void apply(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.effects.AreaEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.AreaEffect"/>
        <class name="org.jdesktop.swingx.error.ErrorReporter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.error.ErrorReporter"/>
        <method signature="void reportError(org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.error.ErrorReporter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <method signature="boolean isEnabled()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$PreviousTipAction"/>
        <class name="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void &lt;init&gt;(boolean)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="org.jdesktop.swingx.painter.AbstractPainter$Interpolation getInterpolation()"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void configureGraphics(java.awt.Graphics2D)"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setDirty(boolean)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setInterpolation(org.jdesktop.swingx.painter.AbstractPainter$Interpolation)"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setVisible(boolean)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean isVisible()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setFilters(java.awt.image.BufferedImageOp[])"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="java.awt.image.BufferedImageOp[] getFilters()"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void validate(java.lang.Object)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void paint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean isAntialiasing()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean shouldUseCache()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setCacheable(boolean)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean isDirty()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean isCacheable()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="boolean isCacheCleared()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void setAntialiasing(boolean)" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <method signature="void clearCache()" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="cacheCleared" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="cachedImage" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="visible" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="dirty" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="interpolation" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="antialiasing" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="filters" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <field name="cacheable" class="org.jdesktop.swingx.painter.AbstractPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="java.lang.String[] access$000(org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="java.beans.PropertyChangeListener getTargetListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void uninstallTarget()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void installTarget()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void access$100(org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void updateFromTarget()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void updateLocale()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <field name="tsv" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <field name="linkListener" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <field name="monthNames" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$ZoomOutAction"/>
        <class name="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createAlternateStriping(java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createSimpleStriping()"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createAlternateStriping()"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createSimpleStriping(java.awt.Color,int)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createAlternateStriping(int)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createSimpleStriping(java.awt.Color)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createAlternateStriping(java.awt.Color,java.awt.Color,int)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter createSimpleStriping(int)"
                class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="FLORAL_WHITE" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="LINE_PRINTER" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="QUICKSILVER" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="LEDGER" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="GENERIC_GRAY" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="CLASSIC_LINE_PRINTER" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="BEIGE" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <field name="NOTEPAD" class="org.jdesktop.swingx.decorator.HighlighterFactory"/>
        <class name="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void configureGraphics(java.awt.Graphics2D)"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="boolean isClipPreserved()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void setClipPreserved(boolean)" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.painter.Painter[])"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="java.awt.geom.AffineTransform getTransform()"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void setCheckingDirtyChildPainters(boolean)"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void validate(java.lang.Object)" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void setTransform(java.awt.geom.AffineTransform)"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="boolean shouldUseCache()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="org.jdesktop.swingx.painter.Painter[] getPainters()"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void setPainters(org.jdesktop.swingx.painter.Painter[])"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="boolean isDirty()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void clearLocalCache()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="boolean isCheckingDirtyChildPainters()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <method signature="void clearCache()" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <field name="transform" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <field name="clearLocalCacheOnly" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <field name="painters" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <field name="clipPreserved" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <field name="checkForDirtyChildPainters" class="org.jdesktop.swingx.painter.CompoundPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <method signature="org.jdesktop.swingx.JXLabel$MultiLineSupport getMultiLineSupport()"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicHeaderUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <method signature="void paint(java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicHeaderUI$DescriptionPane"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <method signature="java.awt.Insets getBorderInsets(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <method signature="void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <method signature="boolean isBorderOpaque()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <method signature="void &lt;init&gt;(java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <field name="color" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ContentPaneBorder"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="javax.swing.plaf.BorderUIResource createBorder()"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="int getSeparatorWidth()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="void paintSeparator(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="void paintBackground(java.awt.Graphics2D,org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicStatusBarUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame"/>
        <class name="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="org.jdesktop.swingx.plaf.ErrorPaneUI getUI()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="org.jdesktop.swingx.error.ErrorReporter getErrorReporter()"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void setErrorReporter(org.jdesktop.swingx.error.ErrorReporter)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="javax.swing.JInternalFrame createInternalFrame(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void setIcon(javax.swing.Icon)" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showInternalFrame(java.lang.Throwable)" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="javax.swing.Icon getIcon()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void setErrorInfo(org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showInternalFrame(java.awt.Component,org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="javax.swing.JFrame createFrame(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showInternalFrame(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showFrame(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="org.jdesktop.swingx.error.ErrorInfo getErrorInfo()" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showDialog(java.awt.Component,org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showFrame(java.awt.Component,org.jdesktop.swingx.error.ErrorInfo)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showDialog(java.awt.Component,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showFrame(java.lang.Throwable)" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void showDialog(java.lang.Throwable)" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void setUI(org.jdesktop.swingx.plaf.ErrorPaneUI)" class="org.jdesktop.swingx.JXErrorPane"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="reporter" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="icon" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="REPORT_ACTION_KEY" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="errorInfo" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="uiClassID" class="org.jdesktop.swingx.JXErrorPane"/>
        <field name="FATAL_ACTION_KEY" class="org.jdesktop.swingx.JXErrorPane"/>
        <class name="org.jdesktop.swingx.painter.RectanglePainter$1"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.RectanglePainter$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$AbstractAreaPainter$Style"
               class="org.jdesktop.swingx.painter.RectanglePainter$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <method signature="javax.swing.JComponent getThumbRendererComponent(org.jdesktop.swingx.JXMultiThumbSlider,int,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <method signature="void paintComponent(java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$BasicThumbRenderer"/>
        <class name="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void drawAt(java.awt.Graphics2D,int,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="int getPoints()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Shape getScaledDefaultPoint(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Color getHighlightColor()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setTrailLength(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setPoints(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="boolean isPaintCentered()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="float calcLengthOfQuad(float[],java.awt.geom.Point2D$Float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.geom.Point2D$Float getXY(float,float,float,float,float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="float calcLine(float[],java.awt.geom.Point2D$Float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setPaintCentered(boolean)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setTrajectory(java.awt.Shape)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Color calcFrameColor(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Shape getPointShape()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setFrame(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="float calcCube(float[],java.awt.geom.Point2D$Float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="int getTrailLength()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="int getFrame()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="org.jdesktop.swingx.JXBusyLabel$Direction getDirection()"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.geom.Point2D$Float getXY(float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setBaseColor(java.awt.Color)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setDirection(org.jdesktop.swingx.JXBusyLabel$Direction)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void paintRotatedCenteredShapeAtPoint(java.awt.geom.Point2D$Float,java.awt.geom.Point2D$Float,java.awt.Graphics2D)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void &lt;init&gt;(int)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Color getBaseColor()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setHighlightColor(java.awt.Color)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Shape getTrajectory()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void init(java.awt.Shape,java.awt.Shape,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.Shape getScaledDefaultTrajectory(int)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Shape,java.awt.Shape)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="java.awt.geom.Point2D$Float calcPoint(float,java.awt.geom.Point2D$Float,float[],int,int)"
                class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void setPointShape(java.awt.Shape)" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="baseColor" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="frame" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="pointShape" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="highlightColor" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="direction" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="trajectory" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="paintCentered" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="trailLength" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <field name="points" class="org.jdesktop.swingx.painter.BusyPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$1"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$1"/>
        <class name="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <method signature="void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <method signature="boolean isMouseOverBorder()"
                class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.metal.MetalTaskPaneUI$MetalPaneBorder"/>
        <class name="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void paintBorderGlow(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void setCenterColor(java.awt.Color)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="java.awt.Color getCenterColor()"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition getBorderPosition()"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void setEdgeColor(java.awt.Color)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void setBorderPosition(org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="java.awt.Color interpolateColor(float,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void &lt;init&gt;(java.awt.Color,java.awt.Color,int)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="java.awt.Color getEdgeColor()" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <field name="centerColor" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <field name="edgeColor" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <field name="borderPosition" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <method signature="boolean isEnabled()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$NextTipAction"/>
        <class name="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void setPainter(org.jdesktop.swingx.painter.Painter)"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void paintComponent(java.awt.Graphics)"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="org.jdesktop.swingx.painter.Painter getPainter()"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void removeTarget(javax.swing.JComponent)"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="java.awt.Point calcOffset(javax.swing.JComponent)"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void addTarget(javax.swing.JComponent)"
                class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <field name="painter" class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <field name="targets" class="org.jdesktop.swingx.painter.PainterGlasspane"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="boolean isHandleAreaPoint(java.awt.Point)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseClicked(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseMoved(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseEntered(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="int getHandleBoundary()" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseExited(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mousePressed(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicStatusBarUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseDragged(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void mouseReleased(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicStatusBarUI,org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <field name="handleBoundary" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <field name="window" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <field name="startingPoint" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <field name="validPress" class="org.jdesktop.swingx.plaf.basic.BasicStatusBarUI$Handler"/>
        <class name="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;init&gt;(java.awt.image.BufferedImage)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="boolean isScaleToFit()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="boolean isHorizontalRepeat()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setScaleType(org.jdesktop.swingx.painter.ImagePainter$ScaleType)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="org.jdesktop.swingx.painter.ImagePainter$ScaleType getScaleType()"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void loadImage()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;init&gt;(java.net.URL)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;init&gt;(java.net.URL,org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment,org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;init&gt;(java.awt.image.BufferedImage,org.jdesktop.swingx.painter.AbstractLayoutPainter$HorizontalAlignment,org.jdesktop.swingx.painter.AbstractLayoutPainter$VerticalAlignment)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setVerticalRepeat(boolean)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="double getImageScale()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setHorizontalRepeat(boolean)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void drawBorder(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setImage(java.awt.image.BufferedImage)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="boolean isVerticalRepeat()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setScaleToFit(boolean)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setImageScale(double)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="java.awt.image.BufferedImage getImage()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="java.lang.String getImageString()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void setImageString(java.lang.String)" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void drawBackground(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.ImagePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="imageString" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="scaleType" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="verticalRepeat" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="imageScale" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="img" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="horizontalRepeat" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="LOG" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="log" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="scaleToFit" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <field name="imageURL" class="org.jdesktop.swingx.painter.ImagePainter"/>
        <class name="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <method signature="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <method signature="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition[] values()"
                class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <field name="Centered" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <field name="Outside" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <field name="Inside" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$BorderPosition"/>
        <class name="org.jdesktop.swingx.painter.AlphaPainter"/>
        <method signature="float getAlpha()" class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <method signature="void setAlpha(float)" class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <field name="alpha" class="org.jdesktop.swingx.painter.AlphaPainter"/>
        <class name="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean intersects(double,double,double,double)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean contains(java.awt.geom.Point2D)" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean intersects(java.awt.geom.Rectangle2D)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="java.awt.geom.Rectangle2D getBounds2D()" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean contains(double,double)" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="java.awt.Rectangle getBounds()" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="void &lt;init&gt;(java.awt.Shape)" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean contains(double,double,double,double)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <method signature="boolean contains(java.awt.geom.Rectangle2D)"
                class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <field name="s" class="org.jdesktop.swingx.plaf.ShapeUIResource"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="void &lt;init&gt;(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="void &lt;init&gt;(javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="void setGroup(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton[])"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="java.awt.Dimension getRealPreferredSize()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="java.awt.Dimension getPreferredSize()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <field name="group" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$EqualSizeJButton"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <method signature="javax.swing.text.html.StyleSheet getStyleSheet()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <method signature="javax.swing.text.ViewFactory getViewFactory()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <method signature="javax.swing.text.Document createDefaultDocument(java.awt.Font,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <field name="defaultStyles" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit"/>
        <class name="org.jdesktop.swingx.JXTable"/>
        <method signature="void initPerColumnStringValues()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.lang.String getUIString(java.lang.String)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.Action createPackAllAction()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableColumn getColumn(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void columnAdded(javax.swing.event.TableColumnModelEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void columnPropertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void initDefaultStringValues()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void packColumn(int,int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSelectionForeground(java.awt.Color)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean getSortsOnUpdates()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateRendererUI(java.lang.Object)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setShowGrid(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateColumnUI(javax.swing.table.TableColumn)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.sort.StringValueRegistry createDefaultStringValueRegistry()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setTerminateEditOnFocusLost(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableCellRenderer getCellRenderer(int,int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setValueAt(java.lang.Object,int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void createDefaultEditors()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="int getSelectionMode()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void toggleSortOrder(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void removeColumns()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.lang.String getStringAt(int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSortsOnUpdates(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.JComponent createDefaultColumnControl()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateHorizontalAction()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.table.TableColumnExt getColumnExt(java.lang.Object)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(javax.swing.table.TableModel,javax.swing.table.TableColumnModel)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void scrollCellToVisible(int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(javax.swing.table.TableModel,javax.swing.table.TableColumnModel,javax.swing.ListSelectionModel)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean getAutoCreateRowSorter()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateSortableAfterColumnChanged(javax.swing.table.TableColumn,boolean)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setFillsViewportHeight(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void initFocusBindings()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void configureEnclosingScrollPane()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.event.ChangeListener getHighlighterChangeListener()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnFactory(org.jdesktop.swingx.table.ColumnFactory)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.util.List getColumns(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setAutoCreateRowSorter(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setRowHeightEnabled(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnSequence(java.lang.Object[])" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnMargin(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void removeEditor()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void configureSorterProperties()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setDefaultRenderer(java.lang.Class,javax.swing.table.TableCellRenderer)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void initializeColumnWidths()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isCellEditable(int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isFocusCycleRoot()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isTerminateEditOnFocusLost()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void toggleSortOrder(java.lang.Object)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateComparatorAfterColumnChanged(javax.swing.table.TableColumn,java.util.Comparator)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void resetCalculatedScrollableSize(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnControlVisible(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isUpdate(javax.swing.event.TableModelEvent)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void createDefaultRenderers()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(java.lang.Object[][],java.lang.Object[])"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isFocusOwnerDescending()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void configureColumnControl()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void init()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void scrollRowToVisible(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.awt.Component prepareRenderer(javax.swing.table.TableCellRenderer,int,int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean editCellAt(int,int,java.util.EventObject)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.table.TableColumnExt getColumnExt(int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(java.util.Vector,java.util.Vector)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.Action createPackSelectedAction()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void columnSelectionChanged(javax.swing.event.ListSelectionEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isDataChanged(javax.swing.event.TableModelEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.table.ColumnFactory getColumnFactory()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateStringValueRegistryColumnClasses()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSearchable(org.jdesktop.swingx.search.Searchable)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateLocaleActionState(java.lang.String,java.util.Locale)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void unconfigureColumnControl()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setHorizontalScrollEnabled(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean hasExcessWidth()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void transferFocus()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void unconfigureEnclosingScrollPane()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableColumnModel createDefaultColumnModel()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableColumn getResizingColumn()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void createDefaultColumnsFromModel()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void transferFocusBackward()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.rollover.TableRolloverController createLinkController()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isSortable(java.lang.Object)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.RowSorter createDefaultRowSorter()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.JTableHeader createDefaultTableHeader()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isEditable()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isHorizontalScrollEnabled()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void initializeColumnPreferredWidth(javax.swing.table.TableColumn)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.JComponent getColumnControl()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void removeNotify()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateStringValueForColumn(javax.swing.table.TableColumn,javax.swing.table.TableCellRenderer)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.search.Searchable getSearchable()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setRowSorter(javax.swing.RowSorter)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setRowHeight(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setLazyEditor(java.lang.Class,java.lang.String)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean getScrollableTracksViewportWidth()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void doFind()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.SortOrder getSortOrder(java.lang.Object)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isRowHeightEnabled()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void createAndAddColumns()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSelectionBackground(java.awt.Color)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableColumn getSortedColumn()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setAutoResizeMode(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter(int,int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.util.List getColumns()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void columnMarginChanged(javax.swing.event.ChangeEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void initActionsAndBindings()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateColumnControlUI()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.Action createFocusTransferAction(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="int getVisibleRowCount()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void hackLeadAnchor(javax.swing.event.TableModelEvent)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.SortOrder getSortOrder(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isAutoStartEditOnKeyStroke()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void scrollColumnToVisible(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setVisibleColumnCount(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableCellRenderer getNewDefaultRenderer(java.lang.Class)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void resetDefaultTableCellRendererColors(java.awt.Component,int,int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isColumnControlVisible()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void hackEditorRemover()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void &lt;init&gt;(javax.swing.table.TableModel)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void packTable(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.Action createCancelAction()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.Action createHorizontalScrollAction()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean hasRealizedParent()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="int getColumnCount(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.awt.Dimension getPreferredScrollableViewportSize()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.table.TableColumn getColumnByIdentifier(java.lang.Object)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.util.logging.Logger access$000()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateRowHeightUI(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isRolloverEnabled()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void packSelected()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setLocale(java.util.Locale)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setAutoStartEditOnKeyStroke(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void packColumn(int,int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSortOrder(java.lang.Object,javax.swing.SortOrder)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setGridColor(java.awt.Color)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnModel(javax.swing.table.TableColumnModel)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateHighlighterUI()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateLocaleState(java.util.Locale)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setEditable(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setComponentOrientation(java.awt.ComponentOrientation)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateEditingAfterColumnChanged(javax.swing.table.TableColumn,boolean)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.rollover.RolloverProducer createRolloverProducer()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setRolloverEnabled(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setVisibleRowCount(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean getAutoCreateColumnsFromModel()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSortable(boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isSortable()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isSortable(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setLazyValue(java.util.Hashtable,java.lang.Class,java.lang.String)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setColumnControl(javax.swing.JComponent)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void updateEditorUI(java.lang.Object)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="javax.swing.event.ChangeListener createHighlighterChangeListener()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.awt.Component prepareEditor(javax.swing.table.TableCellEditor,int,int)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.rollover.TableRolloverController getLinkController()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="java.lang.String getUIString(java.lang.String,java.util.Locale)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.sort.SortController getSortController()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void resetSortOrder()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isEditingFocusCycleRoot()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void doLayout()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void tableChanged(javax.swing.event.TableModelEvent)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setPreferredScrollableViewportSize(java.awt.Dimension)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="int getVisibleColumnCount()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="boolean isStructureChanged(javax.swing.event.TableModelEvent)"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])"
                class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setShowGrid(boolean,boolean)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="int rowAtPoint(java.awt.Point)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void adjustComponentOrientation(java.awt.Component)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void packAll()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="int getColumnMargin()" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void adminSetRowHeight(int)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setSortOrder(int,javax.swing.SortOrder)" class="org.jdesktop.swingx.JXTable"/>
        <method signature="void setModel(javax.swing.table.TableModel)" class="org.jdesktop.swingx.JXTable"/>
        <field name="oldAutoResizeMode" class="org.jdesktop.swingx.JXTable"/>
        <field name="sortable" class="org.jdesktop.swingx.JXTable"/>
        <field name="inLayout" class="org.jdesktop.swingx.JXTable"/>
        <field name="verticalScrollPolicy" class="org.jdesktop.swingx.JXTable"/>
        <field name="columnControlButton" class="org.jdesktop.swingx.JXTable"/>
        <field name="LOG" class="org.jdesktop.swingx.JXTable"/>
        <field name="autoCreateRowSorter" class="org.jdesktop.swingx.JXTable"/>
        <field name="HORIZONTALSCROLL_ACTION_COMMAND" class="org.jdesktop.swingx.JXTable"/>
        <field name="intelliMode" class="org.jdesktop.swingx.JXTable"/>
        <field name="FOCUS_PREVIOUS_COMPONENT" class="org.jdesktop.swingx.JXTable"/>
        <field name="rolloverProducer" class="org.jdesktop.swingx.JXTable"/>
        <field name="compoundHighlighter" class="org.jdesktop.swingx.JXTable"/>
        <field name="linkController" class="org.jdesktop.swingx.JXTable"/>
        <field name="dataAdapter" class="org.jdesktop.swingx.JXTable"/>
        <field name="PACKSELECTED_ACTION_COMMAND" class="org.jdesktop.swingx.JXTable"/>
        <field name="PACKALL_ACTION_COMMAND" class="org.jdesktop.swingx.JXTable"/>
        <field name="sortsOnUpdates" class="org.jdesktop.swingx.JXTable"/>
        <field name="ignoreAddColumn" class="org.jdesktop.swingx.JXTable"/>
        <field name="columnFactory" class="org.jdesktop.swingx.JXTable"/>
        <field name="editorRemover" class="org.jdesktop.swingx.JXTable"/>
        <field name="USE_DTCR_COLORMEMORY_HACK" class="org.jdesktop.swingx.JXTable"/>
        <field name="visibleRowCount" class="org.jdesktop.swingx.JXTable"/>
        <field name="stringValueRegistry" class="org.jdesktop.swingx.JXTable"/>
        <field name="UIPREFIX" class="org.jdesktop.swingx.JXTable"/>
        <field name="FOCUS_NEXT_COMPONENT" class="org.jdesktop.swingx.JXTable"/>
        <field name="editable" class="org.jdesktop.swingx.JXTable"/>
        <field name="MATCH_HIGHLIGHTER" class="org.jdesktop.swingx.JXTable"/>
        <field name="highlighterChangeListener" class="org.jdesktop.swingx.JXTable"/>
        <field name="resetDefaultTableCellRendererHighlighter" class="org.jdesktop.swingx.JXTable"/>
        <field name="columnControlVisible" class="org.jdesktop.swingx.JXTable"/>
        <field name="calculatedPrefScrollableViewportSize" class="org.jdesktop.swingx.JXTable"/>
        <field name="isXTableRowHeightSet" class="org.jdesktop.swingx.JXTable"/>
        <field name="visibleColumnCount" class="org.jdesktop.swingx.JXTable"/>
        <field name="searchable" class="org.jdesktop.swingx.JXTable"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <field name="slider" class="org.jdesktop.swingx.plaf.basic.BasicMultiThumbSliderUI"/>
        <class name="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <method signature="org.jdesktop.swingx.painter.GlossPainter$GlossPosition[] values()"
                class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <method signature="void &lt;init&gt;(java.lang.String,int)"
                class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <method signature="org.jdesktop.swingx.painter.GlossPainter$GlossPosition valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <field name="BOTTOM" class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <field name="TOP" class="org.jdesktop.swingx.painter.GlossPainter$GlossPosition"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,java.awt.Window)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,java.awt.Window,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <field name="w" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ResizeWindow"/>
        <class name="org.jdesktop.swingx.plaf.ComponentAddon"/>
        <method signature="void initialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.ComponentAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.ComponentAddon"/>
        <method signature="void uninitialize(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.ComponentAddon"/>
        <method signature="java.lang.String getName()" class="org.jdesktop.swingx.plaf.ComponentAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintFocus(java.awt.Graphics,java.awt.Color,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintTitleBackground(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="java.awt.Dimension getPreferredSize(org.jdesktop.swingx.JXTaskPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintChevronControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="boolean isMouseOverBorder()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="java.awt.Insets getBorderInsets(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintTitle(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,java.awt.Color,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void configureLabel(org.jdesktop.swingx.JXTaskPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintOvalAroundControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="boolean isBorderOpaque()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <method signature="void paintRectAroundControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="specialTitleBackground" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="specialTitleOver" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="borderColor" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="titleOver" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="titleBackgroundGradientStart" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="label" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="specialTitleForeground" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="titleBackgroundGradientEnd" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <field name="titleForeground" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder"/>
        <class name="org.jdesktop.swingx.painter.effects.ShadowPathEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.ShadowPathEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.ShadowPathEffect"/>
        <class name="org.jdesktop.swingx.painter.ImagePainter$1"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.ImagePainter$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$AbstractLayoutPainter$VerticalAlignment"
               class="org.jdesktop.swingx.painter.ImagePainter$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$AbstractAreaPainter$Style"
               class="org.jdesktop.swingx.painter.ImagePainter$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$AbstractLayoutPainter$HorizontalAlignment"
               class="org.jdesktop.swingx.painter.ImagePainter$1"/>
        <class name="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void setRoundHeight(int)" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(int,int,int,int,int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="boolean isRounded()" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="java.awt.geom.RectangularShape calculateShape(int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void drawBorder(java.awt.Graphics2D,java.awt.geom.RectangularShape,int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Insets,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void setRounded(boolean)" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(int,int,int,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void setRoundWidth(int)" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,java.awt.Paint,float,org.jdesktop.swingx.painter.AbstractAreaPainter$Style)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(int,int,int,int,int,int,boolean,java.awt.Paint,float,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="int getRoundWidth()" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="int getRoundHeight()" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void drawBackground(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <method signature="void &lt;init&gt;(int,int,int,int)" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <field name="roundWidth" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <field name="height" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <field name="width" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <field name="roundHeight" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <field name="rounded" class="org.jdesktop.swingx.painter.RectanglePainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="boolean isInside(java.awt.Rectangle,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="boolean contains(javax.swing.JComponent,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paintUnderline(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paintButtonPressed(java.awt.Graphics,javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="javax.swing.text.View access$002(org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI,javax.swing.text.View)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="java.awt.Color getFocusColor()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paintFocus(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void installListeners(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paint(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="java.awt.Rectangle getIconTextRect(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void installDefaults(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void uninstallListeners(javax.swing.AbstractButton)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <method signature="void paintHTMLText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String,javax.swing.text.View)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="ulv" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="viewRect" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="focusColor" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="dashedRectGapX" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="iconRect" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="dashedRectGapHeight" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="dashedRectGapY" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="dashedRectGapWidth" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="pcListener" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <field name="textRect" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1"/>
        <method signature="void updateUI()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI,javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2"/>
        <method signature="void run()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$2"/>
        <class name="org.jdesktop.swingx.plaf.HeaderUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.HeaderUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.HeaderUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="javax.swing.AbstractButton createNavigationButton()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="void setActions(javax.swing.Action,javax.swing.Action,javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="void setFont(java.awt.Font)" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="org.jdesktop.swingx.JXHyperlink createZoomLink()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <field name="zoomOutLink" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <field name="nextButton" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <field name="prevButton" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeader"/>
        <class name="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setSortable(boolean)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="boolean isSortable()" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void toggleSortOrder(int)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setStringValueProvider(org.jdesktop.swingx.sort.StringValueProvider)"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="boolean isSortable(int)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="javax.swing.SortOrder getSortOrder(int)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setSortsOnUpdates(boolean)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="java.util.Comparator getComparator(int)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setRowFilter(javax.swing.RowFilter)" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setSortOrderCycle(javax.swing.SortOrder[])"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="org.jdesktop.swingx.sort.StringValueProvider getStringValueProvider()"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="boolean getSortsOnUpdates()" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void resetSortOrders()" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="javax.swing.SortOrder[] getSortOrderCycle()"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setComparator(int,java.util.Comparator)"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="javax.swing.RowFilter getRowFilter()" class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setSortOrder(int,javax.swing.SortOrder)"
                class="org.jdesktop.swingx.sort.SortController"/>
        <method signature="void setSortable(int,boolean)" class="org.jdesktop.swingx.sort.SortController"/>
        <class name="org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.LookAndFeelAddons$1)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons$UpdateAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$1"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$1"/>
        <field name="val$this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$1"/>
        <field name="this$1" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$1"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$TogglePopupAction"/>
        <class name="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="void removeResourceBundle(java.lang.String)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Shape getShape(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="boolean getBoolean(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="javax.swing.Icon getSafeIcon(java.lang.Object,javax.swing.Icon)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Color getColor(java.lang.Object)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="void addResourceBundle(java.lang.String)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Insets getSafeInsets(java.lang.Object,java.awt.Insets)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.lang.String getString(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.lang.String getString(java.lang.Object)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Color getSafeColor(java.lang.Object,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="int getInt(java.lang.Object)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="javax.swing.border.Border getSafeBorder(java.lang.Object,javax.swing.border.Border)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Color getColor(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="org.jdesktop.swingx.painter.Painter getPainter(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="int getInt(java.lang.Object,java.util.Locale)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Shape getShape(java.lang.Object)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="org.jdesktop.swingx.painter.Painter getPainter(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="boolean getBoolean(java.lang.Object)" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Font getSafeFont(java.lang.Object,java.awt.Font)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="java.awt.Dimension getSafeDimension(java.lang.Object,java.awt.Dimension)"
                class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <field name="uiDefaultsExt" class="org.jdesktop.swingx.plaf.UIManagerExt"/>
        <class name="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="boolean isGTK()" class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void addLinuxDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.DatePickerAddon"/>
        <class name="org.jdesktop.swingx.plaf.LoginPaneUI"/>
        <method signature="java.awt.Image getBanner()" class="org.jdesktop.swingx.plaf.LoginPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.LoginPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.LoginPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <method signature="void componentHidden(java.awt.event.ComponentEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <field name="val$this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <field name="val$closeAction" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <field name="this$1" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXInternalErrorFrame$2"/>
        <class name="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.lang.String toString()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void setURLString(java.lang.String)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.beans.PropertyChangeSupport getPropertyChangeSupport()"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.net.URL createURL(java.lang.String,java.lang.String[])"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void setURL(java.net.URL)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.net.URL getURL()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void setText(java.lang.String)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void setTarget(java.lang.String)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.lang.String getText()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.net.URL)"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void setVisited(boolean)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void firePropertyChange(java.lang.String,boolean,boolean)"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="boolean getVisited()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.net.URL getDefaultURL()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void removePropertyChangeListener(java.beans.PropertyChangeListener)"
                class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="boolean equals(java.lang.Object)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="int hashCode()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="java.lang.String getTarget()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <method signature="int compareTo(java.lang.Object)" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="visited" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="propertyChangeSupport" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="defaultURL" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="text" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="defaultURLString" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="VISITED_PROPERTY" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="target" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="LOG" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <field name="url" class="org.jdesktop.swingx.hyperlink.LinkModel"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI,java.awt.Dimension)"
                class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI$1"/>
        <method signature="void init(java.awt.Shape,java.awt.Shape,java.awt.Color,java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI$1"/>
        <field name="val$dim" class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI$1"/>
        <class name="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.util.logging.Level getErrorLevel()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.lang.String getBasicErrorMessage()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.lang.String getTitle()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.lang.Throwable getErrorException()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable,java.util.logging.Level,java.util.Map)"
                class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.lang.String getDetailedErrorMessage()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.lang.String getCategory()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <method signature="java.util.Map getState()" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="errorException" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="category" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="title" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="state" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="detailedErrorMessage" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="basicErrorMessage" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <field name="errorLevel" class="org.jdesktop.swingx.error.ErrorInfo"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <method signature="void init(org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,java.awt.Dialog,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,java.awt.Frame,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorDialog"/>
        <class name="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void initialize()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void setAddon(org.jdesktop.swingx.plaf.LookAndFeelAddons)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void contribute(org.jdesktop.swingx.plaf.ComponentAddon)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="org.jdesktop.swingx.plaf.LookAndFeelAddons getAddon()"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void setAddon(java.lang.String)" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void setTrackingLookAndFeelChanges(boolean)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent,java.lang.Class)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void maybeInitialize()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void uncontribute(org.jdesktop.swingx.plaf.ComponentAddon)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void unloadDefaults(java.lang.Object[])" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void setAddon(java.lang.Class)" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="boolean isTrackingLookAndFeelChanges()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void uninitialize()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="java.lang.String getBestMatchAddonClassName()"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void loadDefaults(java.lang.Object[])" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void installBackgroundPainter(javax.swing.JComponent,java.lang.String)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="java.lang.String getSystemAddonClassName()"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <method signature="void uninstallBackgroundPainter(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <field name="trackingChanges" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <field name="changeListener" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <field name="contributedComponents" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <field name="APPCONTEXT_INITIALIZED" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <field name="currentAddon" class="org.jdesktop.swingx.plaf.LookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="void configureGraphics(java.awt.Graphics2D)"
                class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,java.lang.Object)"
                class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="void access$000(org.jdesktop.swingx.painter.AbstractPainter$Interpolation,java.awt.Graphics2D)"
                class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] values()"
                class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <method signature="org.jdesktop.swingx.painter.AbstractPainter$Interpolation valueOf(java.lang.String)"
                class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <field name="$VALUES" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <field name="value" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <field name="NearestNeighbor" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <field name="Bilinear" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <field name="Bicubic" class="org.jdesktop.swingx.painter.AbstractPainter$Interpolation"/>
        <class name="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void setSquareSize(double)" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="java.awt.Paint getLightPaint()" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="java.awt.Paint getDarkPaint()" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="double getSquareSize()" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void setLightPaint(java.awt.Paint)" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint,java.awt.Paint,double)"
                class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void setDarkPaint(java.awt.Paint)" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="java.awt.Paint getCheckerPaint(java.lang.Object)"
                class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <field name="darkPaint" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <field name="squareSize" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <field name="lightPaint" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <field name="checkerPaint" class="org.jdesktop.swingx.painter.CheckerboardPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void unload(boolean)" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void load()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicDatePickerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <method signature="void unload()" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <field name="loaded" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <field name="manager" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicDatePickerUI$PopupRemover"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <method signature="java.awt.Insets getBorderInsets(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <method signature="void paintBorder(java.awt.Component,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <method signature="boolean isBorderOpaque()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsTipOfTheDayUI$TipAreaBorder"/>
        <class name="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1200(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1300(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$700(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1000(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$900(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$100(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$800(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1400(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$600(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1100(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$000(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$400(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1700(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$300(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="javax.swing.border.Border createPaneBorder()"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1600(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1500(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="void update(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$500(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$1800(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <method signature="int access$200(org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.misc.GlossyTaskPaneUI"/>
        <class name="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="java.awt.Font getFont()" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="java.lang.String calculateText(java.lang.Object)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="java.awt.Font calculateFont(java.lang.Object)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="java.lang.String getText()" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.awt.Font,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void setFont(java.awt.Font)" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void setText(java.lang.String)" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.TextPainter"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.awt.Font)"
                class="org.jdesktop.swingx.painter.TextPainter"/>
        <field name="text" class="org.jdesktop.swingx.painter.TextPainter"/>
        <field name="font" class="org.jdesktop.swingx.painter.TextPainter"/>
        <class name="org.jdesktop.swingx.plaf.TaskPaneUI"/>
        <method signature="java.awt.Component createAction(javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.TaskPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.TaskPaneUI"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI$ClassicPaneBorder"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI$ClassicPaneBorder"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI$ClassicPaneBorder"/>
        <method signature="void paintExpandedControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)"
                class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI$ClassicPaneBorder"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.windows.WindowsClassicTaskPaneUI$ClassicPaneBorder"/>
        <class name="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <field name="HOMESTEAD_VISUAL_STYLE" class="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <field name="VISTA_VISUAL_STYLE" class="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <field name="SILVER_VISUAL_STYLE" class="org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getCalendarHeaderHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.event.MouseMotionListener createMouseMotionListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paint(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.beans.PropertyChangeListener createPropertyChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintMonth(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installDelegate()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getFirstDisplayedDay()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Dimension getDaySize()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void calculateMonthGridLayoutProperties()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintDays(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int calculateCalendarGridWidth()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintWeekOfYearSeparator(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getDayAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$1002(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void checkValidRow(int,int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean isZoomable()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$1202(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean isVisible(java.util.Date)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void traverseMonth(int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void updateLocale(boolean)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthBounds(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int calculateCalendarGridY()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getLastDisplayedDay()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int calculateCalendarGridX()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void setUsingKeyboard(boolean)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$1102(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintDayOfMonth(java.awt.Graphics,java.awt.Rectangle,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int getFirstDisplayedMonth()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Point getMonthGridPositionAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler createRenderingHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void calculateMonthGridBounds()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getDayBounds(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintDayHeader(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date access$502(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler access$1400(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$800(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.SortedSet getSelection()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$600(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$700(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void nextMonth()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$900(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getMonthAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getToday()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.LayoutManager createLayoutManager()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.lang.String[] getDaysOfTheWeek()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void updateLastDisplayedDay(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean access$400(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintMonthHeader(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void setFirstDisplayedDay(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler getHeaderFromUIManager()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler getRenderingHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getSeparatorBounds(java.util.Calendar,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.event.MouseListener createMouseListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallRenderingHandler()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void setRenderingHandler(org.jdesktop.swingx.plaf.basic.CalendarRenderingHandler)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Point getMonthGridPosition(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void update(java.awt.Graphics,javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.SortedSet access$1502(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,java.util.SortedSet)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$Handler getHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void updateComponentInputMap()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installRenderingHandler()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler createCalendarHeaderHandler()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintWeekHeader(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean isUIInstallable(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void updateZoomable()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getDayInMonth(java.util.Date,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int getTraversableGridPositionAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int calculateCalendarGridHeight()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void calculateMonthGridRowColumnCount()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.SortedSet access$1500(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$912(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$1100(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getDayBoundsInMonth(java.util.Date,int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Calendar getCalendar(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthBoundsAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthDetailsBoundsAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthHeaderBounds(java.util.Date,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Point getDayGridPosition(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int getFirstDisplayedYear()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthHeaderBoundsAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getDayBoundsAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean isToday(java.util.Date)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Point getDayGridPositionAtLocation(int,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int getWeeks(java.util.Calendar)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void access$100(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installComponents()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.Class)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void access$000(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintDaysOfWeekSeparator(java.awt.Graphics,java.util.Calendar)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int getMonthHeaderHeight()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void previousMonth()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date access$500(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean isUsingKeyboard()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void setCalendarHeaderHandler(org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Rectangle getMonthBounds(java.util.Date)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Font createDerivedFont()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void installKeyBindings(int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void paintBackground(java.awt.Graphics)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="boolean canSelectByMode()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler instantiateClass(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.awt.Dimension getMonthSize()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void access$300(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallKeyBindings(int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void access$1300(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$602(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="void uninstallComponents()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$902(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$802(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Calendar getCalendar()" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="int access$702(org.jdesktop.swingx.plaf.basic.BasicMonthViewUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="java.util.Date getMonth(int,int)" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="rendererPane" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="WEEK_HEADER_COLUMN" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="mouseListener" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="fullBoxHeight" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="WEEKS_IN_MONTH" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="fullMonthBoxHeight" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="fullBoxWidth" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="fullCalendarHeight" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="MONTH_DOWN" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="propertyChangeListener" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarRowCount" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="monthView" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="monthDownImage" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="mouseMotionListener" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="pivotDate" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="MONTH_UP" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="fullCalendarWidth" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="LAST_DAY_COLUMN" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="originalDateSpan" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="monthUpImage" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarHeight" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="DAY_HEADER_ROW" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarHeaderHandler" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="monthsOfTheYear" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="usingKeyboard" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="DAYS_IN_WEEK" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarGrid" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="CALENDAR_SPACING" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="daysOfTheWeek" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="lastDisplayedDate" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="arrowPaddingY" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="arrowPaddingX" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="FIRST_WEEK_ROW" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarColumnCount" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="isLeftToRight" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="LAST_WEEK_ROW" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="renderingHandler" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="calendarWidth" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="FIRST_DAY_COLUMN" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <field name="handler" class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI"/>
        <class name="org.jdesktop.swingx.plaf.macosx.MacOSXStatusBarUI"/>
        <method signature="void installDefaults(org.jdesktop.swingx.JXStatusBar)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXStatusBarUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXStatusBarUI"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.macosx.MacOSXStatusBarUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.macosx.MacOSXStatusBarUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$ChangeListener"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$ChangeListener"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$ChangeListener"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$ChangeListener"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$ChangeListener"/>
        <class name="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="boolean isShapeMasked()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="boolean isRenderInsideShape()"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void paintBorderGlow(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setShouldFillShape(boolean)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="int getEffectWidth()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setRenderInsideShape(boolean)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void addPropertyChangeListener(java.beans.PropertyChangeListener)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setBrushSteps(int)" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="java.awt.geom.Point2D getOffset()"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setEffectWidth(int)" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="int getBrushSteps()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setOffset(java.awt.geom.Point2D)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void apply(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void removePropertyChangeListener(java.beans.PropertyChangeListener)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setShapeMasked(boolean)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void setBrushColor(java.awt.Color)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="java.awt.image.BufferedImage getClipImage(java.awt.Rectangle)"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="java.awt.Color getBrushColor()"
                class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="boolean isShouldFillShape()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="renderInsideShape" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="propertyChangeSupport" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="brushColor" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="shouldFillShape" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="effectWidth" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="_clipImage" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="brushSteps" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="debug" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="shapeMasked" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <field name="offset" class="org.jdesktop.swingx.painter.effects.AbstractAreaEffect"/>
        <class name="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,org.jdesktop.swingx.renderer.IconValue,int)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.ComponentProvider)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,int)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="org.jdesktop.swingx.renderer.ComponentProvider createDefaultComponentProvider()"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,org.jdesktop.swingx.renderer.IconValue)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <method signature="java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"
                class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <field name="cellContext" class="org.jdesktop.swingx.renderer.DefaultTableRenderer"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ChangeListener"/>
        <class name="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="java.awt.Color getForeground()" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void setForeground(java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.awt.Rectangle)"
                class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,javax.swing.JComponent,int,int)"
                class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <field name="paintTextR" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <field name="paintIconR" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <field name="crossColor" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <field name="insetss" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <field name="paintViewR" class="org.jdesktop.swingx.plaf.basic.TextCrossingPainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicMonthViewUI$RenderingHandler"/>
        <class name="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setWaitPaneVisible(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="boolean isWaitCursorVisible()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setCursor(java.awt.Cursor)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setStatusBar(org.jdesktop.swingx.JXStatusBar)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setIdleThreshold(long)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setWaitPane(java.awt.Component)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void &lt;init&gt;(java.lang.String,boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setCancelButton(javax.swing.JButton)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setIdle(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setToolBar(javax.swing.JToolBar)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="javax.swing.Timer access$000(org.jdesktop.swingx.JXFrame)"
                class="org.jdesktop.swingx.JXFrame"/>
        <method signature="boolean isWaiting()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setStartPosition(org.jdesktop.swingx.JXFrame$StartPosition)"
                class="org.jdesktop.swingx.JXFrame"/>
        <method signature="javax.swing.JButton getCancelButton()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setWaitCursorVisible(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="javax.swing.JToolBar getToolBar()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="boolean getKeyPreview()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setRootPane(javax.swing.JRootPane)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="java.awt.Component getWaitPane()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setDefaultButton(javax.swing.JButton)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="boolean isWaitPaneVisible()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="javax.swing.JRootPane createRootPane()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setVisible(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="org.jdesktop.swingx.JXStatusBar getStatusBar()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setKeyPreview(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void setWaiting(boolean)" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="org.jdesktop.swingx.JXRootPane getRootPaneExt()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="org.jdesktop.swingx.JXFrame$StartPosition getStartPosition()"
                class="org.jdesktop.swingx.JXFrame"/>
        <method signature="long getIdleThreshold()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="boolean isIdle()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXFrame"/>
        <method signature="javax.swing.JButton getDefaultButton()" class="org.jdesktop.swingx.JXFrame"/>
        <field name="hasBeenVisible" class="org.jdesktop.swingx.JXFrame"/>
        <field name="glassPane" class="org.jdesktop.swingx.JXFrame"/>
        <field name="keyPreview" class="org.jdesktop.swingx.JXFrame"/>
        <field name="waitPane" class="org.jdesktop.swingx.JXFrame"/>
        <field name="idleTimer" class="org.jdesktop.swingx.JXFrame"/>
        <field name="idleThreshold" class="org.jdesktop.swingx.JXFrame"/>
        <field name="waiting" class="org.jdesktop.swingx.JXFrame"/>
        <field name="keyEventListener" class="org.jdesktop.swingx.JXFrame"/>
        <field name="realCursor" class="org.jdesktop.swingx.JXFrame"/>
        <field name="waitPaneVisible" class="org.jdesktop.swingx.JXFrame"/>
        <field name="idle" class="org.jdesktop.swingx.JXFrame"/>
        <field name="idleListener" class="org.jdesktop.swingx.JXFrame"/>
        <field name="waitCursorVisible" class="org.jdesktop.swingx.JXFrame"/>
        <field name="startPosition" class="org.jdesktop.swingx.JXFrame"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXBusyLabel)"
                class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <method signature="int getDelay()" class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <method signature="org.jdesktop.swingx.painter.BusyPainter getBusyPainter(java.awt.Dimension)"
                class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicBusyLabelUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <method signature="java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <method signature="void &lt;init&gt;(javax.swing.text.JTextComponent,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <method signature="void &lt;init&gt;(javax.swing.text.JTextComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <method signature="int getSourceActions(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <field name="details" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$DetailsTransferHandler"/>
        <class name="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <method signature="void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.HeaderAddon"/>
        <class name="org.jdesktop.swingx.plaf.ColumnControlButtonAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.ColumnControlButtonAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.ColumnControlButtonAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.ColumnControlButtonAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="org.jdesktop.swingx.JXMonthView getComponent()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getSelectionForeground()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getUIColor(java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="javax.swing.border.Border getBorder()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getBackground()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getFlaggedOrPerDayForeground()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="javax.swing.JComponent getComponent()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getForeground()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="void installContext(org.jdesktop.swingx.JXMonthView,java.util.Calendar,boolean,boolean,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarState getCalendarState()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="boolean isToday()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.lang.String getUIPrefix()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.util.Calendar getCalendar()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="javax.swing.border.Border getTitleBorder()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <method signature="java.awt.Color getSelectionBackground()"
                class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <field name="arrowPaddingY" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <field name="arrowPaddingX" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <field name="dayState" class="org.jdesktop.swingx.plaf.basic.CalendarCellContext"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="java.awt.Dimension getPreferredSize(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void uninstallDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="javax.swing.ActionMap getActionMap()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="java.beans.PropertyChangeListener createChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void uninstallComponents()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void showCurrentTip()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void uninstallUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void installComponents()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice,boolean)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void installKeyboardActions()" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXTipOfTheDay)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <field name="tipArea" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <field name="changeListener" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <field name="currentTipComponent" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <field name="tipFont" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <field name="tipPane" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI"/>
        <class name="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.LoginPaneAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <method signature="void propertyChange(java.beans.PropertyChangeEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneListener"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus"/>
        <method signature="void focusLost(java.awt.event.FocusEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus"/>
        <method signature="void focusGained(java.awt.event.FocusEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$RepaintOnFocus"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI$VerticalLayoutUIResource"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI$VerticalLayoutUIResource"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI$VerticalLayoutUIResource"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI,int)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI$VerticalLayoutUIResource"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI$VerticalLayoutUIResource"/>
        <class name="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXCollapsiblePane$Direction,java.awt.LayoutManager)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="org.jdesktop.swingx.JXCollapsiblePane$Direction access$700(org.jdesktop.swingx.JXCollapsiblePane)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="org.jdesktop.swingx.JXCollapsiblePane$WrapperContainer access$400(org.jdesktop.swingx.JXCollapsiblePane)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="org.jdesktop.swingx.JXCollapsiblePane$Direction getDirection()"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setMinimumSize(java.awt.Dimension)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="java.awt.Dimension getPreferredSize()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void access$500(org.jdesktop.swingx.JXCollapsiblePane,java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setAnimated(boolean)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setBorder(javax.swing.border.Border)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="int access$302(org.jdesktop.swingx.JXCollapsiblePane,int)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setDirection(org.jdesktop.swingx.JXCollapsiblePane$Direction)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void removeAll()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="java.awt.Container getContentPane()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setPreferredSize(java.awt.Dimension)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void remove(java.awt.Component)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setLayout(java.awt.LayoutManager)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setAnimationParams(org.jdesktop.swingx.JXCollapsiblePane$AnimationParams)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="javax.swing.Timer access$100(org.jdesktop.swingx.JXCollapsiblePane)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="javax.swing.border.Border getBorder()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void &lt;init&gt;(java.awt.LayoutManager)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="java.awt.Dimension getMinimumSize()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setCollapsed(boolean)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="boolean isCollapsed()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void remove(int)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void access$600(org.jdesktop.swingx.JXCollapsiblePane,java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void addImpl(java.awt.Component,java.lang.Object,int)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="boolean isAnimated()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXCollapsiblePane$Direction)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="org.jdesktop.swingx.JXCollapsiblePane$AnimationParams access$200(org.jdesktop.swingx.JXCollapsiblePane)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void setContentPane(java.awt.Container)" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <method signature="void access$800(org.jdesktop.swingx.JXCollapsiblePane,java.lang.String,java.lang.Object,java.lang.Object)"
                class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="animateTimer" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="$assertionsDisabled" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="direction" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="collapsed" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="ANIMATION_STATE_KEY" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="animator" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="wrapper" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="COLLAPSE_ICON" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="animationParams" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="currentDimension" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="useAnimation" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="TOGGLE_ACTION" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <field name="EXPAND_ICON" class="org.jdesktop.swingx.JXCollapsiblePane"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <method signature="boolean isEnabled()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <field name="serialVersionUID" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleCollapsedAction"/>
        <class name="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setFillPaint(java.awt.Paint)" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setBorderPaint(java.awt.Paint)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setAreaEffects(org.jdesktop.swingx.painter.effects.AreaEffect[])"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="boolean isPaintStretched()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setStyle(org.jdesktop.swingx.painter.AbstractAreaPainter$Style)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void &lt;init&gt;(java.awt.Paint)" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="float getBorderWidth()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setBorderWidth(float)" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="org.jdesktop.swingx.painter.AbstractAreaPainter$Style getStyle()"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="java.awt.Paint getBorderPaint()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="java.awt.Paint getFillPaint()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="java.awt.Paint calculateSnappedPaint(java.awt.Paint,int,int)"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="org.jdesktop.swingx.painter.effects.AreaEffect[] getAreaEffects()"
                class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <method signature="void setPaintStretched(boolean)" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="style" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="borderWidth" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="areaEffects" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="borderPaint" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="stretchPaint" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <field name="fillPaint" class="org.jdesktop.swingx.painter.AbstractAreaPainter"/>
        <class name="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void setShape(java.awt.Shape)" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="java.awt.Paint calculateFillPaint(java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void drawPathEffects(java.awt.Graphics2D,java.awt.Shape,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Shape)" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Shape,java.awt.Paint)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="java.awt.Shape getShape()" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void drawShape(java.awt.Graphics2D,java.awt.Shape,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void &lt;init&gt;(java.awt.Shape,java.awt.Paint,org.jdesktop.swingx.painter.AbstractAreaPainter$Style)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="java.awt.Paint calculateStrokePaint(java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void fillShape(java.awt.Graphics2D,java.awt.Shape,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.ShapePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <field name="shape" class="org.jdesktop.swingx.painter.ShapePainter"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicHTMLViewFactory"/>
        <method signature="javax.swing.text.View create(javax.swing.text.Element)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicHTMLViewFactory"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicHTMLViewFactory"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicHTMLViewFactory"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$3"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI,java.awt.event.ActionListener)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$3"/>
        <method signature="void windowClosing(java.awt.event.WindowEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$3"/>
        <field name="val$saveChoice" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$3"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$3"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI,javax.swing.JDialog,java.awt.event.ActionListener)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <field name="val$saveChoice" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <field name="val$dialog" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$2"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice,javax.swing.JCheckBox,javax.swing.JDialog)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <field name="val$choice" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <field name="val$showOnStartupBox" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <field name="val$dialog" class="org.jdesktop.swingx.plaf.basic.BasicTipOfTheDayUI$1"/>
        <class name="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void setLinkAction(org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void doClick()" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="org.jdesktop.swingx.JXHyperlink createRendererComponent()"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void format(org.jdesktop.swingx.renderer.CellContext)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void setLinkAction(org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction,java.lang.Class)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="java.lang.String getString(java.lang.Object)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="boolean isTargetable(java.lang.Object)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="javax.swing.JComponent createRendererComponent()"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="boolean isEnabled()" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void setTargetClass(java.lang.Class)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction createDefaultLinkAction()"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction,java.lang.Class)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void configureState(org.jdesktop.swingx.renderer.CellContext)"
                class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <field name="targetClass" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <field name="linkAction" class="org.jdesktop.swingx.renderer.HyperlinkProvider"/>
        <class name="org.jdesktop.swingx.painter.ShapePainter$1"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.ShapePainter$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$AbstractAreaPainter$Style"
               class="org.jdesktop.swingx.painter.ShapePainter$1"/>
        <class name="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="boolean isDescendingFrom(java.awt.Component,java.awt.Component)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="boolean isUIInstallable(java.lang.Object)" class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setComponentTreeFont(java.awt.Component,java.awt.Font)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="java.awt.Component[] getChildren(java.awt.Component)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void updateAllComponentTreeUIs(java.awt.Window)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setComponentTreeLocale(java.awt.Component,java.util.Locale)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void updateAllComponentTreeUIs()" class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="javax.swing.RepaintManager getTranslucentRepaintManager(javax.swing.RepaintManager)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setComponentTreeEnabled(java.awt.Component,boolean)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void updateMnemonicBinding(javax.swing.JComponent,java.lang.String)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setComponentTreeForeground(java.awt.Component,java.awt.Color)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setHtmlFont(javax.swing.text.html.HTMLDocument,java.awt.Font)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void updateMnemonicBinding(javax.swing.JComponent,java.lang.String,java.lang.String)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void setComponentTreeBackground(java.awt.Component,java.awt.Color)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="java.lang.Object getAncestor(java.lang.Class,java.awt.Component)"
                class="org.jdesktop.swingx.SwingXUtilities"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.SwingXUtilities"/>
        <field name="STYLESHEET" class="org.jdesktop.swingx.SwingXUtilities"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$1)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void removeLayoutComponent(java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="java.awt.Dimension minimumLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="java.awt.Dimension preferredLayoutSize(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void addLayoutComponent(java.lang.String,java.awt.Component)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <method signature="void layoutContainer(java.awt.Container)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <field name="dummy" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$ErrorPaneLayout"/>
        <class name="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <method signature="void initialize()" class="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <method signature="void uninitialize()" class="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <method signature="java.lang.Object[] getDefaults()"
                class="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.metal.MetalLookAndFeelAddons"/>
        <class name="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="javax.swing.SpinnerModel getYearSpinnerModel()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void install(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void localeChanged()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void installListeners()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int getPreviousYear()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="boolean access$300(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler,java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int getNextYear()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int access$200(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void updateFormatters()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void uninstall(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int access$100(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void uninstallListeners()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void firstDisplayedDayChanged()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="java.beans.PropertyChangeListener getPropertyChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent getHeaderComponent()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent createCalendarHeader()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="boolean setYear(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader getHeaderComponent()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$SpinningCalendarHeader createCalendarHeader()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int getYear()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <method signature="int access$000(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="monthPropertyListener" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="ARROWS_SURROUND_MONTH" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="monthStringValue" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="yearSpinnerModel" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <field name="FOCUSABLE_SPINNER_TEXT" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="javax.swing.JComponent highlight(javax.swing.JComponent,org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="boolean isSelectable(org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="org.jdesktop.swingx.decorator.Highlighter getHighlighter()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="java.awt.Font access$000(org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler,java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="org.jdesktop.swingx.renderer.StringValue createDayStringValue(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void setLocale(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="org.jdesktop.swingx.renderer.StringValue createMonthHeaderStringValue(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="boolean isSelected(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="org.jdesktop.swingx.renderer.StringValue createWeekOfYearStringValue(java.util.Locale)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void installHighlighters()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="javax.swing.JComponent prepareRenderingComponent(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void installProviders()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarAdapter getCalendarAdapter(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="java.awt.Font getDerivedFont(java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="void install()" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <method signature="boolean isFocused(org.jdesktop.swingx.JXMonthView,java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="providers" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="cellContext" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="calendarAdapter" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="highlighter" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="unselectableDayForeground" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <field name="textCross" class="org.jdesktop.swingx.plaf.basic.BasicCalendarRenderingHandler"/>
        <class name="org.jdesktop.swingx.plaf.HyperlinkAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.HyperlinkAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.HyperlinkAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.HyperlinkAddon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="javax.swing.AbstractButton createNavigationButton()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="void setActions(javax.swing.Action,javax.swing.Action,javax.swing.Action)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="void setFont(java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="org.jdesktop.swingx.JXHyperlink createZoomLink()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <method signature="void &lt;init&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <field name="zoomOutLink"
               class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <field name="nextButton" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <field name="prevButton" class="org.jdesktop.swingx.plaf.basic.BasicCalendarHeaderHandler$BasicCalendarHeader"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorFrame"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI,org.jdesktop.swingx.JXErrorPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorFrame"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorFrame"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicErrorPaneUI$JXErrorFrame"/>
        <class name="org.jdesktop.swingx.painter.effects.NeonBorderEffect$1"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$1"/>
        <field name="$SwitchMap$org$jdesktop$swingx$painter$effects$NeonBorderEffect$BorderPosition"
               class="org.jdesktop.swingx.painter.effects.NeonBorderEffect$1"/>
        <class name="org.jdesktop.swingx.plaf.MultiThumbSliderAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.MultiThumbSliderAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.MultiThumbSliderAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.MultiThumbSliderAddon"/>
        <class name="org.jdesktop.swingx.painter.effects.InnerGlowPathEffect"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.effects.InnerGlowPathEffect"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.effects.InnerGlowPathEffect"/>
        <class name="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="int getIconWidth()" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="void setPainter(org.jdesktop.swingx.painter.Painter)"
                class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="int getIconHeight()" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="void &lt;init&gt;(java.awt.Dimension)" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="org.jdesktop.swingx.painter.Painter getPainter()"
                class="org.jdesktop.swingx.painter.PainterIcon"/>
        <method signature="void paintIcon(java.awt.Component,java.awt.Graphics,int,int)"
                class="org.jdesktop.swingx.painter.PainterIcon"/>
        <field name="painter" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <field name="size" class="org.jdesktop.swingx.painter.PainterIcon"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <method signature="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml$BasicEditorKit getFactory()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <method signature="javax.swing.text.ViewFactory access$100()"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <method signature="javax.swing.text.View createHTMLView(javax.swing.JComponent,java.lang.String)"
                class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <field name="styleChanges" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <field name="basicHTMLFactory" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <field name="basicHTMLViewFactory" class="org.jdesktop.swingx.plaf.basic.BasicHyperlinkUI$ULHtml"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void mouseMoved(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void mouseExited(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void mouseEntered(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <method signature="void mouseReleased(java.awt.event.MouseEvent)"
                class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$ToggleListener"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void install(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void installListeners()" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void componentOrientationChanged()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void installNavigationActions()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="java.awt.Color getAsNotUIResource(java.awt.Color)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void monthStringBackgroundChanged()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void uninstall(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="java.awt.Font getAsNotUIResource(java.awt.Font)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void uninstallListeners()" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void fontChanged()" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void updateActionIcon(java.lang.String,javax.swing.Icon)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void installWrapper(java.lang.String,java.lang.String,javax.swing.Icon)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="java.beans.PropertyChangeListener getMonthViewPropertyChangeListener()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="java.awt.Font createDerivedFont()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent getHeaderComponent()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="javax.swing.JComponent createCalendarHeader()"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void updateMonthNavigationIcons(javax.swing.Icon,javax.swing.Icon)"
                class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="monthUpImage" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="monthView" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="monthDownImage" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="uiControllerID" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="monthViewPropertyChangeListener" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="calendarHeader" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <field name="LOG" class="org.jdesktop.swingx.plaf.basic.CalendarHeaderHandler"/>
        <class name="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="org.jdesktop.swingx.JXMonthView getComponent()"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarAdapter install(java.util.Calendar,org.jdesktop.swingx.plaf.basic.CalendarState)"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXMonthView)"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isFlagged()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isUnselectable()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isEditable()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isSelectable()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isSelected()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="java.lang.Object getValueAt(int,int)"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean isCellEditable(int,int)" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="javax.swing.JComponent getComponent()"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="java.lang.Object getFilteredValueAt(int,int)"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="org.jdesktop.swingx.plaf.basic.CalendarState getCalendarState()"
                class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <method signature="boolean hasFocus()" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <field name="dayState" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <field name="calendar" class="org.jdesktop.swingx.plaf.basic.CalendarAdapter"/>
        <class name="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="void fireStateChanged()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="java.lang.Object getPreviousValue()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="java.lang.Object getNextValue()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="void setValue(java.lang.Object)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="void &lt;clinit&gt;()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler,org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$1)"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <method signature="java.lang.Object getValue()"
                class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <field name="this$0" class="org.jdesktop.swingx.plaf.basic.SpinningCalendarHeaderHandler$YearSpinnerModel"/>
        <class name="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;(int,java.awt.Insets)" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;(int)" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="int getFixedWidth()" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="java.awt.Insets getInsets()" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior,java.awt.Insets)"
                class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior getResizeBehavior()"
                class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void setFixedWidth(int)" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXStatusBar$Constraint$ResizeBehavior)"
                class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;(java.awt.Insets)" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <field name="insets" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <field name="fixedWidth" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <field name="resizeBehavior" class="org.jdesktop.swingx.JXStatusBar$Constraint"/>
        <class name="org.jdesktop.swingx.plaf.BusyLabelUI"/>
        <method signature="int getDelay()" class="org.jdesktop.swingx.plaf.BusyLabelUI"/>
        <method signature="org.jdesktop.swingx.painter.BusyPainter getBusyPainter(java.awt.Dimension)"
                class="org.jdesktop.swingx.plaf.BusyLabelUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.BusyLabelUI"/>
        <class name="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="java.awt.Image getBanner()" class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="void installDefaults()" class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.JXLoginPane)"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="void installUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <method signature="javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)"
                class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <field name="dlg" class="org.jdesktop.swingx.plaf.basic.BasicLoginPaneUI"/>
        <class name="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="java.beans.PropertyChangeListener getTargetListener()"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.hyperlink.LinkModel,java.awt.event.ActionListener)"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void uninstallTarget()" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void installTarget()" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void updateFromTarget()" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void actionPerformed(java.awt.event.ActionEvent)"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void &lt;init&gt;(java.awt.event.ActionListener)"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.hyperlink.LinkModel)"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <method signature="void setVisitingDelegate(java.awt.event.ActionListener)"
                class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <field name="linkListener" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <field name="VISIT_ACTION" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <field name="delegate" class="org.jdesktop.swingx.hyperlink.LinkModelAction"/>
        <class name="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="void setPortion(org.jdesktop.swingx.painter.CapsulePainter$Portion)"
                class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="org.jdesktop.swingx.painter.CapsulePainter$Portion getPortion()"
                class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="java.awt.Shape provideShape(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="void doPaint(java.awt.Graphics2D,java.lang.Object,int,int)"
                class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <method signature="void &lt;init&gt;(org.jdesktop.swingx.painter.CapsulePainter$Portion)"
                class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <field name="portion" class="org.jdesktop.swingx.painter.CapsulePainter"/>
        <class name="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="void add(java.lang.Object,java.lang.Object,boolean)"
                class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="java.lang.Object[] toArray()" class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="java.lang.Object asUIResource(java.lang.Object,java.lang.String)"
                class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="void add(java.lang.Object,java.lang.Object)" class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <field name="delegate" class="org.jdesktop.swingx.plaf.DefaultsList"/>
        <class name="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void &lt;clinit&gt;()" class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)"
                class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
        <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.plaf.StatusBarAddon"/>
    </entrypoints>

    <!-- writing shrinked C:\develope\freerapid\dev\swingx.jar to C:\develope\freerapid\dev\swingx-ob.jar. -->
    <inOutPair in="C:\develope\freerapid\dev\swingx.jar" out="C:\develope\freerapid\dev\swingx-ob.jar">
        <removed-code>
            <method signature="void &lt;init&gt;(java.beans.PropertyChangeSupport,java.beans.VetoableChangeSupport)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="java.beans.PropertyChangeListener[] getPropertyChangeListeners()"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void addPropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void removePropertyChangeListener(java.lang.String,java.beans.PropertyChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="java.beans.PropertyChangeListener[] getPropertyChangeListeners(java.lang.String)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void firePropertyChange(java.beans.PropertyChangeEvent)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void fireIndexedPropertyChange(java.lang.String,int,java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="boolean hasPropertyChangeListeners(java.lang.String)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="boolean hasVetoableChangeListeners(java.lang.String)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void addVetoableChangeListener(java.beans.VetoableChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void removeVetoableChangeListener(java.beans.VetoableChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="java.beans.VetoableChangeListener[] getVetoableChangeListeners()"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void addVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void removeVetoableChangeListener(java.lang.String,java.beans.VetoableChangeListener)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="java.beans.VetoableChangeListener[] getVetoableChangeListeners(java.lang.String)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void fireVetoableChange(java.lang.String,java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <method signature="void fireVetoableChange(java.beans.PropertyChangeEvent)"
                    class="org.jdesktop.beans.AbstractBean"/>
            <class name="org.jdesktop.beans.AbstractSerializableBean"/>
            <field name="SEARCH_FIELD_LABEL" class="org.jdesktop.swingx.AbstractPatternPanel"/>
            <field name="SEARCH_FIELD_MNEMONIC" class="org.jdesktop.swingx.AbstractPatternPanel"/>
            <field name="SEARCH_TITLE" class="org.jdesktop.swingx.AbstractPatternPanel"/>
            <field name="MATCH_ACTION_COMMAND" class="org.jdesktop.swingx.AbstractPatternPanel"/>
            <field name="LARGE_ICON" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <field name="GROUP" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <field name="IS_STATE" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.action.AbstractActionExt)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,javax.swing.Icon)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="java.lang.String getShortDescription()"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setShortDescription(java.lang.String)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="java.lang.String getLongDescription()"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setLongDescription(java.lang.String)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="javax.swing.Icon getSmallIcon()" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setSmallIcon(javax.swing.Icon)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="javax.swing.Icon getLargeIcon()" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setLargeIcon(javax.swing.Icon)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setMnemonic(java.lang.String)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setMnemonic(int)" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="int getMnemonic()" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="java.lang.Object getActionCommand()"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="javax.swing.KeyStroke getAccelerator()"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setAccelerator(javax.swing.KeyStroke)"
                    class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void setGroup(java.lang.Object)" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void dispose()" class="org.jdesktop.swingx.action.AbstractActionExt"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="org.jdesktop.swingx.action.ActionManager getActionManager()"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JToolBar createToolBar(java.lang.Object[])"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JToolBar createToolBar(java.util.List)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JPopupMenu createPopup(java.lang.Object[])"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JPopupMenu createPopup(java.util.List)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JMenuBar createMenuBar(java.lang.Object[])"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JMenuBar createMenuBar(java.util.List)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JMenu createMenu(java.lang.Object[])"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JMenu createMenu(java.util.List)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.Action getAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JMenuItem createMenuItem(java.lang.Object,javax.swing.JComponent)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.AbstractButton createButton(java.lang.Object,javax.swing.JComponent)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.AbstractButton createButton(javax.swing.Action,javax.swing.JComponent)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.AbstractButton createButton(javax.swing.Action)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JToggleButton createToggleButton(org.jdesktop.swingx.action.AbstractActionExt)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <method signature="javax.swing.JToggleButton createToggleButton(org.jdesktop.swingx.action.AbstractActionExt,javax.swing.ButtonGroup)"
                    class="org.jdesktop.swingx.action.ActionContainerFactory"/>
            <class name="org.jdesktop.swingx.action.ActionFactory"/>
            <method signature="void setInstance(org.jdesktop.swingx.action.ActionManager)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="java.util.Set getActionIDs()" class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="javax.swing.Action addAction(javax.swing.Action)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="javax.swing.Action addAction(java.lang.Object,javax.swing.Action)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="org.jdesktop.swingx.action.TargetableAction getTargetableAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="org.jdesktop.swingx.action.BoundAction getBoundAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="org.jdesktop.swingx.action.ServerAction getServerAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="org.jdesktop.swingx.action.CompositeAction getCompositeAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isEnabled(java.lang.Object)" class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isSelected(java.lang.Object)" class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="void printAction(java.io.PrintStream,javax.swing.Action)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="void registerCallback(java.lang.Object,java.lang.Object,java.lang.String)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isStateAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isTargetableAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isBoundAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isCompositeAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="boolean isServerAction(java.lang.Object)"
                    class="org.jdesktop.swingx.action.ActionManager"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void &lt;init&gt;(java.lang.String,javax.swing.Icon)"
                    class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,javax.swing.Icon)"
                    class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void setCallback(java.lang.String)" class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void removeListener(java.lang.Class,java.util.EventListener)"
                    class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void removeActionListener(java.awt.event.ActionListener)"
                    class="org.jdesktop.swingx.action.BoundAction"/>
            <method signature="void removeItemListener(java.awt.event.ItemListener)"
                    class="org.jdesktop.swingx.action.BoundAction"/>
            <class name="org.jdesktop.swingx.action.CompositeAction"/>
            <class name="org.jdesktop.swingx.action.OpenBrowserAction"/>
            <class name="org.jdesktop.swingx.action.ServerAction"/>
            <method signature="boolean doCommand(java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.swingx.action.Targetable"/>
            <method signature="boolean hasCommand(java.lang.Object)" class="org.jdesktop.swingx.action.Targetable"/>
            <method signature="java.lang.Object[] getCommands()" class="org.jdesktop.swingx.action.Targetable"/>
            <class name="org.jdesktop.swingx.action.TargetableAction"/>
            <method signature="boolean doCommand(java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.swingx.action.TargetableSupport"/>
            <method signature="java.lang.Object[] getCommands()" class="org.jdesktop.swingx.action.TargetableSupport"/>
            <method signature="boolean hasCommand(java.lang.Object)"
                    class="org.jdesktop.swingx.action.TargetableSupport"/>
            <class name="org.jdesktop.swingx.action.TargetManager"/>
            <class name="org.jdesktop.swingx.auth.DefaultUserNameStore"/>
            <class name="org.jdesktop.swingx.auth.JAASLoginService$JAASCallbackHandler"/>
            <class name="org.jdesktop.swingx.auth.JAASLoginService"/>
            <class name="org.jdesktop.swingx.auth.JDBCLoginService"/>
            <class name="org.jdesktop.swingx.auth.KeyChain"/>
            <class name="org.jdesktop.swingx.auth.LoginAdapter"/>
            <class name="org.jdesktop.swingx.auth.LoginEvent"/>
            <class name="org.jdesktop.swingx.auth.LoginListener"/>
            <class name="org.jdesktop.swingx.auth.LoginService$1$1"/>
            <class name="org.jdesktop.swingx.auth.LoginService$1$2"/>
            <class name="org.jdesktop.swingx.auth.LoginService$1$3"/>
            <class name="org.jdesktop.swingx.auth.LoginService$1$4"/>
            <class name="org.jdesktop.swingx.auth.LoginService$1"/>
            <class name="org.jdesktop.swingx.auth.LoginService"/>
            <class name="org.jdesktop.swingx.auth.PasswordStore"/>
            <class name="org.jdesktop.swingx.auth.SimpleLoginService"/>
            <class name="org.jdesktop.swingx.auth.UserNameStore"/>
            <class name="org.jdesktop.swingx.auth.UserPermissions"/>
            <class name="org.jdesktop.swingx.autocomplete.AbstractAutoCompleteAdaptor"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteComboBoxEditor"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator$1"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator$2"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator$3"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator$4"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator$NonStrictBackspaceAction"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDecorator"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDocument$1"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDocument$Handler"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDocument$LookupResult"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteDocument"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteFocusAdapter"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteKeyAdapter"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompletePropertyChangeListener"/>
            <class name="org.jdesktop.swingx.autocomplete.AutoCompleteStyledDocument"/>
            <class name="org.jdesktop.swingx.autocomplete.ComboBoxAdaptor"/>
            <class name="org.jdesktop.swingx.autocomplete.ComboBoxCellEditor$Handler"/>
            <class name="org.jdesktop.swingx.autocomplete.ComboBoxCellEditor"/>
            <class name="org.jdesktop.swingx.autocomplete.DelegatingDocumentEvent"/>
            <class name="org.jdesktop.swingx.autocomplete.ListAdaptor"/>
            <class name="org.jdesktop.swingx.autocomplete.ObjectToStringConverter$1"/>
            <class name="org.jdesktop.swingx.autocomplete.ObjectToStringConverter$DefaultObjectToStringConverter"/>
            <class name="org.jdesktop.swingx.autocomplete.ObjectToStringConverter"/>
            <class name="org.jdesktop.swingx.autocomplete.TextComponentAdaptor"/>
            <class name="org.jdesktop.swingx.autocomplete.workarounds.MacOSXPopupLocationFix$1"/>
            <class name="org.jdesktop.swingx.autocomplete.workarounds.MacOSXPopupLocationFix$Listener"/>
            <class name="org.jdesktop.swingx.autocomplete.workarounds.MacOSXPopupLocationFix$ScreenGeometry"/>
            <class name="org.jdesktop.swingx.autocomplete.workarounds.MacOSXPopupLocationFix"/>
            <class name="org.jdesktop.swingx.border.DropShadowBorder$Position"/>
            <class name="org.jdesktop.swingx.border.DropShadowBorder"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.border.IconBorder"/>
            <method signature="void &lt;init&gt;(javax.swing.Icon)" class="org.jdesktop.swingx.border.IconBorder"/>
            <method signature="void &lt;init&gt;(javax.swing.Icon,int)" class="org.jdesktop.swingx.border.IconBorder"/>
            <method signature="int getPadding()" class="org.jdesktop.swingx.border.IconBorder"/>
            <method signature="int getIconPosition()" class="org.jdesktop.swingx.border.IconBorder"/>
            <class name="org.jdesktop.swingx.border.MatteBorderExt$1"/>
            <class name="org.jdesktop.swingx.border.MatteBorderExt"/>
            <class name="org.jdesktop.swingx.calendar.AbstractDateSelectionModel"/>
            <field name="ONE_MINUTE" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <field name="ONE_HOUR" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <field name="THREE_HOURS" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <field name="ONE_DAY" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="java.util.Date getEndOfDST(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="java.util.Date getStartOfDST(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isStartOfDay(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isEndOfDay(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isEndOfMonth(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isStartOfWeek(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isEndOfWeek(java.util.Calendar)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="void endOfWeek(java.util.Calendar)" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="java.util.Date endOfWeek(java.util.Calendar,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="java.util.Date endOfDay(java.util.Calendar,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="void endOfDay(java.util.Calendar)" class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="boolean isSameDay(java.util.Calendar,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.CalendarUtils"/>
            <method signature="void &lt;init&gt;()"
                    class="org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource"/>
            <method signature="void &lt;init&gt;(java.text.DateFormat[],java.util.Locale)"
                    class="org.jdesktop.swingx.calendar.DatePickerFormatter$DatePickerFormatterUIResource"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.calendar.DatePickerFormatter"/>
            <method signature="void &lt;init&gt;(java.text.DateFormat[])"
                    class="org.jdesktop.swingx.calendar.DatePickerFormatter"/>
            <method signature="org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode[] values()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode"/>
            <method signature="org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode"/>
            <method signature="org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode getSelectionMode()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Calendar getCalendar()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="int getFirstDayOfWeek()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setFirstDayOfWeek(int)" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="int getMinimalDaysInFirstWeek()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setMinimalDaysInFirstWeek(int)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.TimeZone getTimeZone()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setTimeZone(java.util.TimeZone)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Locale getLocale()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setLocale(java.util.Locale)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void addSelectionInterval(java.util.Date,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setSelectionInterval(java.util.Date,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void removeSelectionInterval(java.util.Date,java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void clearSelection()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.SortedSet getSelection()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Date getFirstSelectionDate()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Date getLastSelectionDate()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="boolean isSelected(java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="boolean isSelectionEmpty()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.SortedSet getUnselectableDates()"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setUnselectableDates(java.util.SortedSet)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="boolean isUnselectableDate(java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Date getUpperBound()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setUpperBound(java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="java.util.Date getLowerBound()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="void setLowerBound(java.util.Date)"
                    class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <method signature="boolean isAdjusting()" class="org.jdesktop.swingx.calendar.DateSelectionModel"/>
            <class name="org.jdesktop.swingx.calendar.DateSpan"/>
            <class name="org.jdesktop.swingx.calendar.DateUtils"/>
            <class name="org.jdesktop.swingx.calendar.DaySelectionModel$1"/>
            <class name="org.jdesktop.swingx.calendar.DaySelectionModel"/>
            <class name="org.jdesktop.swingx.calendar.DefaultDateSelectionModel$1"/>
            <class name="org.jdesktop.swingx.calendar.DefaultDateSelectionModel"/>
            <class name="org.jdesktop.swingx.calendar.SingleDaySelectionModel"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color removeAlpha(java.awt.Color)" class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color setAlpha(java.awt.Color,int)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color setSaturation(java.awt.Color,float)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color setBrightness(java.awt.Color,float)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.lang.String toHexString(java.awt.Color)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color computeForeground(java.awt.Color)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Color blend(java.awt.Color,java.awt.Color)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Paint getCheckerPaint()" class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="java.awt.Paint getCheckerPaint(java.awt.Color,java.awt.Color,int)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <method signature="void tileStretchPaint(java.awt.Graphics,javax.swing.JComponent,java.awt.image.BufferedImage,java.awt.Insets)"
                    class="org.jdesktop.swingx.color.ColorUtil"/>
            <class name="org.jdesktop.swingx.color.EyeDropperColorChooserPanel$1"/>
            <class name="org.jdesktop.swingx.color.EyeDropperColorChooserPanel$2"/>
            <class name="org.jdesktop.swingx.color.EyeDropperColorChooserPanel$3"/>
            <class name="org.jdesktop.swingx.color.EyeDropperColorChooserPanel$MagnifyingPanel"/>
            <class name="org.jdesktop.swingx.color.EyeDropperColorChooserPanel"/>
            <class name="org.jdesktop.swingx.color.GradientPreviewPanel$1"/>
            <class name="org.jdesktop.swingx.color.GradientPreviewPanel$GradientMouseHandler"/>
            <class name="org.jdesktop.swingx.color.GradientPreviewPanel"/>
            <class name="org.jdesktop.swingx.color.GradientThumbRenderer"/>
            <class name="org.jdesktop.swingx.color.GradientTrackRenderer"/>
            <class name="org.jdesktop.swingx.combobox.EnumComboBoxModel"/>
            <class name="org.jdesktop.swingx.combobox.ListComboBoxModel"/>
            <class name="org.jdesktop.swingx.combobox.MapComboBoxModel"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.decorator.AbstractHighlighter"/>
            <method signature="javax.swing.event.ChangeListener[] getChangeListeners()"
                    class="org.jdesktop.swingx.decorator.AbstractHighlighter"/>
            <class name="org.jdesktop.swingx.decorator.BorderHighlighter"/>
            <method signature="javax.swing.event.ChangeListener[] getChangeListeners()"
                    class="org.jdesktop.swingx.decorator.Highlighter"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$AndHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$ColumnHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$DepthHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$EqualsHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$IdentifierHighlightPredicate"/>
            <method signature="org.jdesktop.swingx.decorator.HighlightPredicate getHighlightPredicate()"
                    class="org.jdesktop.swingx.decorator.HighlightPredicate$NotHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$OrHighlightPredicate"/>
            <method signature="int getLinesPerGroup()"
                    class="org.jdesktop.swingx.decorator.HighlightPredicate$RowGroupHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.HighlightPredicate$TypeHighlightPredicate"/>
            <class name="org.jdesktop.swingx.decorator.IconHighlighter"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.decorator.PainterHighlighter"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.decorator.HighlightPredicate)"
                    class="org.jdesktop.swingx.decorator.PainterHighlighter"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.painter.Painter)"
                    class="org.jdesktop.swingx.decorator.PainterHighlighter"/>
            <class name="org.jdesktop.swingx.decorator.PatternMatcher"/>
            <class name="org.jdesktop.swingx.decorator.PatternPredicate"/>
            <field name="ALL" class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <field name="MATCH_ALL" class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="void &lt;init&gt;(java.util.regex.Pattern)"
                    class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="void &lt;init&gt;(java.util.regex.Pattern,int)"
                    class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="void &lt;init&gt;(java.lang.String,int)"
                    class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="void &lt;init&gt;(java.lang.String,int,int)"
                    class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="int getHighlightColumn()" class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <method signature="int getHighlightRow()" class="org.jdesktop.swingx.decorator.SearchPredicate"/>
            <class name="org.jdesktop.swingx.decorator.ShadingColorHighlighter"/>
            <class name="org.jdesktop.swingx.error.ErrorEvent"/>
            <class name="org.jdesktop.swingx.error.ErrorListener"/>
            <class name="org.jdesktop.swingx.error.ErrorSupport$1"/>
            <class name="org.jdesktop.swingx.error.ErrorSupport"/>
            <class name="org.jdesktop.swingx.event.CompoundFocusListener$1"/>
            <class name="org.jdesktop.swingx.event.CompoundFocusListener"/>
            <method signature="org.jdesktop.swingx.event.DateSelectionEvent$EventType[] values()"
                    class="org.jdesktop.swingx.event.DateSelectionEvent$EventType"/>
            <method signature="org.jdesktop.swingx.event.DateSelectionEvent$EventType valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.event.DateSelectionEvent$EventType"/>
            <field name="eventType" class="org.jdesktop.swingx.event.DateSelectionEvent"/>
            <field name="adjusting" class="org.jdesktop.swingx.event.DateSelectionEvent"/>
            <method signature="void &lt;init&gt;(java.lang.Object,org.jdesktop.swingx.event.DateSelectionEvent$EventType,boolean)"
                    class="org.jdesktop.swingx.event.DateSelectionEvent"/>
            <method signature="java.util.SortedSet getSelection()"
                    class="org.jdesktop.swingx.event.DateSelectionEvent"/>
            <method signature="java.lang.String toString()" class="org.jdesktop.swingx.event.DateSelectionEvent"/>
            <method signature="void valueChanged(org.jdesktop.swingx.event.DateSelectionEvent)"
                    class="org.jdesktop.swingx.event.DateSelectionListener"/>
            <class name="org.jdesktop.swingx.event.EventListenerMap"/>
            <method signature="java.util.EventListener[] getListeners(java.lang.Class)"
                    class="org.jdesktop.swingx.event.WeakEventListenerList"/>
            <class name="org.jdesktop.swingx.geom.Morphing2D$Geometry"/>
            <class name="org.jdesktop.swingx.geom.Morphing2D$Iterator"/>
            <class name="org.jdesktop.swingx.geom.Morphing2D"/>
            <class name="org.jdesktop.swingx.geom.Star2D"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$1"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$1"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$10"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$11"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$12"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$13"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$14"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$15"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$16"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$17"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$18"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$19"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$2"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$20"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$21"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$22"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$23"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$24"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$25"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$26"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$27"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$28"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$29"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$3"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$30"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$31"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$4"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$5"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$6"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$7"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$8"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender$9"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$Blender"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$BlendingBgrContext"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$BlendingContext"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$BlendingMode"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite$BlendingRgbContext"/>
            <class name="org.jdesktop.swingx.graphics.BlendComposite"/>
            <class name="org.jdesktop.swingx.graphics.ColorUtilities"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage convertToBufferedImage(java.awt.Image)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createColorModelCompatibleImage(java.awt.image.BufferedImage)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createCompatibleImage(java.awt.image.BufferedImage)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createCompatibleImage(java.awt.image.BufferedImage,int,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createCompatibleImage(int,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage loadCompatibleImage(java.io.InputStream)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage loadCompatibleImage(java.net.URL)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage toCompatibleImage(java.awt.image.BufferedImage)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createThumbnailFast(java.awt.image.BufferedImage,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createThumbnailFast(java.awt.image.BufferedImage,int,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createThumbnail(java.awt.image.BufferedImage,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="java.awt.image.BufferedImage createThumbnail(java.awt.image.BufferedImage,int,int)"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="int[] getPixels(java.awt.image.BufferedImage,int,int,int,int,int[])"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <method signature="void setPixels(java.awt.image.BufferedImage,int,int,int,int,int[])"
                    class="org.jdesktop.swingx.graphics.GraphicsUtilities"/>
            <class name="org.jdesktop.swingx.graphics.ReflectionRenderer"/>
            <class name="org.jdesktop.swingx.graphics.ShadowRenderer"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.HorizontalLayout"/>
            <method signature="int getGap()" class="org.jdesktop.swingx.HorizontalLayout"/>
            <method signature="void setGap(int)" class="org.jdesktop.swingx.HorizontalLayout"/>
            <field name="VISITED_KEY" class="org.jdesktop.swingx.hyperlink.AbstractHyperlinkAction"/>
            <class name="org.jdesktop.swingx.hyperlink.EditorPaneLinkVisitor$1"/>
            <class name="org.jdesktop.swingx.hyperlink.EditorPaneLinkVisitor$2"/>
            <class name="org.jdesktop.swingx.hyperlink.EditorPaneLinkVisitor"/>
            <method signature="void main(java.lang.String[])" class="org.jdesktop.swingx.icon.ColumnControlIcon"/>
            <class name="org.jdesktop.swingx.image.AbstractFilter"/>
            <class name="org.jdesktop.swingx.image.ColorTintFilter"/>
            <class name="org.jdesktop.swingx.image.FastBlurFilter"/>
            <class name="org.jdesktop.swingx.image.GaussianBlurFilter"/>
            <class name="org.jdesktop.swingx.image.StackBlurFilter"/>
            <class name="org.jdesktop.swingx.JXBusyLabel$1"/>
            <method signature="org.jdesktop.swingx.JXBusyLabel$Direction[] values()"
                    class="org.jdesktop.swingx.JXBusyLabel$Direction"/>
            <method signature="org.jdesktop.swingx.JXBusyLabel$Direction valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.JXBusyLabel$Direction"/>
            <field name="serialVersionUID" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="busyPainter" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="busy" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="delay" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="wasBusyOnNotify" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXBusyLabel"/>
            <field name="direction" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void setDirection(org.jdesktop.swingx.JXBusyLabel$Direction)"
                    class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void &lt;init&gt;(java.awt.Dimension)" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void initPainter(java.awt.Dimension)" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="org.jdesktop.swingx.painter.BusyPainter createBusyPainter(java.awt.Dimension)"
                    class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="boolean isBusy()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void setBusy(boolean)" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void startAnimation()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void stopAnimation()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void removeNotify()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void addNotify()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void frameChanged()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="org.jdesktop.swingx.painter.BusyPainter getBusyPainter()"
                    class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void setBusyPainter(org.jdesktop.swingx.painter.BusyPainter)"
                    class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="int getDelay()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void setDelay(int)" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXBusyLabel"/>
            <method signature="org.jdesktop.swingx.JXBusyLabel$Direction access$000(org.jdesktop.swingx.JXBusyLabel)"
                    class="org.jdesktop.swingx.JXBusyLabel"/>
            <class name="org.jdesktop.swingx.JXButton$1"/>
            <class name="org.jdesktop.swingx.JXButton$DefaultBackgroundPainter"/>
            <class name="org.jdesktop.swingx.JXButton$DefaultForegroundPainter"/>
            <class name="org.jdesktop.swingx.JXButton"/>
            <method signature="org.jdesktop.swingx.JXCollapsiblePane$Direction[] values()"
                    class="org.jdesktop.swingx.JXCollapsiblePane$Direction"/>
            <method signature="org.jdesktop.swingx.JXCollapsiblePane$Direction valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.JXCollapsiblePane$Direction"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton$1"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton$2"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton$3"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton$ActionHandler"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton$ColorChangeListener"/>
            <class name="org.jdesktop.swingx.JXColorSelectionButton"/>
            <class name="org.jdesktop.swingx.JXDatePicker$1"/>
            <class name="org.jdesktop.swingx.JXDatePicker$TodayPanel$1"/>
            <class name="org.jdesktop.swingx.JXDatePicker$TodayPanel$TodayAction"/>
            <class name="org.jdesktop.swingx.JXDatePicker$TodayPanel"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="EDITOR" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="MONTH_VIEW" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="LINK_PANEL" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="COMMIT_KEY" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="CANCEL_KEY" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="HOME_NAVIGATE_KEY" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="HOME_COMMIT_KEY" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="_dateField" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="_linkPanel" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="_linkFormat" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="linkDate" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="_monthView" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="editable" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="listenerMap" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="lightWeightPopupEnabled" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="date" class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="monthViewListener" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void &lt;init&gt;(java.util.Date)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void &lt;init&gt;(java.util.Locale)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void &lt;init&gt;(java.util.Date,java.util.Locale)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void init()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void initMonthView()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="java.beans.PropertyChangeListener getMonthViewListener()"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void updateTimeZone(java.util.TimeZone,java.util.TimeZone)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="org.jdesktop.swingx.plaf.DatePickerUI getUI()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.DatePickerUI)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setFormats(java.lang.String[])" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setMonthView(org.jdesktop.swingx.JXMonthView)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setTimeZone(java.util.TimeZone)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setLinkDay(java.util.Date,java.lang.String)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setLinkFormat(java.text.MessageFormat)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="java.text.MessageFormat getLinkFormat()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void updateLinkFormat()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setLinkPanel(javax.swing.JPanel)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setComponentOrientation(java.awt.ComponentOrientation)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="boolean isEditValid()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setEditable(boolean)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="java.awt.Font getFont()" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setFont(java.awt.Font)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void setLightWeightPopupEnabled(boolean)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="int getBaseline(int,int)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void addActionListener(java.awt.event.ActionListener)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void removeActionListener(java.awt.event.ActionListener)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="java.util.EventListener[] getListeners(java.lang.Class)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void fireActionPerformed(java.lang.String)" class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="void access$100(org.jdesktop.swingx.JXDatePicker)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <method signature="org.jdesktop.swingx.JXMonthView access$200(org.jdesktop.swingx.JXDatePicker)"
                    class="org.jdesktop.swingx.JXDatePicker"/>
            <field name="EXECUTE_ACTION_COMMAND" class="org.jdesktop.swingx.JXDialog"/>
            <field name="CLOSE_ACTION_COMMAND" class="org.jdesktop.swingx.JXDialog"/>
            <field name="UIPREFIX" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="void &lt;init&gt;(javax.swing.JComponent)" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="void setStatusBar(org.jdesktop.swingx.JXStatusBar)"
                    class="org.jdesktop.swingx.JXDialog"/>
            <method signature="org.jdesktop.swingx.JXStatusBar getStatusBar()" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="void setToolBar(javax.swing.JToolBar)" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="javax.swing.JToolBar getToolBar()" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="void doClose()" class="org.jdesktop.swingx.JXDialog"/>
            <method signature="int search(java.lang.String)"
                    class="org.jdesktop.swingx.JXEditorPane$DocumentSearchable"/>
            <method signature="int search(java.lang.String,int)"
                    class="org.jdesktop.swingx.JXEditorPane$DocumentSearchable"/>
            <method signature="int search(java.lang.String,int,boolean)"
                    class="org.jdesktop.swingx.JXEditorPane$DocumentSearchable"/>
            <method signature="boolean isEmpty(java.lang.String)"
                    class="org.jdesktop.swingx.JXEditorPane$DocumentSearchable"/>
            <class name="org.jdesktop.swingx.JXEditorPane$ParagraphSelector$ParagraphRenderer"/>
            <class name="org.jdesktop.swingx.JXEditorPane$ParagraphSelector"/>
            <field name="ACTION_FIND" class="org.jdesktop.swingx.JXEditorPane"/>
            <field name="ACTION_UNDO" class="org.jdesktop.swingx.JXEditorPane"/>
            <field name="ACTION_REDO" class="org.jdesktop.swingx.JXEditorPane"/>
            <field name="ACTION_CUT" class="org.jdesktop.swingx.JXEditorPane"/>
            <field name="ACTION_COPY" class="org.jdesktop.swingx.JXEditorPane"/>
            <field name="ACTION_PASTE" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.String)"
                    class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void &lt;init&gt;(java.net.URL)" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="javax.swing.event.CaretListener getCaretListener()"
                    class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="javax.swing.JComboBox getParagraphSelector()" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void applyTag(javax.swing.text.html.HTML$Tag)" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void setSearchable(org.jdesktop.swingx.search.Searchable)"
                    class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="boolean hasCommand(java.lang.Object)" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="java.lang.Object[] getCommands()" class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="boolean doCommand(java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.swingx.JXEditorPane"/>
            <method signature="void cancel()" class="org.jdesktop.swingx.JXFindBar"/>
            <field name="FIND_NEXT_ACTION_COMMAND" class="org.jdesktop.swingx.JXFindPanel"/>
            <field name="FIND_PREVIOUS_ACTION_COMMAND" class="org.jdesktop.swingx.JXFindPanel"/>
            <method signature="void findNext()" class="org.jdesktop.swingx.JXFindPanel"/>
            <method signature="void findPrevious()" class="org.jdesktop.swingx.JXFindPanel"/>
            <method signature="org.jdesktop.swingx.JXFrame$StartPosition valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.JXFrame$StartPosition"/>
            <class name="org.jdesktop.swingx.JXGlassBox$1"/>
            <class name="org.jdesktop.swingx.JXGlassBox$2"/>
            <class name="org.jdesktop.swingx.JXGlassBox"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$1"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$2"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$3"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$4"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$AddThumbAction"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$ChangeAlphaListener"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$ChangeLocationListener"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$DeleteThumbAction"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$GradientStyle"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$RepaintOnEventListener"/>
            <class name="org.jdesktop.swingx.JXGradientChooser$StopListener"/>
            <class name="org.jdesktop.swingx.JXGradientChooser"/>
            <class name="org.jdesktop.swingx.JXGraph$1"/>
            <class name="org.jdesktop.swingx.JXGraph$DrawablePlot"/>
            <class name="org.jdesktop.swingx.JXGraph$PanHandler"/>
            <class name="org.jdesktop.swingx.JXGraph$PanMotionHandler"/>
            <class name="org.jdesktop.swingx.JXGraph$Plot"/>
            <class name="org.jdesktop.swingx.JXGraph$ResetHandler"/>
            <class name="org.jdesktop.swingx.JXGraph$ZoomHandler"/>
            <class name="org.jdesktop.swingx.JXGraph"/>
            <method signature="org.jdesktop.swingx.JXHeader$IconPosition[] values()"
                    class="org.jdesktop.swingx.JXHeader$IconPosition"/>
            <method signature="org.jdesktop.swingx.JXHeader$IconPosition valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.JXHeader$IconPosition"/>
            <field name="serialVersionUID" class="org.jdesktop.swingx.JXHeader"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXHeader"/>
            <field name="title" class="org.jdesktop.swingx.JXHeader"/>
            <field name="description" class="org.jdesktop.swingx.JXHeader"/>
            <field name="icon" class="org.jdesktop.swingx.JXHeader"/>
            <field name="titleFont" class="org.jdesktop.swingx.JXHeader"/>
            <field name="descriptionFont" class="org.jdesktop.swingx.JXHeader"/>
            <field name="titleForeground" class="org.jdesktop.swingx.JXHeader"/>
            <field name="descriptionForeground" class="org.jdesktop.swingx.JXHeader"/>
            <field name="iconPosition" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.String)"
                    class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.String,javax.swing.Icon)"
                    class="org.jdesktop.swingx.JXHeader"/>
            <method signature="org.jdesktop.swingx.plaf.HeaderUI getUI()" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.HeaderUI)" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void setTitle(java.lang.String)" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void setDescription(java.lang.String)" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void setFont(java.awt.Font)" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="void setIconPosition(org.jdesktop.swingx.JXHeader$IconPosition)"
                    class="org.jdesktop.swingx.JXHeader"/>
            <method signature="java.awt.Dimension getPreferredSize()" class="org.jdesktop.swingx.JXHeader"/>
            <method signature="javax.swing.plaf.PanelUI getUI()" class="org.jdesktop.swingx.JXHeader"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXHyperlink"/>
            <method signature="void setOverrulesActionOnClick(boolean)" class="org.jdesktop.swingx.JXHyperlink"/>
            <class name="org.jdesktop.swingx.JXImagePanel$1$1"/>
            <class name="org.jdesktop.swingx.JXImagePanel$1"/>
            <class name="org.jdesktop.swingx.JXImagePanel$2"/>
            <class name="org.jdesktop.swingx.JXImagePanel$MouseHandler"/>
            <class name="org.jdesktop.swingx.JXImagePanel$Style"/>
            <class name="org.jdesktop.swingx.JXImagePanel"/>
            <class name="org.jdesktop.swingx.JXImageView$1"/>
            <class name="org.jdesktop.swingx.JXImageView$2"/>
            <class name="org.jdesktop.swingx.JXImageView$3"/>
            <class name="org.jdesktop.swingx.JXImageView$4"/>
            <class name="org.jdesktop.swingx.JXImageView$5"/>
            <class name="org.jdesktop.swingx.JXImageView$6"/>
            <class name="org.jdesktop.swingx.JXImageView$DnDHandler"/>
            <class name="org.jdesktop.swingx.JXImageView$ImageTransferable"/>
            <class name="org.jdesktop.swingx.JXImageView$MoveHandler"/>
            <class name="org.jdesktop.swingx.JXImageView"/>
            <method signature="int getValue()" class="org.jdesktop.swingx.JXLabel$IValue"/>
            <field name="HTML" class="org.jdesktop.swingx.JXLabel$MultiLineSupport"/>
            <method signature="org.jdesktop.swingx.JXLabel$TextAlignment[] values()"
                    class="org.jdesktop.swingx.JXLabel$TextAlignment"/>
            <method signature="org.jdesktop.swingx.JXLabel$TextAlignment valueOf(java.lang.String)"
                    class="org.jdesktop.swingx.JXLabel$TextAlignment"/>
            <field name="NORMAL" class="org.jdesktop.swingx.JXLabel"/>
            <field name="INVERTED" class="org.jdesktop.swingx.JXLabel"/>
            <field name="VERTICAL_LEFT" class="org.jdesktop.swingx.JXLabel"/>
            <field name="VERTICAL_RIGHT" class="org.jdesktop.swingx.JXLabel"/>
            <field name="oldRendererKey" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void &lt;init&gt;(javax.swing.Icon)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void &lt;init&gt;(javax.swing.Icon,int)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void &lt;init&gt;(java.lang.String,javax.swing.Icon,int)"
                    class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void &lt;init&gt;(java.lang.String,int)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setForegroundPainter(org.jdesktop.swingx.painter.Painter)"
                    class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setBackgroundPainter(org.jdesktop.swingx.painter.Painter)"
                    class="org.jdesktop.swingx.JXLabel"/>
            <method signature="org.jdesktop.swingx.painter.Painter getBackgroundPainter()"
                    class="org.jdesktop.swingx.JXLabel"/>
            <method signature="java.awt.Container getViewport()" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setMaxLineSpan(int)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setTextRotation(double)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setTextAlignment(org.jdesktop.swingx.JXLabel$TextAlignment)"
                    class="org.jdesktop.swingx.JXLabel"/>
            <method signature="void setPaintBorderInsets(boolean)" class="org.jdesktop.swingx.JXLabel"/>
            <method signature="org.jdesktop.swingx.JXList getList()" class="org.jdesktop.swingx.JXList$ListAdapter"/>
            <class name="org.jdesktop.swingx.JXLoginPane$1"/>
            <class name="org.jdesktop.swingx.JXLoginPane$2"/>
            <class name="org.jdesktop.swingx.JXLoginPane$3"/>
            <class name="org.jdesktop.swingx.JXLoginPane$4"/>
            <class name="org.jdesktop.swingx.JXLoginPane$5"/>
            <class name="org.jdesktop.swingx.JXLoginPane$6"/>
            <class name="org.jdesktop.swingx.JXLoginPane$7"/>
            <class name="org.jdesktop.swingx.JXLoginPane$CancelAction"/>
            <class name="org.jdesktop.swingx.JXLoginPane$CapsOnTest"/>
            <class name="org.jdesktop.swingx.JXLoginPane$CapsOnWinListener"/>
            <class name="org.jdesktop.swingx.JXLoginPane$ComboNamePanel$1"/>
            <class name="org.jdesktop.swingx.JXLoginPane$ComboNamePanel$2"/>
            <class name="org.jdesktop.swingx.JXLoginPane$ComboNamePanel$NameComboBoxModel"/>
            <class name="org.jdesktop.swingx.JXLoginPane$ComboNamePanel"/>
            <class name="org.jdesktop.swingx.JXLoginPane$JXBtnPanel"/>
            <class name="org.jdesktop.swingx.JXLoginPane$JXLoginDialog"/>
            <class name="org.jdesktop.swingx.JXLoginPane$JXLoginFrame"/>
            <class name="org.jdesktop.swingx.JXLoginPane$LoginAction"/>
            <class name="org.jdesktop.swingx.JXLoginPane$LoginListenerImpl"/>
            <class name="org.jdesktop.swingx.JXLoginPane$LoginPaneLayout"/>
            <class name="org.jdesktop.swingx.JXLoginPane$NameComponent"/>
            <class name="org.jdesktop.swingx.JXLoginPane$NullLoginService"/>
            <class name="org.jdesktop.swingx.JXLoginPane$NullPasswordStore"/>
            <class name="org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher$1"/>
            <class name="org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher"/>
            <class name="org.jdesktop.swingx.JXLoginPane$SaveMode"/>
            <class name="org.jdesktop.swingx.JXLoginPane$SimpleNamePanel$1"/>
            <class name="org.jdesktop.swingx.JXLoginPane$SimpleNamePanel"/>
            <class name="org.jdesktop.swingx.JXLoginPane$Status"/>
            <field name="serialVersionUID" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="LOGIN_ACTION_COMMAND" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="CANCEL_LOGIN_ACTION_COMMAND" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="status" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="banner" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="bannerText" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="messageLabel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="errorMessageLabel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="loginPanel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="contentPanel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="namePanel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="passwordField" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="serverCombo" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="saveCB" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="capsOn" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="progressPanel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="progressMessageLabel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="loginService" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="passwordStore" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="userNameStore" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="servers" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="saveMode" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="oldCursor" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="namePanelEnabled" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="defaultLoginListener" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="capsOnTest" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="caps" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="isTestingCaps" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="capsOnListener" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="capsLockSupport" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="buttonPanel" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="capsOnWinListener" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="contentCardPane" class="org.jdesktop.swingx.JXLoginPane"/>
            <field name="isErrorMessageSet" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void reinitLocales(java.util.Locale)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.auth.LoginService)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore,java.util.List)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setCapsLock(boolean)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean isCapsLockOn()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean isCapsLockDetectionSupported()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.plaf.LoginPaneUI getUI()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.LoginPaneUI)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void recreateLoginPanel()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXPanel createLoginPanel()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setComponentOrientation(java.awt.ComponentOrientation)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void initComponents()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.awt.Image createLoginBanner()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.Action createLoginAction()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.Action createCancelAction()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$SaveMode getSaveMode()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setSaveMode(org.jdesktop.swingx.JXLoginPane$SaveMode)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean isRememberPassword()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.util.List getServers()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setServers(java.util.List)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.LoginListener getDefaultLoginListener()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setLoginService(org.jdesktop.swingx.auth.LoginService)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.LoginService getLoginService()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setPasswordStore(org.jdesktop.swingx.auth.PasswordStore)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.UserNameStore getUserNameStore()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setUserNameStore(org.jdesktop.swingx.auth.UserNameStore)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.PasswordStore getPasswordStore()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setUserName(java.lang.String)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setUserNameEnabled(boolean)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean isUserNameEnabled()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.lang.String getUserName()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setPassword(char[])" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="char[] getPassword()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.awt.Image getBanner()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setBanner(java.awt.Image)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.lang.String getMessage()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setMessage(java.lang.String)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status getStatus()"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setStatus(org.jdesktop.swingx.JXLoginPane$Status)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setLocale(java.util.Locale)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void startLogin()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void cancelLogin()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void savePassword()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void removeNotify()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.awt.Window getTLA()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void addNotify()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void updatePassword(java.lang.String)" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status showLoginDialog(java.awt.Component,org.jdesktop.swingx.auth.LoginService)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status showLoginDialog(java.awt.Component,org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status showLoginDialog(java.awt.Component,org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore,java.util.List)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status showLoginDialog(java.awt.Component,org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$JXLoginFrame showLoginFrame(org.jdesktop.swingx.auth.LoginService)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$JXLoginFrame showLoginFrame(org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$JXLoginFrame showLoginFrame(org.jdesktop.swingx.auth.LoginService,org.jdesktop.swingx.auth.PasswordStore,org.jdesktop.swingx.auth.UserNameStore,java.util.List)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$JXLoginFrame showLoginFrame(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void initWindow(java.awt.Window,org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void setButtonPanel(org.jdesktop.swingx.JXLoginPane$JXBtnPanel)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.plaf.PanelUI getUI()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void access$100(org.jdesktop.swingx.JXLoginPane,boolean)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$NameComponent access$500(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.UserNameStore access$600(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.JCheckBox access$700(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.auth.PasswordStore access$800(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.JPanel access$900(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLabel access$1000(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.lang.String access$1100()" class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="javax.swing.JPasswordField access$1200(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="void access$1300(org.jdesktop.swingx.JXLoginPane,java.lang.String)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="org.jdesktop.swingx.JXLoginPane$Status access$1502(org.jdesktop.swingx.JXLoginPane,org.jdesktop.swingx.JXLoginPane$Status)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean access$1602(org.jdesktop.swingx.JXLoginPane,boolean)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="boolean access$1600(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <method signature="java.awt.Window access$1900(org.jdesktop.swingx.JXLoginPane)"
                    class="org.jdesktop.swingx.JXLoginPane"/>
            <class name="org.jdesktop.swingx.JXMonthView$1"/>
            <class name="org.jdesktop.swingx.JXMonthView$2"/>
            <field name="COMMIT_KEY" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="CANCEL_KEY" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="BOX_PADDING_X" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="BOX_PADDING_Y" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="DAYS_OF_THE_WEEK" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="SELECTION_MODEL" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="TRAVERSABLE" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="FLAGGED_DATES" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="DAYS_IN_WEEK" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="MONTHS_IN_YEAR" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="firstDisplayedDay" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="cal" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="anchor" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="today" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="todayTimer" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="firstDayOfWeek" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="model" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="modelListener" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="flaggedDates" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="listenerMap" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="traversable" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="leadingDays" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="trailingDays" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="showWeekNumber" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="componentInputMapEnabled" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="modifiedStartDate" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="modifiedEndDate" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="_daysOfTheWeek" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="_monthStringInsets" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="boxPaddingX" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="boxPaddingY" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="minCalCols" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="minCalRows" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="todayBackgroundColor" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="monthStringBackground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="monthStringForeground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="daysOfTheWeekForeground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="selectedBackground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="dayToColorTable" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="flaggedDayForeground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="selectedForeground" class="org.jdesktop.swingx.JXMonthView"/>
            <field name="zoomable" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void &lt;init&gt;(java.util.Locale)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void &lt;init&gt;(java.util.Date)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void &lt;init&gt;(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void &lt;init&gt;(java.util.Date,org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void superSetLocale(java.util.Locale)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setTimeZone(java.util.TimeZone)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="int getFirstDayOfWeek()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setFirstDayOfWeek(int)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void initModel(org.jdesktop.swingx.calendar.DateSelectionModel,java.util.Locale)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="org.jdesktop.swingx.event.DateSelectionListener getDateSelectionListener()"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void installCalendar()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.Date getAnchorDate()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateCalendar()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateTimeZone()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateDatesAfterTimeZoneChange(java.util.TimeZone)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateFirstDayOfWeek()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateMinimalDaysOfFirstWeek()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.Date getLastDisplayedDay()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.Date getDayAtLocation(int,int)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.Date getCurrentDate()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateTodayFromCurrentTime()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void incrementToday()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setToday(java.util.Date)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.Date startOfDay(java.util.Date)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="org.jdesktop.swingx.plaf.MonthViewUI getUI()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.MonthViewUI)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setSelectionModel(org.jdesktop.swingx.calendar.DateSelectionModel)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void removeSelectionInterval(java.util.Date,java.util.Date)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setSelectionMode(org.jdesktop.swingx.calendar.DateSelectionModel$SelectionMode)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setLowerBound(java.util.Date)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setUpperBound(java.util.Date)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setUnselectableDates(java.util.Date[])" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setFlaggedDates(java.util.Date[])" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void addFlaggedDates(java.util.Date[])" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void removeFlaggedDates(java.util.Date[])" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void clearFlaggedDates()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.SortedSet getFlaggedDates()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="boolean hasFlaggedDates()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setShowingLeadingDays(boolean)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setShowingTrailingDays(boolean)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setTraversable(boolean)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setShowingWeekNumber(boolean)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setDaysOfTheWeek(java.lang.String[])" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.lang.String[] getDaysOfTheWeek()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setTodayBackground(java.awt.Color)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setDayForeground(int,java.awt.Color)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.awt.Color getDayForeground(int)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.awt.Insets getMonthStringInsets()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setMonthStringInsets(java.awt.Insets)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setPreferredColumnCount(int)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void setPreferredRowCount(int)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void removeNotify()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void addNotify()" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="java.util.EventListener[] getListeners(java.lang.Class)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void fireActionPerformed(java.lang.String)" class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void cleanupWeekSelectionDates(java.util.Date,java.util.Date)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <method signature="void access$000(org.jdesktop.swingx.JXMonthView)"
                    class="org.jdesktop.swingx.JXMonthView"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane$1"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane$AccessibleMultiSplitPane"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane$DefaultDividerPainter"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane$DividerPainter"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane$InputHandler"/>
            <class name="org.jdesktop.swingx.JXMultiSplitPane"/>
            <class name="org.jdesktop.swingx.JXMultiThumbSlider$1"/>
            <class name="org.jdesktop.swingx.JXMultiThumbSlider$MultiThumbMouseListener"/>
            <class name="org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp"/>
            <class name="org.jdesktop.swingx.JXMultiThumbSlider$ThumbHandler"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="tdl" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="thumbs" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="thumbRenderer" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="trackRenderer" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="model" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="listeners" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="selected" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.plaf.MultiThumbSliderUI getUI()"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.MultiThumbSliderUI)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void paintComponent(java.awt.Graphics)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void paintRange(java.awt.Graphics2D)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="float getThumbValue(int)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="float getThumbValue(org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="int getThumbIndex(org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void clipThumbPosition(org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.multislider.ThumbRenderer getThumbRenderer()"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.multislider.TrackRenderer getTrackRenderer()"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="float getMinimumValue()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setMinimumValue(float)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="float getMaximumValue()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setMaximumValue(float)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setThumbPositionByX(org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setThumbXByPosition(org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp,float)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void recalc()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setBounds(int,int,int,int)" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="javax.swing.JComponent getSelectedThumb()"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="int getSelectedIndex()" class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.multislider.MultiThumbModel getModel()"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void setModel(org.jdesktop.swingx.multislider.MultiThumbModel)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void addMultiThumbListener(org.jdesktop.swingx.multislider.ThumbListener)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp access$202(org.jdesktop.swingx.JXMultiThumbSlider,org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp access$200(org.jdesktop.swingx.JXMultiThumbSlider)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="int access$300(org.jdesktop.swingx.JXMultiThumbSlider,org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="java.util.List access$400(org.jdesktop.swingx.JXMultiThumbSlider)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void access$500(org.jdesktop.swingx.JXMultiThumbSlider,org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="java.util.List access$600(org.jdesktop.swingx.JXMultiThumbSlider)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void access$700(org.jdesktop.swingx.JXMultiThumbSlider,org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <method signature="void access$800(org.jdesktop.swingx.JXMultiThumbSlider,org.jdesktop.swingx.JXMultiThumbSlider$ThumbComp,float)"
                    class="org.jdesktop.swingx.JXMultiThumbSlider"/>
            <field name="oldOpaque" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void &lt;init&gt;(boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void &lt;init&gt;(java.awt.LayoutManager)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void &lt;init&gt;(java.awt.LayoutManager,boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void setAlpha(float)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="boolean isInheritAlpha()" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void setInheritAlpha(boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void setScrollableTracksViewportHeight(boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void setScrollableTracksViewportWidth(boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <method signature="boolean canInstallBackgroundUIResourceAsPainter(java.awt.Color)"
                    class="org.jdesktop.swingx.JXPanel"/>
            <method signature="void setPaintBorderInsets(boolean)" class="org.jdesktop.swingx.JXPanel"/>
            <class name="org.jdesktop.swingx.JXRadioGroup$1"/>
            <class name="org.jdesktop.swingx.JXRadioGroup$ActionSelectionListener"/>
            <class name="org.jdesktop.swingx.JXRadioGroup"/>
            <class name="org.jdesktop.swingx.JXSearchPanel"/>
            <class name="org.jdesktop.swingx.JXTable$BooleanEditor"/>
            <class name="org.jdesktop.swingx.JXTable$GenericEditor"/>
            <class name="org.jdesktop.swingx.JXTable$NumberEditor"/>
            <method signature="org.jdesktop.swingx.JXTable getTable()"
                    class="org.jdesktop.swingx.JXTable$TableAdapter"/>
            <class name="org.jdesktop.swingx.JXTableHeader$SortGestureRecognizer"/>
            <field name="sortGestureRecognizer" class="org.jdesktop.swingx.JXTableHeader"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTableHeader"/>
            <method signature="org.jdesktop.swingx.JXTableHeader$SortGestureRecognizer getSortGestureRecognizer()"
                    class="org.jdesktop.swingx.JXTableHeader"/>
            <method signature="void setSortGestureRecognizer(org.jdesktop.swingx.JXTableHeader$SortGestureRecognizer)"
                    class="org.jdesktop.swingx.JXTableHeader"/>
            <method signature="org.jdesktop.swingx.JXTableHeader$SortGestureRecognizer createSortGestureRecognizer()"
                    class="org.jdesktop.swingx.JXTableHeader"/>
            <class name="org.jdesktop.swingx.JXTaskPane$1"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="SCROLL_ON_EXPAND_CHANGED_KEY" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="TITLE_CHANGED_KEY" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="ICON_CHANGED_KEY" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="SPECIAL_CHANGED_KEY" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="ANIMATED_CHANGED_KEY" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="title" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="icon" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="special" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="collapsed" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="scrollOnExpand" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="mnemonic" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="mnemonicIndex" class="org.jdesktop.swingx.JXTaskPane"/>
            <field name="collapsePane" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.TaskPaneUI)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setTitle(java.lang.String)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setIcon(javax.swing.Icon)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setSpecial(boolean)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setScrollOnExpand(boolean)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setAnimated(boolean)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setMnemonic(int)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void updateDisplayedMnemonicIndex(java.lang.String,int)"
                    class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="int getDisplayedMnemonicIndex()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setDisplayedMnemonicIndex(int)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="java.awt.Component add(javax.swing.Action)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void addImpl(java.awt.Component,java.lang.Object,int)"
                    class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void setLayout(java.awt.LayoutManager)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void remove(java.awt.Component)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void remove(int)" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void removeAll()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="java.lang.String paramString()" class="org.jdesktop.swingx.JXTaskPane"/>
            <method signature="void access$000(org.jdesktop.swingx.JXTaskPane,java.lang.String,java.lang.Object,java.lang.Object)"
                    class="org.jdesktop.swingx.JXTaskPane"/>
            <class name="org.jdesktop.swingx.JXTaskPaneContainer$1"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="org.jdesktop.swingx.plaf.TaskPaneContainerUI getUI()"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.TaskPaneContainerUI)"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="void add(org.jdesktop.swingx.JXTaskPane)"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="void remove(org.jdesktop.swingx.JXTaskPane)"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="boolean getScrollableTracksViewportHeight()"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="boolean getScrollableTracksViewportWidth()"
                    class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <method signature="javax.swing.plaf.PanelUI getUI()" class="org.jdesktop.swingx.JXTaskPaneContainer"/>
            <class name="org.jdesktop.swingx.JXTipOfTheDay$1"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <field name="PREFERENCE_KEY" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <field name="CURRENT_TIP_CHANGED_KEY" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <field name="model" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <field name="currentTip" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.tips.TipOfTheDayModel)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.TipOfTheDayUI)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="org.jdesktop.swingx.plaf.TipOfTheDayUI getUI()"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void setModel(org.jdesktop.swingx.tips.TipOfTheDayModel)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void setCurrentTip(int)" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void showDialog(java.awt.Component)" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="boolean showDialog(java.awt.Component,java.util.prefs.Preferences)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="boolean showDialog(java.awt.Component,java.util.prefs.Preferences,boolean)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="boolean showDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="boolean showDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice,boolean)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="boolean isShowingOnStartup(java.util.prefs.Preferences)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="void forceShowOnStartup(java.util.prefs.Preferences)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="javax.swing.JDialog createDialog(java.awt.Component,org.jdesktop.swingx.JXTipOfTheDay$ShowOnStartupChoice)"
                    class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <method signature="javax.swing.plaf.PanelUI getUI()" class="org.jdesktop.swingx.JXTipOfTheDay"/>
            <field name="uiClassID" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="LEFT_DECORATION" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="RIGHT_DECORATION" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="title" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="titleFont" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="titleForeground" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="contentPanel" class="org.jdesktop.swingx.JXTitledPanel"/>
            <field name="titlePainter" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void &lt;init&gt;(java.lang.String)" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.awt.Container)"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="org.jdesktop.swingx.plaf.TitledPanelUI getUI()"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setUI(org.jdesktop.swingx.plaf.TitledPanelUI)"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="java.lang.String getUIClassID()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void updateUI()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setTitle(java.lang.String)" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="java.awt.Container getContentContainer()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setContentContainer(java.awt.Container)" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setRightDecoration(javax.swing.JComponent)"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="javax.swing.JComponent getRightDecoration()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setLeftDecoration(javax.swing.JComponent)"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="javax.swing.JComponent getLeftDecoration()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setTitleFont(java.awt.Font)" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setTitlePainter(org.jdesktop.swingx.painter.Painter)"
                    class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="void setTitleForeground(java.awt.Color)" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="java.awt.Container createDefaultContainer()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <method signature="javax.swing.plaf.PanelUI getUI()" class="org.jdesktop.swingx.JXTitledPanel"/>
            <class name="org.jdesktop.swingx.JXTitledSeparator$1"/>
            <class name="org.jdesktop.swingx.JXTitledSeparator"/>
            <class name="org.jdesktop.swingx.JXTree$1"/>
            <class name="org.jdesktop.swingx.JXTree$2"/>
            <class name="org.jdesktop.swingx.JXTree$3"/>
            <class name="org.jdesktop.swingx.JXTree$Actions"/>
            <class name="org.jdesktop.swingx.JXTree$CellEditorRemover"/>
            <class name="org.jdesktop.swingx.JXTree$DelegatingRenderer"/>
            <class name="org.jdesktop.swingx.JXTree$TreeAdapter"/>
            <class name="org.jdesktop.swingx.JXTree$XTreeModelHandler"/>
            <class name="org.jdesktop.swingx.JXTree"/>
            <class name="org.jdesktop.swingx.JXTreeTable$1"/>
            <class name="org.jdesktop.swingx.JXTreeTable$Actions"/>
            <class name="org.jdesktop.swingx.JXTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler"/>
            <class name="org.jdesktop.swingx.JXTreeTable$ListToTreeSelectionModelWrapper"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$1"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$2"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableDataAdapter"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableHacker"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt2"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$1"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$2"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$3"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$4"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$5"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$6"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter$7"/>
            <class name="org.jdesktop.swingx.JXTreeTable$TreeTableModelAdapter"/>
            <class name="org.jdesktop.swingx.JXTreeTable"/>
            <class name="org.jdesktop.swingx.multislider.AbstractMultiThumbModel"/>
            <class name="org.jdesktop.swingx.multislider.DefaultMultiThumbModel$1"/>
            <class name="org.jdesktop.swingx.multislider.DefaultMultiThumbModel"/>
            <class name="org.jdesktop.swingx.multislider.MultiThumbModel"/>
            <class name="org.jdesktop.swingx.multislider.Thumb"/>
            <class name="org.jdesktop.swingx.multislider.ThumbDataEvent"/>
            <class name="org.jdesktop.swingx.multislider.ThumbDataListener"/>
            <class name="org.jdesktop.swingx.multislider.ThumbListener"/>
            <method signature="javax.swing.JComponent getThumbRendererComponent(org.jdesktop.swingx.JXMultiThumbSlider,int,boolean)"
                    class="org.jdesktop.swingx.multislider.ThumbRenderer"/>
            <method signature="javax.swing.JComponent getRendererComponent(org.jdesktop.swingx.JXMultiThumbSlider)"
                    class="org.jdesktop.swingx.multislider.TrackRenderer"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$ColSplit"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$Divider"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$InvalidLayoutException"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$Leaf"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$Node"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$RowSplit"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout$Split"/>
            <class name="org.jdesktop.swingx.MultiSplitLayout"/>
            <class name="org.jdesktop.swingx.multisplitpane.DefaultSplitPaneModel"/>
            <method signature="void setBackground(java.awt.Color)"
                    class="org.jdesktop.swingx.renderer.AbstractRenderer"/>
            <method signature="void setForeground(java.awt.Color)"
                    class="org.jdesktop.swingx.renderer.AbstractRenderer"/>
            <method signature="boolean isExpanded()" class="org.jdesktop.swingx.renderer.CellContext"/>
            <method signature="boolean isLeaf()" class="org.jdesktop.swingx.renderer.CellContext"/>
            <method signature="javax.swing.Icon getIcon()" class="org.jdesktop.swingx.renderer.CellContext"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue)"
                    class="org.jdesktop.swingx.renderer.ComponentProvider"/>
            <method signature="org.jdesktop.swingx.renderer.StringValue getStringValue()"
                    class="org.jdesktop.swingx.renderer.ComponentProvider"/>
            <method signature="org.jdesktop.swingx.renderer.DefaultVisuals getDefaultVisuals()"
                    class="org.jdesktop.swingx.renderer.ComponentProvider"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue)"
                    class="org.jdesktop.swingx.renderer.DefaultListRenderer"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,int)"
                    class="org.jdesktop.swingx.renderer.DefaultListRenderer"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,org.jdesktop.swingx.renderer.IconValue)"
                    class="org.jdesktop.swingx.renderer.DefaultListRenderer"/>
            <method signature="void &lt;init&gt;(org.jdesktop.swingx.renderer.StringValue,org.jdesktop.swingx.renderer.IconValue,int)"
                    class="org.jdesktop.swingx.renderer.DefaultListRenderer"/>
            <class name="org.jdesktop.swingx.renderer.DefaultTreeRenderer"/>
            <method signature="void setForeground(java.awt.Color)" class="org.jdesktop.swingx.renderer.DefaultVisuals"/>
            <method signature="void setBackground(java.awt.Color)" class="org.jdesktop.swingx.renderer.DefaultVisuals"/>
            <class name="org.jdesktop.swingx.renderer.IconValue$IconType"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.renderer.IconValues"/>
            <field name="strict" class="org.jdesktop.swingx.renderer.JRendererLabel"/>
            <method signature="org.jdesktop.swingx.painter.Painter getPainter()"
                    class="org.jdesktop.swingx.renderer.PainterAware"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.renderer.StringValues"/>
            <class name="org.jdesktop.swingx.renderer.TreeCellContext$TreeFocusBorder"/>
            <class name="org.jdesktop.swingx.renderer.TreeCellContext"/>
            <class name="org.jdesktop.swingx.renderer.WrappingIconPanel"/>
            <class name="org.jdesktop.swingx.renderer.WrappingProvider"/>
            <field name="EXECUTE_BUTTON_ACTIONCOMMAND" class="org.jdesktop.swingx.rollover.RolloverController"/>
            <field name="CLICKED_KEY" class="org.jdesktop.swingx.rollover.RolloverProducer"/>
            <field name="ROLLOVER_KEY" class="org.jdesktop.swingx.rollover.RolloverProducer"/>
            <class name="org.jdesktop.swingx.rollover.TreeRolloverController"/>
            <class name="org.jdesktop.swingx.rollover.TreeRolloverProducer"/>
            <method signature="void resetFoundColumn()"
                    class="org.jdesktop.swingx.search.AbstractSearchable$SearchResult"/>
            <method signature="java.util.regex.MatchResult getMatchResult()"
                    class="org.jdesktop.swingx.search.AbstractSearchable$SearchResult"/>
            <method signature="java.util.regex.Pattern getPattern()"
                    class="org.jdesktop.swingx.search.AbstractSearchable$SearchResult"/>
            <field name="MATCH_HIGHLIGHTER" class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <method signature="int search(java.lang.String)" class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <method signature="int search(java.lang.String,int)" class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <method signature="int search(java.lang.String,int,boolean)"
                    class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <method signature="boolean isEmpty(java.lang.String)"
                    class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <method signature="void setMatchHighlighter(org.jdesktop.swingx.decorator.AbstractHighlighter)"
                    class="org.jdesktop.swingx.search.AbstractSearchable"/>
            <class name="org.jdesktop.swingx.search.PatternModel$AnchoredSearchMode"/>
            <field name="rules" class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <method signature="boolean isAutoDetect()" class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <method signature="void setMatchRule(java.lang.String)"
                    class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <method signature="java.util.List getMatchRules()"
                    class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <method signature="java.util.List createAndInitRules()"
                    class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <method signature="boolean supportsRules()" class="org.jdesktop.swingx.search.PatternModel$RegexCreator"/>
            <field name="SEARCH_PREFIX" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="REGEX_UNCHANGED" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="REGEX_ANCHORED" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="REGEX_WILDCARD" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="REGEX_MATCH_RULES" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_RULE_CONTAINS" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_RULE_EQUALS" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_RULE_ENDSWITH" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_RULE_STARTSWITH" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_BACKWARDS_ACTION_COMMAND" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_WRAP_ACTION_COMMAND" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_CASE_ACTION_COMMAND" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="MATCH_INCREMENTAL_ACTION_COMMAND" class="org.jdesktop.swingx.search.PatternModel"/>
            <field name="regexCreatorKey" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void setBackwards(boolean)" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void setCaseSensitive(boolean)" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void updatePattern(boolean)" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void removePropertyChangeListener(java.beans.PropertyChangeListener)"
                    class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void setRegexCreatorKey(java.lang.String)"
                    class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void createRegexCreator(java.lang.String)"
                    class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="java.lang.String getRegexCreatorKey()" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="java.lang.String getDefaultRegexCreatorKey()"
                    class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void setRegexCreator(org.jdesktop.swingx.search.PatternModel$RegexCreator)"
                    class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="void setMatchRule(java.lang.String)" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="java.lang.String getMatchRule()" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="java.util.List getMatchRules()" class="org.jdesktop.swingx.search.PatternModel"/>
            <method signature="int search(java.lang.String)" class="org.jdesktop.swingx.search.Searchable"/>
            <method signature="int search(java.lang.String,int)" class="org.jdesktop.swingx.search.Searchable"/>
            <method signature="int search(java.lang.String,int,boolean)" class="org.jdesktop.swingx.search.Searchable"/>
            <method signature="int search(java.util.regex.Pattern,int)" class="org.jdesktop.swingx.search.Searchable"/>
            <method signature="void removeTarget(java.awt.Container)"
                    class="org.jdesktop.swingx.search.SearchFactory$FindRemover"/>
            <method signature="void setInstance(org.jdesktop.swingx.search.SearchFactory)"
                    class="org.jdesktop.swingx.search.SearchFactory"/>
            <method signature="void setUseFindBar(boolean)" class="org.jdesktop.swingx.search.SearchFactory"/>
            <class name="org.jdesktop.swingx.search.TreeSearchable"/>
            <class name="org.jdesktop.swingx.sort.RowFilters$GeneralFilter"/>
            <class name="org.jdesktop.swingx.sort.RowFilters$RegexFilter"/>
            <class name="org.jdesktop.swingx.sort.RowFilters"/>
            <method signature="boolean isAscending(javax.swing.SortOrder)" class="org.jdesktop.swingx.sort.SortUtils"/>
            <method signature="boolean isSorted(javax.swing.SortOrder,boolean)"
                    class="org.jdesktop.swingx.sort.SortUtils"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.sort.SortUtils"/>
            <method signature="org.jdesktop.swingx.renderer.StringValue getStringValue(java.lang.Class)"
                    class="org.jdesktop.swingx.sort.StringValueRegistry"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.sort.TableSortController"/>
            <class name="org.jdesktop.swingx.StackLayout"/>
            <field name="COLUMN_CONTROL_MARKER" class="org.jdesktop.swingx.table.ColumnControlButton"/>
            <field name="COLUMN_CONTROL_BUTTON_ICON_KEY" class="org.jdesktop.swingx.table.ColumnControlButton"/>
            <field name="COLUMN_CONTROL_BUTTON_MARGIN_KEY" class="org.jdesktop.swingx.table.ColumnControlButton"/>
            <method signature="void setInstance(org.jdesktop.swingx.table.ColumnFactory)"
                    class="org.jdesktop.swingx.table.ColumnFactory"/>
            <method signature="void setDefaultPackMargin(int)" class="org.jdesktop.swingx.table.ColumnFactory"/>
            <class name="org.jdesktop.swingx.table.DatePickerCellEditor$1"/>
            <class name="org.jdesktop.swingx.table.DatePickerCellEditor"/>
            <method signature="org.jdesktop.swingx.table.TableColumnExt getColumnExt(int)"
                    class="org.jdesktop.swingx.table.DefaultTableColumnModelExt"/>
            <method signature="javax.swing.event.EventListenerList getEventListenerList()"
                    class="org.jdesktop.swingx.table.DefaultTableColumnModelExt"/>
            <method signature="org.jdesktop.swingx.event.TableColumnModelExtListener[] getTableColumnModelExtListeners()"
                    class="org.jdesktop.swingx.table.DefaultTableColumnModelExt"/>
            <class name="org.jdesktop.swingx.table.LabelProperties$1"/>
            <class name="org.jdesktop.swingx.table.LabelProperties"/>
            <class name="org.jdesktop.swingx.table.NumberEditorExt$1"/>
            <class name="org.jdesktop.swingx.table.NumberEditorExt$2"/>
            <class name="org.jdesktop.swingx.table.NumberEditorExt$3"/>
            <class name="org.jdesktop.swingx.table.NumberEditorExt"/>
            <class name="org.jdesktop.swingx.table.NumberEditorNumberFormat"/>
            <method signature="org.jdesktop.swingx.table.TableColumnExt getColumnExt(int)"
                    class="org.jdesktop.swingx.table.TableColumnModelExt"/>
            <method signature="void addColumnModelListener(javax.swing.event.TableColumnModelListener)"
                    class="org.jdesktop.swingx.table.TableColumnModelExt"/>
            <class name="org.jdesktop.swingx.tips.DefaultTip"/>
            <class name="org.jdesktop.swingx.tips.DefaultTipOfTheDayModel"/>
            <class name="org.jdesktop.swingx.tips.TipLoader"/>
            <class name="org.jdesktop.swingx.tips.TipOfTheDayModel$Tip"/>
            <class name="org.jdesktop.swingx.tips.TipOfTheDayModel"/>
            <class name="org.jdesktop.swingx.tree.DefaultXTreeCellEditor$XEditorContainer"/>
            <class name="org.jdesktop.swingx.tree.DefaultXTreeCellEditor"/>
            <class name="org.jdesktop.swingx.tree.DefaultXTreeCellRenderer"/>
            <class name="org.jdesktop.swingx.tree.TreeModelSupport"/>
            <class name="org.jdesktop.swingx.treetable.AbstractMutableTreeTableNode"/>
            <class name="org.jdesktop.swingx.treetable.AbstractTreeTableModel"/>
            <class name="org.jdesktop.swingx.treetable.DefaultMutableTreeTableNode"/>
            <class name="org.jdesktop.swingx.treetable.DefaultTreeTableModel"/>
            <class name="org.jdesktop.swingx.treetable.FileSystemModel"/>
            <class name="org.jdesktop.swingx.treetable.MutableTreeTableNode"/>
            <class name="org.jdesktop.swingx.treetable.SimpleFileSystemModel"/>
            <class name="org.jdesktop.swingx.treetable.TreeTableCellEditor$TreeTableTextField"/>
            <class name="org.jdesktop.swingx.treetable.TreeTableCellEditor"/>
            <class name="org.jdesktop.swingx.treetable.TreeTableModel"/>
            <class name="org.jdesktop.swingx.treetable.TreeTableNode"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.util.Contract"/>
            <class name="org.jdesktop.swingx.util.JVM"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.util.OS"/>
            <method signature="boolean isWindows2003()" class="org.jdesktop.swingx.util.OS"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.util.PaintUtils"/>
            <method signature="java.awt.Rectangle getTextBounds(java.awt.Graphics,javax.swing.JLabel)"
                    class="org.jdesktop.swingx.util.PaintUtils"/>
            <method signature="void paintGradient(java.awt.Graphics,javax.swing.JComponent,java.awt.Color,java.awt.Color)"
                    class="org.jdesktop.swingx.util.PaintUtils"/>
            <class name="org.jdesktop.swingx.util.ShapeUtils"/>
            <field name="CTRL_WILDCARD_MASK" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="ALT_WILDCARD_MASK" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WINNT" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WIN95" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WIN98" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_SOLARIS" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_LINUX" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_HP" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_AIX" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_IRIX" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_SUNOS" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_TRU64" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_OS2" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_MAC" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WIN2000" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_VMS" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WIN_OTHER" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_OTHER" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_FREEBSD" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_WINDOWS_MASK" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="OS_UNIX_MASK" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="TYPICAL_WINDOWS_TASKBAR_HEIGHT" class="org.jdesktop.swingx.util.Utilities"/>
            <field name="TYPICAL_MACOSX_MENU_HEIGHT" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="boolean isWindows()" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="boolean isUnix()" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="boolean isLargeFrameIcons()" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.awt.GraphicsConfiguration getCurrentGraphicsConfiguration()"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.awt.Rectangle getUsableScreenBounds()" class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.awt.Rectangle getUsableScreenBounds(java.awt.GraphicsConfiguration)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.lang.String keyToString(javax.swing.KeyStroke)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="javax.swing.KeyStroke[] stringToKeys(java.lang.String)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="boolean addModifiers(java.lang.StringBuffer,int)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.lang.Object toPrimitiveArray(java.lang.Object[])"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.lang.Object[] toObjectArray(java.lang.Object)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.lang.String[] wrapStringToArray(java.lang.String,int,java.text.BreakIterator,boolean)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <method signature="java.lang.String trimString(java.lang.String)"
                    class="org.jdesktop.swingx.util.Utilities"/>
            <class name="org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener$1"/>
            <class name="org.jdesktop.swingx.util.WindowUtils$MinSizeComponentListener"/>
            <method signature="void &lt;init&gt;()" class="org.jdesktop.swingx.util.WindowUtils"/>
            <method signature="java.awt.Point getPointForStaggering(java.awt.Window)"
                    class="org.jdesktop.swingx.util.WindowUtils"/>
            <method signature="java.util.List getAllComponents(java.awt.Container)"
                    class="org.jdesktop.swingx.util.WindowUtils"/>
            <method signature="void setMinimumSizeManager(java.awt.Window,int,int)"
                    class="org.jdesktop.swingx.util.WindowUtils"/>
            <method signature="int getGap()" class="org.jdesktop.swingx.VerticalLayout"/>
            <method signature="void setGap(int)" class="org.jdesktop.swingx.VerticalLayout"/>
        </removed-code>
        <removed-resources>
        </removed-resources>
        <!-- 	shrinked C:\develope\freerapid\dev\swingx.jar BY 51,31%. -->
        <!-- 	size before: 1182 KB, size after: 575 KB. -->
        <!-- 	removed 355 classes, 641 methods, 231 fields, 0 resources. -->
        <!-- 	435 classes remaining of 790 total. -->
    </inOutPair>
</yshrink>

