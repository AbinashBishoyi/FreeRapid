<?xml version="1.0" encoding="UTF-8"?>
<yshrink version="0.1">
    <!-- parsing c:\develope\freerapid\dev\mina-core-2.0.0-RC1.jar -->
    <entrypoints>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] sha256(byte[],byte[])" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="int readInt32Reverse(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] fromHex(char[])" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.String toHex(byte[])" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] readAsByteArray(java.io.File)" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="int readInt24(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="char[] toHexChars(int)" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.String getOverHttp(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] fromHex(java.lang.String)" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.CharSequence readAsString(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.String toHex(byte[],int,int,boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.String toHex(byte)" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] readAsByteArray(java.io.File,long)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="void writeInt24(org.apache.mina.core.buffer.IoBuffer,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="void writeInt32Reverse(org.apache.mina.core.buffer.IoBuffer,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] readAsByteArray(java.lang.String,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.String toHex(byte[],boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet hexToPacket(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="java.lang.CharSequence readAsString(java.io.File)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="byte[] readAsByteArray(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <field name="HEX_DIGITS" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <field name="BYTE_SEPARATOR" class="cz.vity.freerapid.plugins.services.rtmp.Utils"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$1"/>
        <method signature="void run()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$1"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.RtmpClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$1"/>
        <field name="this$0" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$1"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="int getTime()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void setPacketType(cz.vity.freerapid.plugins.services.rtmp.Packet$Type)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void setStreamId(int)" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.Header$Type,int,cz.vity.freerapid.plugins.services.rtmp.Packet$Type)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="int getChannelId()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Header$Type getHeaderType()"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void encode(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="int getStreamId()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="int getSize()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="boolean isRelative()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void setRelative(boolean)" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void setSize(int)" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void setTime(int)" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet$Type getPacketType()"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <method signature="boolean decode(org.apache.mina.core.buffer.IoBuffer,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="packetType" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="headerType" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="streamId" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="time" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="channelId" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="relative" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <field name="size" class="cz.vity.freerapid.plugins.services.rtmp.Header"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.DecoderOutput"/>
        <method signature="void disconnect()" class="cz.vity.freerapid.plugins.services.rtmp.DecoderOutput"/>
        <method signature="void write(java.lang.Object)" class="cz.vity.freerapid.plugins.services.rtmp.DecoderOutput"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.DecoderOutput"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="void updateVideoChannelTime(int)"
                class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="int getChannelAbsoluteTime(cz.vity.freerapid.plugins.services.rtmp.Header)"
                class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="void &lt;init&gt;(int,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="void logVideoProgress(int)" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <method signature="void logFinalVideoDuration()" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="videoChannel" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="session" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="lastUpdateTime" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="channelTimeMap" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <field name="seekTime" class="cz.vity.freerapid.plugins.services.rtmp.WriterStatus"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="java.lang.String toString()"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type valueOf(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type[] values()"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="byte access$000(cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type parseByte(byte)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="byte byteValue()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="UNDEFINED" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="BOOLEAN" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="LONG_STRING" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="$VALUES" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="OBJECT" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="NULL" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="MAP" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="NUMBER" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="converter" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="DATE" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="value" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="ARRAY" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="UNSUPPORTED" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <field name="STRING" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$Type"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Header$1"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Header$1"/>
        <field name="$SwitchMap$cz$vity$freerapid$plugins$services$rtmp$Header$Type"
               class="cz.vity.freerapid.plugins.services.rtmp.Header$1"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <method signature="void &lt;init&gt;(java.lang.Enum[])"
                class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <method signature="java.lang.String toString(java.lang.Enum)"
                class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <method signature="java.lang.Enum parseByte(byte)" class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <field name="map" class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <method signature="void encode(org.apache.mina.core.session.IoSession,java.lang.Object,org.apache.mina.filter.codec.ProtocolEncoderOutput)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.RtmpEncoder"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$ProxyIoHandler"/>
        <method signature="void proxySessionOpened(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$ProxyIoHandler"/>
        <method signature="void &lt;clinit&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$ProxyIoHandler"/>
        <method signature="void &lt;init&gt;(org.apache.mina.core.service.IoHandler)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$ProxyIoHandler"/>
        <field name="ioHandler" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$ProxyIoHandler"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="void &lt;init&gt;(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="void setSwfVerification(cz.vity.freerapid.plugins.services.rtmp.RtmpSession,cz.vity.freerapid.plugins.webclient.interfaces.HttpDownloadClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="int readBytes(java.io.InputStream,byte[],int)"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="void &lt;clinit&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="java.lang.String getSwfURL()"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="int getSwfHash(java.io.File,byte[])"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <method signature="int getSwfHash(java.io.InputStream,byte[])"
                class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="hash" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="swfURL" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="REFRESH_INTERVAL" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="lastRefreshTime" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <field name="size" class="cz.vity.freerapid.plugins.services.rtmp.SwfVerificationHelper"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="org.apache.mina.core.session.IoSession access$100(cz.vity.freerapid.plugins.services.rtmp.RtmpClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void exceptionCaught(org.apache.mina.core.session.IoSession,java.lang.Throwable)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="org.apache.mina.proxy.ProxyConnector getProxyConnector(org.apache.mina.transport.socket.SocketConnector,cz.vity.freerapid.plugins.webclient.ConnectionSettings)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void disconnect()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="java.util.logging.Logger access$200()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.RtmpSession access$400(cz.vity.freerapid.plugins.services.rtmp.RtmpClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void connect()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="void sessionOpened(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <method signature="org.apache.mina.core.service.IoConnector access$300(cz.vity.freerapid.plugins.services.rtmp.RtmpClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <field name="session" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <field name="connector" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <field name="closed" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <field name="ioSession" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <method signature="void close()" class="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <method signature="void writeFlvData(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <method signature="java.io.InputStream getStream()"
                class="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <method signature="void write(cz.vity.freerapid.plugins.services.rtmp.Packet)"
                class="cz.vity.freerapid.plugins.services.rtmp.OutputWriter"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <method signature="void messageReceived(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <method signature="void filterWrite(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.RtmpeIoFilter"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet$Type parseByte(byte)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet$Type valueOf(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet$Type[] values()"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="byte byteValue()" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="CHUNK_SIZE" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="SERVER_BANDWIDTH" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="FLEX_SHARED_OBJECT" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="FLEX_MESSAGE" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="$VALUES" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="NOTIFY" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="SHARED_OBJECT" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="FLEX_STREAM_SEND" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="BYTES_READ" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="FLV_DATA" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="AUDIO_DATA" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="CLIENT_BANDWIDTH" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="converter" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="value" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="INVOKE" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="CONTROL_MESSAGE" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <field name="VIDEO_DATA" class="cz.vity.freerapid.plugins.services.rtmp.Packet$Type"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void close()" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void writeFlvData(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void write(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void writeHeader()" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="java.io.InputStream getStream()"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void write(cz.vity.freerapid.plugins.services.rtmp.Packet$Type,org.apache.mina.core.buffer.IoBuffer,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void write(cz.vity.freerapid.plugins.services.rtmp.Packet)"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <method signature="void &lt;init&gt;(int,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="buffer" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="status" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="headerWritten" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="in" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="channel" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <field name="out" class="cz.vity.freerapid.plugins.services.rtmp.FlvStreamWriter"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.DefaultInvokeResultHandler"/>
        <method signature="void &lt;clinit&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.DefaultInvokeResultHandler"/>
        <method signature="void handle(cz.vity.freerapid.plugins.services.rtmp.Invoke,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.DefaultInvokeResultHandler"/>
        <method signature="void &lt;init&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.DefaultInvokeResultHandler"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.DefaultInvokeResultHandler"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <method signature="java.lang.String getThrowableDescription(java.lang.Throwable)"
                class="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <method signature="boolean tryDownloadAndSaveFile(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.AbstractRtmpRunner"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setConnectParams(java.util.Map)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setSwfSize(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setStreamDuration(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void initSwfVerification(java.io.File)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setInvokeResultHandler(cz.vity.freerapid.plugins.services.rtmp.InvokeResultHandler)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setCipherIn(javax.crypto.Cipher)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setHttpFile(cz.vity.freerapid.plugins.webclient.interfaces.HttpFile)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.util.Map getInvokedMethods()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getClientPublicKey()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void send(cz.vity.freerapid.plugins.services.rtmp.Handshake)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.lang.String getHost()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setCipherOut(javax.crypto.Cipher)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getPlayDuration()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setPlayDuration(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="boolean isProtocolEncrypted(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.DecoderOutput getDecoderOutput()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setEncrypted(boolean)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setType8(boolean)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setConnectionSettings(cz.vity.freerapid.plugins.webclient.ConnectionSettings)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void putInto(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="boolean isEncrypted()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setSwfVerification(byte[])"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getBytesReadLastSent()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setServerHandshakeReceived(boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getChunkSize()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="javax.crypto.KeyAgreement getKeyAgreement()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.util.Map getPrevHeadersOut()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="boolean isServerHandshakeReceived()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setDecoderOutput(cz.vity.freerapid.plugins.services.rtmp.DecoderOutput)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setBytesReadLastSent(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void send(cz.vity.freerapid.plugins.services.rtmp.Packet)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setPlayStart(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.util.Map getPrevPacketsIn()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="javax.crypto.Cipher getCipherOut()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setHandshakeComplete(boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getSwfHash()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.lang.String getPlayName()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getSwfVerification()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.RtmpSession getFrom(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String,boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setClientPublicKey(byte[])"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setPlayName(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getServerDigest()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setSwfHash(byte[])" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.util.Map getConnectParams()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void send(cz.vity.freerapid.plugins.services.rtmp.Invoke)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.InvokeResultHandler getInvokeResultHandler()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="boolean isHandshakeComplete()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void initConnectParams(java.lang.String,int,java.lang.String,java.lang.String,boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setServerDigest(byte[])" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getPort()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.util.Map getPrevHeadersIn()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getSwfSize()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void initSwfVerification(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setKeyAgreement(javax.crypto.KeyAgreement)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="boolean isType8()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setServerResponse(byte[])" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setSwfHash(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setClientDigest(byte[])" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setChunkSize(int)" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.webclient.ConnectionSettings getConnectionSettings()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getServerResponse()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void initConnectParams(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="java.lang.String resultFor(cz.vity.freerapid.plugins.services.rtmp.Invoke)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.OutputWriter getOutputWriter()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="javax.crypto.Cipher getCipherIn()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getStreamDuration()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="void setOutputWriter(cz.vity.freerapid.plugins.services.rtmp.OutputWriter)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="cz.vity.freerapid.plugins.webclient.interfaces.HttpFile getHttpFile()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getPlayStart()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="byte[] getClientDigest()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <method signature="int getNextInvokeId()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="port" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="connectionSettings" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="cipherOut" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="serverHandshakeReceived" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="clientPublicKey" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="serverResponse" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="playName" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="playStart" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="outputWriter" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="swfSize" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="clientDigest" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="serverDigest" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="chunkSize" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="httpFile" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="connectParams" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="DEBUG" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="bytesReadLastSent" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="type8" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="host" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="invokedMethods" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="handshakeComplete" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="playDuration" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="invokeResultHandler" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="prevHeadersIn" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="RTMP_SESSION_KEY" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="swfHash" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="keyAgreement" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="prevPacketsIn" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="swfVerification" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="encrypted" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="prevHeadersOut" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="cipherIn" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="decoderOutput" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="streamDuration" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <field name="nextInvokeId" class="cz.vity.freerapid.plugins.services.rtmp.RtmpSession"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Header$Type parseByte(byte)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="byte access$100(cz.vity.freerapid.plugins.services.rtmp.Header$Type)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="int access$000(cz.vity.freerapid.plugins.services.rtmp.Header$Type)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,int,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="byte byteValue()" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Header$Type valueOf(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Header$Type[] values()"
                class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="TINY" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="LARGE" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="SMALL" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="MEDIUM" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="converter" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="$VALUES" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="value" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <field name="size" class="cz.vity.freerapid.plugins.services.rtmp.Header$Type"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="java.lang.String decodeString(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void encode(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="java.lang.String getName()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="java.lang.Object getValue()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void decode(org.apache.mina.core.buffer.IoBuffer,boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void setValue(java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void &lt;init&gt;(java.lang.String,java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void encodeString(org.apache.mina.core.buffer.IoBuffer,java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void encode(org.apache.mina.core.buffer.IoBuffer,java.lang.Object[])"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="org.apache.mina.core.buffer.IoBuffer encode(java.lang.Object[])"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <method signature="void &lt;init&gt;(java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <field name="name" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <field name="value" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <field name="type" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet encode(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void decode(cz.vity.freerapid.plugins.services.rtmp.Packet)"
                class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void setTime(int)" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void &lt;init&gt;(int,java.lang.String,int,java.lang.Object[])"
                class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.AmfObject getSecondArgAsAmfObject()"
                class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="int getLastArgAsInt()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void &lt;init&gt;(java.lang.String,int,java.lang.Object[])"
                class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="int getSequenceId()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <method signature="java.lang.String getMethodName()" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="streamId" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="time" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="channelId" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="args" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="sequenceId" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <field name="methodName" class="cz.vity.freerapid.plugins.services.rtmp.Invoke"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <method signature="void disconnect()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.RtmpClient)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <method signature="void write(java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <method signature="void &lt;clinit&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <field name="client" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$MinaIoSessionOutput"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.RtmpClient$1)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <method signature="void &lt;clinit&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <method signature="org.apache.mina.filter.codec.ProtocolDecoder getDecoder(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <method signature="void &lt;init&gt;()"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <method signature="org.apache.mina.filter.codec.ProtocolEncoder getEncoder(org.apache.mina.core.session.IoSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <field name="decoder" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <field name="encoder" class="cz.vity.freerapid.plugins.services.rtmp.RtmpClient$RtmpCodecFactory"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <method signature="boolean decode(org.apache.mina.core.buffer.IoBuffer,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <method signature="boolean doDecode(org.apache.mina.core.session.IoSession,org.apache.mina.core.buffer.IoBuffer,org.apache.mina.filter.codec.ProtocolDecoderOutput)"
                class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void add(cz.vity.freerapid.plugins.services.rtmp.AmfProperty)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="java.util.List getProperties()" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.AmfProperty getProperty(java.lang.String)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void encode(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="java.lang.String getFirstPropertyAsString()"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void decode(org.apache.mina.core.buffer.IoBuffer,boolean)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void put(java.lang.String,java.lang.Object)"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void &lt;init&gt;(java.util.Map)" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="org.apache.mina.core.buffer.IoBuffer encode(java.lang.Object[])"
                class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void put(java.lang.Object)" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <field name="properties" class="cz.vity.freerapid.plugins.services.rtmp.AmfObject"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum$Convert"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum$Convert"/>
        <method signature="byte byteValue()" class="cz.vity.freerapid.plugins.services.rtmp.ByteToEnum$Convert"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$1"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$1"/>
        <field name="$SwitchMap$cz$vity$freerapid$plugins$services$rtmp$AmfProperty$Type"
               class="cz.vity.freerapid.plugins.services.rtmp.AmfProperty$1"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="byte[] concat(byte[],byte[])" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="boolean decodeServerResponse(org.apache.mina.core.buffer.IoBuffer,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Handshake generateClientRequest2(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Handshake generateClientRequest1(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="java.security.KeyPair generateKeyPair(cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="void rtmpe8_crypt(byte[],byte[])" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="void XTEA_encrypt(int[],int[])" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="byte[] getPublicKey(java.security.KeyPair)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="int calculateOffset(byte[],int,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="org.apache.mina.core.buffer.IoBuffer getData()"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="byte[] getFourBytesFrom(org.apache.mina.core.buffer.IoBuffer,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <method signature="byte[] getSharedSecret(byte[],javax.crypto.KeyAgreement)"
                class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="NUM_ROUNDS" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="HANDSHAKE_SIZE" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="SERVER_CONST_CRUD" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="CLIENT_CONST_CRUD" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="data" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="RANDOM_CRUD" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="DH_BASE" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="DELTA" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="DH_MODULUS" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="CLIENT_CONST" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="DH_MODULUS_BYTES" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="RTMPE8_KEYS" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="SERVER_CONST" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <field name="SHA256_LEN" class="cz.vity.freerapid.plugins.services.rtmp.Handshake"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder$1"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder$1"/>
        <field name="$SwitchMap$cz$vity$freerapid$plugins$services$rtmp$Packet$Type"
               class="cz.vity.freerapid.plugins.services.rtmp.RtmpDecoder$1"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.InvokeResultHandler"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.InvokeResultHandler"/>
        <method signature="void handle(cz.vity.freerapid.plugins.services.rtmp.Invoke,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.InvokeResultHandler"/>
        <class name="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Header getHeader()"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="void setData(org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="java.lang.String toString()" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.Header,org.apache.mina.core.buffer.IoBuffer)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet ping(int,int,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="void &lt;clinit&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="void &lt;init&gt;(cz.vity.freerapid.plugins.services.rtmp.Header,int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet serverBw(int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet bytesRead(int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="org.apache.mina.core.buffer.IoBuffer getData()"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="boolean isComplete()" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="cz.vity.freerapid.plugins.services.rtmp.Packet swfVerification(byte[])"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="void &lt;init&gt;()" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="org.apache.mina.core.buffer.IoBuffer encode(int)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <method signature="boolean decode(org.apache.mina.core.buffer.IoBuffer,cz.vity.freerapid.plugins.services.rtmp.RtmpSession)"
                class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <field name="complete" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <field name="data" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <field name="logger" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
        <field name="header" class="cz.vity.freerapid.plugins.services.rtmp.Packet"/>
    </entrypoints>

    <!-- WARNING:Unresolved external dependency: cz.vity.freerapid.plugins.webclient.AbstractRunner not found! -->
    <!-- writing shrinked c:\develope\freerapid\dev\mina-core-2.0.0-RC1.jar to c:\develope\freerapid\dev\mina-core-2.0.0-RC1-sh.jar. -->
    <inOutPair in="c:\develope\freerapid\dev\mina-core-2.0.0-RC1.jar"
               out="c:\develope\freerapid\dev\mina-core-2.0.0-RC1-sh.jar">
        <removed-code>
            <class name="org.apache.mina.core.IoUtil"/>
            <field name="serialVersionUID" class="org.apache.mina.core.RuntimeIoException"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.core.RuntimeIoException"/>
            <class name="org.apache.mina.core.buffer.AbstractIoBuffer$1"/>
            <class name="org.apache.mina.core.buffer.AbstractIoBuffer$2"/>
            <class name="org.apache.mina.core.buffer.AbstractIoBuffer$3"/>
            <class name="org.apache.mina.core.buffer.AbstractIoBuffer$4"/>
            <field name="BYTE_MASK" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <field name="SHORT_MASK" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <field name="INT_MASK" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.buffer.AbstractIoBuffer)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="boolean isReadOnly()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int minimumCapacity()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer minimumCapacity(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="boolean isDerived()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer setAutoShrink(boolean)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer expand(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer expand(int,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer shrink()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer limit(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int markValue()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer reset()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer sweep()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer sweep(byte)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="short getUnsigned()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="short getUnsigned(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer put(int,byte)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="char getChar()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putChar(char)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="char getChar(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putChar(int,char)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.CharBuffer asCharBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="short getShort(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putShort(int,short)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.ShortBuffer asShortBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getInt(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putInt(int,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.IntBuffer asIntBuffer()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="long getLong()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putLong(long)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="long getLong(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putLong(int,long)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.LongBuffer asLongBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="float getFloat()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putFloat(float)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="float getFloat(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putFloat(int,float)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.FloatBuffer asFloatBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="double getDouble(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putDouble(int,double)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.nio.DoubleBuffer asDoubleBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer asReadOnlyBuffer()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer asReadOnlyBuffer0()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer duplicate()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer duplicate0()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer slice()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer getSlice(int,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer getSlice(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer slice0()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getUnsignedShort()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getUnsignedShort(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="long getUnsignedInt()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getMediumInt()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getUnsignedMediumInt()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getMediumInt(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getUnsignedMediumInt(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int getMediumInt(byte,byte,byte)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putMediumInt(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putMediumInt(int,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="long getUnsignedInt(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.io.InputStream asInputStream()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.io.OutputStream asOutputStream()"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.String getString(java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.String getString(int,java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putString(java.lang.CharSequence,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putString(java.lang.CharSequence,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.String getPrefixedString(java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.String getPrefixedString(int,java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,int,byte,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Object getObject()" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Object getObject(java.lang.ClassLoader)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putObject(java.lang.Object)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="boolean prefixedDataAvailable(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="boolean prefixedDataAvailable(int,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="int indexOf(byte)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer skip(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fill(byte,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fillAndReset(byte,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fill(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fillAndReset(int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnum(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnum(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnumShort(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnumShort(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnumInt(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Enum getEnumInt(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnum(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnum(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumShort(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumShort(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumInt(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumInt(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.Object toEnum(java.lang.Class,int)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.lang.String enumConversionErrorMessage(java.lang.Enum,java.lang.String)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSet(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSet(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetShort(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetShort(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetInt(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetInt(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetLong(java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetLong(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="java.util.EnumSet toEnumSet(java.lang.Class,long)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSet(java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSet(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetShort(java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetShort(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetInt(java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetInt(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetLong(java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetLong(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="long toLong(java.util.Set)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <method signature="void checkFieldSize(int)" class="org.apache.mina.core.buffer.AbstractIoBuffer"/>
            <class name="org.apache.mina.core.buffer.BufferDataException"/>
            <class name="org.apache.mina.core.buffer.CachedBufferAllocator$1"/>
            <class name="org.apache.mina.core.buffer.CachedBufferAllocator$2"/>
            <class name="org.apache.mina.core.buffer.CachedBufferAllocator$CachedBuffer"/>
            <class name="org.apache.mina.core.buffer.CachedBufferAllocator"/>
            <method signature="boolean isUseDirectBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="void setUseDirectBuffer(boolean)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer wrap(byte[],int,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="void free()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean isDirect()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean isDerived()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean isReadOnly()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int minimumCapacity()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer minimumCapacity(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer capacity(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean isAutoShrink()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer setAutoShrink(boolean)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer expand(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer expand(int,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer shrink()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer limit(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int markValue()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer reset()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer sweep()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer sweep(byte)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer duplicate()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer slice()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer asReadOnlyBuffer()"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean hasArray()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="byte[] array()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int arrayOffset()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="short getUnsigned()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="short getUnsigned(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer put(int,byte)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer getSlice(int,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer getSlice(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer put(java.nio.ByteBuffer)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="char getChar()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putChar(char)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="char getChar(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putChar(int,char)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.CharBuffer asCharBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getUnsignedShort()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="short getShort(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getUnsignedShort(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putShort(int,short)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.ShortBuffer asShortBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="long getUnsignedInt()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getMediumInt()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getUnsignedMediumInt()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getMediumInt(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getUnsignedMediumInt(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putMediumInt(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putMediumInt(int,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int getInt(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="long getUnsignedInt(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putInt(int,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.IntBuffer asIntBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="long getLong()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putLong(long)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="long getLong(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putLong(int,long)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.LongBuffer asLongBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="float getFloat()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putFloat(float)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="float getFloat(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putFloat(int,float)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.FloatBuffer asFloatBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="double getDouble(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putDouble(int,double)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.nio.DoubleBuffer asDoubleBuffer()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.io.InputStream asInputStream()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.io.OutputStream asOutputStream()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.String getHexDump(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.String getString(java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.String getString(int,java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putString(java.lang.CharSequence,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putString(java.lang.CharSequence,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.String getPrefixedString(java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.String getPrefixedString(int,java.nio.charset.CharsetDecoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,int,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putPrefixedString(java.lang.CharSequence,int,int,byte,java.nio.charset.CharsetEncoder)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Object getObject()" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Object getObject(java.lang.ClassLoader)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putObject(java.lang.Object)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean prefixedDataAvailable(int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="boolean prefixedDataAvailable(int,int)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="int indexOf(byte)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer skip(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fill(byte,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fillAndReset(byte,int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fill(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer fillAndReset(int)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnum(java.lang.Class)" class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnum(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnumShort(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnumShort(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnumInt(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.lang.Enum getEnumInt(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnum(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnum(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumShort(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumShort(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumInt(java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumInt(int,java.lang.Enum)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSet(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSet(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetShort(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetShort(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetInt(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetInt(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetLong(java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="java.util.EnumSet getEnumSetLong(int,java.lang.Class)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSet(java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSet(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetShort(java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetShort(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetInt(java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetInt(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetLong(java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer putEnumSetLong(int,java.util.Set)"
                    class="org.apache.mina.core.buffer.IoBuffer"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.core.buffer.IoBufferHexDumper"/>
            <class name="org.apache.mina.core.buffer.IoBufferWrapper"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.buffer.SimpleBufferAllocator,org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer,java.nio.ByteBuffer)"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer duplicate0()"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer slice0()"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="org.apache.mina.core.buffer.IoBuffer asReadOnlyBuffer0()"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="byte[] array()" class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="int arrayOffset()"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="boolean hasArray()"
                    class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="void free()" class="org.apache.mina.core.buffer.SimpleBufferAllocator$SimpleBuffer"/>
            <method signature="void &lt;init&gt;(java.nio.channels.FileChannel)"
                    class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="long getWrittenBytes()" class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="long getRemainingBytes()" class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="java.nio.channels.FileChannel getFileChannel()"
                    class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="long getPosition()" class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="void update(long)" class="org.apache.mina.core.file.DefaultFileRegion"/>
            <method signature="java.nio.channels.FileChannel getFileChannel()"
                    class="org.apache.mina.core.file.FileRegion"/>
            <method signature="long getPosition()" class="org.apache.mina.core.file.FileRegion"/>
            <method signature="void update(long)" class="org.apache.mina.core.file.FileRegion"/>
            <method signature="long getRemainingBytes()" class="org.apache.mina.core.file.FileRegion"/>
            <method signature="long getWrittenBytes()" class="org.apache.mina.core.file.FileRegion"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1"/>
            <method signature="void sessionOpened(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1"/>
            <method signature="void sessionClosed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1"/>
            <method signature="void sessionIdle(org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1"/>
            <method signature="void messageSent(org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl$1"/>
            <method signature="void setFilter(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void addAfter(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void addBefore(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void remove()" class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void access$500(org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl access$402(org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl,org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl"/>
            <method signature="void sessionCreated(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter"/>
            <method signature="void sessionOpened(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter"/>
            <method signature="void sessionClosed(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter"/>
            <method signature="void sessionIdle(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter"/>
            <method signature="void messageSent(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain$TailFilter"/>
            <method signature="org.apache.mina.core.session.IoSession getSession()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void addFirst(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void addLast(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void addBefore(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void addAfter(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void remove(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter replace(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter replace(java.lang.Class,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void clear()" class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void register(org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void deregister(org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void deregister0(org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.DefaultIoFilterChain$EntryImpl checkOldName(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void checkAddable(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireSessionCreated()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void callNextSessionCreated(org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireSessionOpened()" class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void callNextSessionOpened(org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireSessionClosed()" class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void callNextSessionClosed(org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireSessionIdle(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void callNextSessionIdle(org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireMessageReceived(java.lang.Object)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void fireMessageSent(org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void callNextMessageSent(org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="java.util.List getAll()" class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="java.util.List getAllReversed()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="boolean contains(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="boolean contains(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="boolean contains(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void access$700(org.apache.mina.core.filterchain.DefaultIoFilterChain,org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void access$800(org.apache.mina.core.filterchain.DefaultIoFilterChain,org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void access$900(org.apache.mina.core.filterchain.DefaultIoFilterChain,org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void access$1000(org.apache.mina.core.filterchain.DefaultIoFilterChain,org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void access$1300(org.apache.mina.core.filterchain.DefaultIoFilterChain,org.apache.mina.core.filterchain.IoFilterChain$Entry,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChain"/>
            <method signature="void setFilter(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void addAfter(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void addBefore(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void remove()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void access$100(org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder$EntryImpl"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="java.util.List getAll()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="java.util.List getAllReversed()"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="boolean contains(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="boolean contains(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void addBefore(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void addAfter(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter replace(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void replace(java.lang.Class,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void clear()" class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void setFilters(java.util.Map)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="boolean isOrderedMap(java.util.Map)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void buildFilterChain(org.apache.mina.core.filterchain.IoFilterChain)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void checkBaseName(java.lang.String)"
                    class="org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter$NextFilter"/>
            <method signature="void sessionOpened(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter$NextFilter"/>
            <method signature="void sessionClosed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter$NextFilter"/>
            <method signature="void sessionIdle(org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.IoFilter$NextFilter"/>
            <method signature="void messageSent(org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.IoFilter$NextFilter"/>
            <method signature="void init()" class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void destroy()" class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void onPreAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void onPostAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void onPreRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void onPostRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void sessionCreated(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void sessionOpened(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void sessionClosed(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void sessionIdle(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void messageSent(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.IoFilter"/>
            <method signature="void init()" class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void destroy()" class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void onPreAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void onPostAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void onPreRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void onPostRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void sessionCreated(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void sessionOpened(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void sessionClosed(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void sessionIdle(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void messageSent(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.IoFilterAdapter"/>
            <method signature="void addBefore(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain$Entry"/>
            <method signature="void addAfter(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain$Entry"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain$Entry"/>
            <method signature="void remove()" class="org.apache.mina.core.filterchain.IoFilterChain$Entry"/>
            <method signature="org.apache.mina.core.session.IoSession getSession()"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(java.lang.String)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChain$Entry getEntry(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.String)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter get(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(java.lang.String)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter$NextFilter getNextFilter(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="java.util.List getAll()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="java.util.List getAllReversed()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="boolean contains(java.lang.String)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="boolean contains(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="boolean contains(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void addFirst(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void addLast(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void addBefore(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void addAfter(java.lang.String,java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter replace(java.lang.String,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void replace(org.apache.mina.core.filterchain.IoFilter,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter replace(java.lang.Class,org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(java.lang.String)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void remove(org.apache.mina.core.filterchain.IoFilter)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="org.apache.mina.core.filterchain.IoFilter remove(java.lang.Class)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void clear()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireSessionCreated()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireSessionOpened()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireSessionClosed()" class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireSessionIdle(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireMessageReceived(java.lang.Object)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireMessageSent(org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void fireExceptionCaught(java.lang.Throwable)"
                    class="org.apache.mina.core.filterchain.IoFilterChain"/>
            <method signature="void buildFilterChain(org.apache.mina.core.filterchain.IoFilterChain)"
                    class="org.apache.mina.core.filterchain.IoFilterChainBuilder$1"/>
            <method signature="void buildFilterChain(org.apache.mina.core.filterchain.IoFilterChain)"
                    class="org.apache.mina.core.filterchain.IoFilterChainBuilder"/>
            <class name="org.apache.mina.core.filterchain.IoFilterEvent$1"/>
            <class name="org.apache.mina.core.filterchain.IoFilterEvent"/>
            <class name="org.apache.mina.core.filterchain.IoFilterLifeCycleException"/>
            <method signature="void setClosed()" class="org.apache.mina.core.future.CloseFuture"/>
            <method signature="org.apache.mina.core.future.CloseFuture await()"
                    class="org.apache.mina.core.future.CloseFuture"/>
            <method signature="org.apache.mina.core.future.CloseFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.CloseFuture"/>
            <class name="org.apache.mina.core.future.CompositeIoFuture$1"/>
            <class name="org.apache.mina.core.future.CompositeIoFuture$NotifyingListener"/>
            <class name="org.apache.mina.core.future.CompositeIoFuture"/>
            <method signature="java.lang.Throwable getException()" class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="boolean isConnected()" class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="void setSession(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="void cancel()" class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture await()"
                    class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture awaitUninterruptibly()"
                    class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture addListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.ConnectFuture"/>
            <method signature="void setClosed()" class="org.apache.mina.core.future.DefaultCloseFuture"/>
            <method signature="org.apache.mina.core.future.CloseFuture await()"
                    class="org.apache.mina.core.future.DefaultCloseFuture"/>
            <method signature="org.apache.mina.core.future.CloseFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultCloseFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultCloseFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.DefaultCloseFuture"/>
            <method signature="java.lang.Throwable getException()"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="boolean isConnected()" class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="void setSession(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="void cancel()" class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture await()"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="org.apache.mina.core.future.ConnectFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.DefaultConnectFuture"/>
            <field name="DEAD_LOCK_CHECK_INTERVAL" class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="void join()" class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="boolean join(long)" class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="boolean await(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="boolean await(long)" class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="boolean awaitUninterruptibly(long)" class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultIoFuture"/>
            <method signature="java.lang.Throwable access$000(org.apache.mina.core.future.DefaultReadFuture$ExceptionHolder)"
                    class="org.apache.mina.core.future.DefaultReadFuture$ExceptionHolder"/>
            <method signature="java.lang.Object getMessage()" class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="boolean isRead()" class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="boolean isClosed()" class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="java.lang.Throwable getException()"
                    class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="void setClosed()" class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture await()"
                    class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.DefaultReadFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture newWrittenFuture(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="boolean isWritten()" class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="java.lang.Throwable getException()"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="void setWritten()" class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture await()"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.DefaultWriteFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean await(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean await(long)" class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean awaitUninterruptibly(long)" class="org.apache.mina.core.future.IoFuture"/>
            <method signature="void join()" class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean join(long)" class="org.apache.mina.core.future.IoFuture"/>
            <method signature="boolean isDone()" class="org.apache.mina.core.future.IoFuture"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.IoFuture"/>
            <method signature="java.lang.Object getMessage()" class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="boolean isRead()" class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="boolean isClosed()" class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="java.lang.Throwable getException()" class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="void setClosed()" class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture await()"
                    class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture awaitUninterruptibly()"
                    class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture addListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="org.apache.mina.core.future.ReadFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.ReadFuture"/>
            <method signature="boolean isWritten()" class="org.apache.mina.core.future.WriteFuture"/>
            <method signature="java.lang.Throwable getException()" class="org.apache.mina.core.future.WriteFuture"/>
            <method signature="void setWritten()" class="org.apache.mina.core.future.WriteFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture await()"
                    class="org.apache.mina.core.future.WriteFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture awaitUninterruptibly()"
                    class="org.apache.mina.core.future.WriteFuture"/>
            <method signature="org.apache.mina.core.future.WriteFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.future.WriteFuture"/>
            <class name="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor$1"/>
            <class name="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor$Acceptor"/>
            <class name="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor$ConnectionlessAcceptorProcessor"/>
            <field name="lock" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="processor" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="registerQueue" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="cancelQueue" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="flushingSessions"
                   class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="boundHandles" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="sessionRecycler" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="disposalFuture" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="selectable" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="acceptor" class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <field name="lastIdleCheckTime"
                   class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.util.concurrent.Executor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void init()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void destroy()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int select()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int select(int)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void wakeup()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.util.Iterator selectedHandles()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.lang.Object open(java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void close(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean isReadable(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean isWritable(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.net.SocketAddress receive(java.lang.Object,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int send(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer,java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.session.AbstractIoSession newSession(org.apache.mina.core.service.IoProcessor,java.lang.Object,java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.future.IoFuture dispose0()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.util.Set bindInternal(java.util.List)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void unbind0(java.util.List)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSession newSession(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSession newSessionWithoutLock(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSessionRecycler getSessionRecycler()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void setSessionRecycler(org.apache.mina.core.session.IoSessionRecycler)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void startupAcceptor()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean scheduleFlush(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void processReadySessions(java.util.Iterator)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void readHandle(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void flushSessions(long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean flush(org.apache.mina.core.session.AbstractIoSession,long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int registerHandles()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int unregisterHandles()"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void notifyIdleSessions(long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean access$100(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="long access$302(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean access$400(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int access$500(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void access$600(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,java.util.Iterator)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void access$700(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="int access$800(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="void access$900(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.lang.Object access$1000(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.util.Queue access$1100(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="java.util.Queue access$1200(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor$Acceptor access$1302(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor$Acceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="boolean access$402(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <method signature="org.apache.mina.core.service.AbstractIoService$ServiceOperationFuture access$1400(org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingConnectionlessIoAcceptor"/>
            <class name="org.apache.mina.core.polling.AbstractPollingIoAcceptor$1"/>
            <class name="org.apache.mina.core.polling.AbstractPollingIoAcceptor$Acceptor"/>
            <field name="processor" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="createdProcessor" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="lock" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="registerQueue" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="cancelQueue" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="boundHandles" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="disposalFuture" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="selectable" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <field name="acceptor" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.lang.Class)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.lang.Class,int)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.util.concurrent.Executor,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.util.concurrent.Executor,org.apache.mina.core.service.IoProcessor,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void init()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void destroy()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="int select()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void wakeup()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.util.Iterator selectedHandles()"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.lang.Object open(java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.session.AbstractIoSession accept(org.apache.mina.core.service.IoProcessor,java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void close(java.lang.Object)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.future.IoFuture dispose0()"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.util.Set bindInternal(java.util.List)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void startupAcceptor()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void unbind0(java.util.List)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="int registerHandles()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="int unregisterHandles()" class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSession newSession(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="boolean access$100(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="int access$200(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="int access$300(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.lang.Object access$400(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.util.Queue access$500(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.util.Queue access$600(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.polling.AbstractPollingIoAcceptor$Acceptor access$702(org.apache.mina.core.polling.AbstractPollingIoAcceptor,org.apache.mina.core.polling.AbstractPollingIoAcceptor$Acceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="boolean access$102(org.apache.mina.core.polling.AbstractPollingIoAcceptor,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="boolean access$800(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.service.IoProcessor access$900(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.lang.Object access$1000(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="org.apache.mina.core.service.AbstractIoService$ServiceOperationFuture access$1100(org.apache.mina.core.polling.AbstractPollingIoAcceptor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="void access$1200(org.apache.mina.core.polling.AbstractPollingIoAcceptor,org.apache.mina.core.session.IoSession,org.apache.mina.core.future.IoFuture,org.apache.mina.core.session.IoSessionInitializer)"
                    class="org.apache.mina.core.polling.AbstractPollingIoAcceptor"/>
            <method signature="java.lang.Object getHandle()"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest"/>
            <method signature="long getDeadline()"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest"/>
            <method signature="void cancel()"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.lang.Class,int)"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.util.concurrent.Executor,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector"/>
            <method signature="java.util.Queue access$1500(org.apache.mina.core.polling.AbstractPollingIoConnector)"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector"/>
            <method signature="void access$1600(org.apache.mina.core.polling.AbstractPollingIoConnector)"
                    class="org.apache.mina.core.polling.AbstractPollingIoConnector"/>
            <class name="org.apache.mina.core.polling.AbstractPollingIoProcessor$1"/>
            <class name="org.apache.mina.core.polling.AbstractPollingIoProcessor$Processor"/>
            <field name="WRITE_SPIN_COUNT" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="SELECT_TIMEOUT" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="lock" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="threadName" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="executor" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="newSessions" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="removingSessions" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="flushingSessions" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="trafficControllingSessions" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="processor" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="lastIdleCheckTime" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="disposalLock" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="disposing" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="disposed" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <field name="disposalFuture" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void &lt;init&gt;(java.util.concurrent.Executor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.lang.String nextThreadName()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isDisposed()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void dispose0()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int select(long)" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int select()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isSelectorEmpty()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void wakeup()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.util.Iterator allSessions()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.util.Iterator selectedSessions()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="org.apache.mina.core.session.SessionState getState(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isWritable(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isReadable(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void setInterestedInRead(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isInterestedInRead(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean isInterestedInWrite(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void init(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void destroy(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int read(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int write(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer,int)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int transferFile(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.file.FileRegion,int)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void add(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void remove(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void scheduleRemove(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void flush(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean scheduleFlush(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void updateTrafficMask(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void scheduleTrafficControl(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void startupProcessor()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int handleNewSessions()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean addNow(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int removeSessions()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean removeNow(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void clearWriteRequestQueue(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void process()" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void process(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void read(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void notifyIdleSessions(long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void flush(long)" class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="boolean flushNow(org.apache.mina.core.session.AbstractIoSession,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int writeBuffer(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.write.WriteRequest,boolean,int,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int writeFile(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.write.WriteRequest,boolean,int,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void fireMessageSent(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void updateTrafficMask()"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void updateTrafficControl(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void updateTrafficControl(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="long access$102(org.apache.mina.core.polling.AbstractPollingIoProcessor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int access$200(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void access$300(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void access$400(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void access$500(org.apache.mina.core.polling.AbstractPollingIoProcessor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="int access$600(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void access$700(org.apache.mina.core.polling.AbstractPollingIoProcessor,long)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.lang.Object access$800(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.util.Queue access$900(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="org.apache.mina.core.polling.AbstractPollingIoProcessor$Processor access$1002(org.apache.mina.core.polling.AbstractPollingIoProcessor,org.apache.mina.core.polling.AbstractPollingIoProcessor$Processor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="void access$1100(org.apache.mina.core.polling.AbstractPollingIoProcessor,org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="java.lang.Object access$1200(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <method signature="org.apache.mina.core.future.DefaultIoFuture access$1300(org.apache.mina.core.polling.AbstractPollingIoProcessor)"
                    class="org.apache.mina.core.polling.AbstractPollingIoProcessor"/>
            <class name="org.apache.mina.core.service.AbstractIoAcceptor$AcceptorOperationFuture"/>
            <field name="defaultLocalAddresses" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <field name="unmodifiableDefaultLocalAddresses" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <field name="boundAddresses" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <field name="disconnectOnUnbind" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <field name="bindLock" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.session.IoSessionConfig,java.util.concurrent.Executor)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.net.SocketAddress getLocalAddress()"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.util.Set getLocalAddresses()"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.net.SocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.util.List getDefaultLocalAddresses()"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.util.List)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.lang.Iterable)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="boolean isCloseOnDeactivation()"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void setCloseOnDeactivation(boolean)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void bind()" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void bind(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void bind(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void bind(java.lang.Iterable)" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void unbind()" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void unbind(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void unbind(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void unbind(java.lang.Iterable)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.util.Set bindInternal(java.util.List)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void unbind0(java.util.List)" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="java.lang.String toString()" class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void checkAddressType(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoAcceptor"/>
            <method signature="void messageSent(org.apache.mina.core.session.IoSession,java.lang.Object)"
                    class="org.apache.mina.core.service.AbstractIoConnector$1"/>
            <method signature="void sessionClosed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.AbstractIoConnector$1"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.AbstractIoConnector$1"/>
            <method signature="void sessionIdle(org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.service.AbstractIoConnector$1"/>
            <method signature="long getConnectTimeoutCheckInterval()"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="void setConnectTimeoutCheckInterval(long)"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="int getConnectTimeout()" class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="void setConnectTimeout(int)" class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="void setConnectTimeoutMillis(long)"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(org.apache.mina.core.session.IoSessionInitializer)"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.service.AbstractIoConnector"/>
            <method signature="void serviceActivated(org.apache.mina.core.service.IoService)"
                    class="org.apache.mina.core.service.AbstractIoService$1"/>
            <method signature="void serviceDeactivated(org.apache.mina.core.service.IoService)"
                    class="org.apache.mina.core.service.AbstractIoService$1"/>
            <method signature="void serviceIdle(org.apache.mina.core.service.IoService,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.service.AbstractIoService$1"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.AbstractIoService$1"/>
            <method signature="void sessionDestroyed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.AbstractIoService$1"/>
            <class name="org.apache.mina.core.service.AbstractIoService$2"/>
            <method signature="java.lang.Exception getException()"
                    class="org.apache.mina.core.service.AbstractIoService$ServiceOperationFuture"/>
            <method signature="void setException(java.lang.Exception)"
                    class="org.apache.mina.core.service.AbstractIoService$ServiceOperationFuture"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChainBuilder getFilterChainBuilder()"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="void setFilterChainBuilder(org.apache.mina.core.filterchain.IoFilterChainBuilder)"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="void addListener(org.apache.mina.core.service.IoServiceListener)"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="void removeListener(org.apache.mina.core.service.IoServiceListener)"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="boolean isDisposed()" class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="java.util.Map getManagedSessions()"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="void setSessionDataStructureFactory(org.apache.mina.core.session.IoSessionDataStructureFactory)"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="java.util.Set broadcast(java.lang.Object)"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="org.apache.mina.core.service.IoServiceListenerSupport getListeners()"
                    class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="int getScheduledWriteBytes()" class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="int getScheduledWriteMessages()" class="org.apache.mina.core.service.AbstractIoService"/>
            <method signature="java.util.Set getEnvelopeTypes()"
                    class="org.apache.mina.core.service.DefaultTransportMetadata"/>
            <method signature="java.net.SocketAddress getLocalAddress()"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="java.util.Set getLocalAddresses()" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="java.net.SocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="java.util.List getDefaultLocalAddresses()"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.lang.Iterable)"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void setDefaultLocalAddresses(java.util.List)"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="boolean isCloseOnDeactivation()" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void setCloseOnDeactivation(boolean)" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void bind()" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void bind(java.net.SocketAddress)" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void bind(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void bind(java.lang.Iterable)" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void unbind()" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void unbind(java.net.SocketAddress)" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void unbind(java.net.SocketAddress,java.net.SocketAddress[])"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="void unbind(java.lang.Iterable)" class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSession newSession(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.service.IoAcceptor"/>
            <method signature="int getConnectTimeout()" class="org.apache.mina.core.service.IoConnector"/>
            <method signature="long getConnectTimeoutMillis()" class="org.apache.mina.core.service.IoConnector"/>
            <method signature="void setConnectTimeout(int)" class="org.apache.mina.core.service.IoConnector"/>
            <method signature="void setConnectTimeoutMillis(long)" class="org.apache.mina.core.service.IoConnector"/>
            <method signature="java.net.SocketAddress getDefaultRemoteAddress()"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="void setDefaultRemoteAddress(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(org.apache.mina.core.session.IoSessionInitializer)"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(java.net.SocketAddress)"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture connect(java.net.SocketAddress,java.net.SocketAddress,org.apache.mina.core.session.IoSessionInitializer)"
                    class="org.apache.mina.core.service.IoConnector"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoHandler"/>
            <method signature="void sessionClosed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoHandler"/>
            <method signature="void sessionIdle(org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.service.IoHandler"/>
            <method signature="void messageSent(org.apache.mina.core.session.IoSession,java.lang.Object)"
                    class="org.apache.mina.core.service.IoHandler"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoHandlerAdapter"/>
            <method signature="void sessionClosed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoHandlerAdapter"/>
            <method signature="void sessionIdle(org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.service.IoHandlerAdapter"/>
            <method signature="void messageSent(org.apache.mina.core.session.IoSession,java.lang.Object)"
                    class="org.apache.mina.core.service.IoHandlerAdapter"/>
            <method signature="boolean isDisposed()" class="org.apache.mina.core.service.IoProcessor"/>
            <method signature="void updateTrafficControl(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoProcessor"/>
            <method signature="void addListener(org.apache.mina.core.service.IoServiceListener)"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="void removeListener(org.apache.mina.core.service.IoServiceListener)"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="boolean isDisposed()" class="org.apache.mina.core.service.IoService"/>
            <method signature="java.util.Map getManagedSessions()" class="org.apache.mina.core.service.IoService"/>
            <method signature="org.apache.mina.core.filterchain.IoFilterChainBuilder getFilterChainBuilder()"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="void setFilterChainBuilder(org.apache.mina.core.filterchain.IoFilterChainBuilder)"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="long getActivationTime()" class="org.apache.mina.core.service.IoService"/>
            <method signature="java.util.Set broadcast(java.lang.Object)"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="void setSessionDataStructureFactory(org.apache.mina.core.session.IoSessionDataStructureFactory)"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="int getScheduledWriteBytes()" class="org.apache.mina.core.service.IoService"/>
            <method signature="int getScheduledWriteMessages()" class="org.apache.mina.core.service.IoService"/>
            <method signature="org.apache.mina.core.service.IoServiceStatistics getStatistics()"
                    class="org.apache.mina.core.service.IoService"/>
            <method signature="void serviceActivated(org.apache.mina.core.service.IoService)"
                    class="org.apache.mina.core.service.IoServiceListener"/>
            <method signature="void serviceIdle(org.apache.mina.core.service.IoService,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.service.IoServiceListener"/>
            <method signature="void serviceDeactivated(org.apache.mina.core.service.IoService)"
                    class="org.apache.mina.core.service.IoServiceListener"/>
            <method signature="void sessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoServiceListener"/>
            <method signature="void sessionDestroyed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoServiceListener"/>
            <class name="org.apache.mina.core.service.IoServiceListenerSupport$LockNotifyingListener"/>
            <field name="largestManagedSessionCount" class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <field name="cumulativeManagedSessionCount" class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void remove(org.apache.mina.core.service.IoServiceListener)"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="java.util.Map getManagedSessions()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="int getLargestManagedSessionCount()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="long getCumulativeManagedSessionCount()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void fireServiceActivated()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void fireServiceDeactivated()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void fireSessionCreated(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void fireSessionDestroyed(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <method signature="void disconnectSessions()"
                    class="org.apache.mina.core.service.IoServiceListenerSupport"/>
            <field name="readBytesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="writtenBytesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="readMessagesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="writtenMessagesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="largestReadBytesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="largestWrittenBytesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="largestReadMessagesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="largestWrittenMessagesThroughput" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="lastReadBytes" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="lastWrittenBytes" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="lastReadMessages" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="lastWrittenMessages" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <field name="lastThroughputCalculationTime" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="int getLargestManagedSessionCount()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getCumulativeManagedSessionCount()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getLastIoTime()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getReadBytes()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getWrittenBytes()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getReadMessages()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getWrittenMessages()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getReadBytesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getWrittenBytesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getReadMessagesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getWrittenMessagesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getLargestReadBytesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getLargestWrittenBytesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getLargestReadMessagesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="double getLargestWrittenMessagesThroughput()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="int getThroughputCalculationInterval()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="long getThroughputCalculationIntervalInMillis()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void setThroughputCalculationInterval(int)"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void resetThroughput()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void updateThroughput(long)" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void increaseReadBytes(long,long)"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void increaseWrittenBytes(int,long)"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void increaseWrittenMessages(long)"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="int getScheduledWriteBytes()" class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="int getScheduledWriteMessages()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void decreaseScheduledWriteMessages()"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void setLastThroughputCalculationTime(long)"
                    class="org.apache.mina.core.service.IoServiceStatistics"/>
            <method signature="void &lt;init&gt;(java.lang.Class,int)"
                    class="org.apache.mina.core.service.SimpleIoProcessorPool"/>
            <method signature="void &lt;init&gt;(java.lang.Class,java.util.concurrent.Executor)"
                    class="org.apache.mina.core.service.SimpleIoProcessorPool"/>
            <method signature="void updateTrafficControl(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.core.service.SimpleIoProcessorPool"/>
            <method signature="boolean isDisposed()" class="org.apache.mina.core.service.SimpleIoProcessorPool"/>
            <method signature="void updateTrafficControl(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.service.SimpleIoProcessorPool"/>
            <method signature="java.util.Set getEnvelopeTypes()"
                    class="org.apache.mina.core.service.TransportMetadata"/>
            <method signature="org.apache.mina.core.write.WriteRequest poll(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.AbstractIoSession$CloseAwareWriteQueue"/>
            <method signature="boolean isEmpty(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.AbstractIoSession$CloseAwareWriteQueue"/>
            <method signature="void clear(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.AbstractIoSession$CloseAwareWriteQueue"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.AbstractIoSession$CloseAwareWriteQueue"/>
            <field name="currentWriteRequest" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="writtenBytes" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="writtenMessages" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="lastReadBytes" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="lastWrittenBytes" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="lastReadMessages" class="org.apache.mina.core.session.AbstractIoSession"/>
            <field name="lastWrittenMessages" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="org.apache.mina.core.future.CloseFuture getCloseFuture()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isScheduledForFlush()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean setScheduledForFlush(boolean)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="org.apache.mina.core.future.ReadFuture read()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void offerClosedReadFuture()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.lang.Object getAttachment()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.lang.Object setAttachment(java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.lang.Object setAttribute(java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.lang.Object setAttributeIfAbsent(java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean removeAttribute(java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean replaceAttribute(java.lang.Object,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean containsAttribute(java.lang.Object)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.util.Set getAttributeKeys()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="org.apache.mina.core.session.IoSessionAttributeMap getAttributeMap()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void suspendRead()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void suspendWrite()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void resumeRead()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void resumeWrite()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isReadSuspended()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getWrittenBytes()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getReadMessages()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getWrittenMessages()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="double getReadBytesThroughput()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="double getWrittenBytesThroughput()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="double getReadMessagesThroughput()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="double getWrittenMessagesThroughput()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void updateThroughput(long,boolean)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getScheduledWriteBytes()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="int getScheduledWriteMessages()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void setScheduledWriteBytes(int)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void setScheduledWriteMessages(int)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void increaseReadBytes(long,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void increaseWrittenBytes(int,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void increaseWrittenMessages(org.apache.mina.core.write.WriteRequest,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void decreaseScheduledWriteMessages()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void decreaseScheduledBytesAndMessages(org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="org.apache.mina.core.write.WriteRequest getCurrentWriteRequest()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.lang.Object getCurrentWriteMessage()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void setCurrentWriteRequest(org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void increaseReadBufferSize()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void decreaseReadBufferSize()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getCreationTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastIoTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastReadTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastWriteTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isIdle(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isBothIdle()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isReaderIdle()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="boolean isWriterIdle()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="int getIdleCount(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastIdleTime(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void increaseIdleCount(org.apache.mina.core.session.IdleStatus,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="int getBothIdleCount()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastBothIdleTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastReaderIdleTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getLastWriterIdleTime()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="int getReaderIdleCount()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="int getWriterIdleCount()" class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="java.net.SocketAddress getServiceAddress()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void notifyIdleness(java.util.Iterator,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void notifyIdleSession(org.apache.mina.core.session.IoSession,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void notifyIdleSession0(org.apache.mina.core.session.IoSession,long,long,org.apache.mina.core.session.IdleStatus,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="void notifyWriteTimeout(org.apache.mina.core.session.IoSession,long)"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="org.apache.mina.core.write.WriteRequest access$600()"
                    class="org.apache.mina.core.session.AbstractIoSession"/>
            <method signature="long getIdleTimeInMillis(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="int getBothIdleTime()" class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="long getBothIdleTimeInMillis()"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="int getReaderIdleTime()" class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="long getReaderIdleTimeInMillis()"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="int getWriterIdleTime()" class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="long getWriterIdleTimeInMillis()"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="void setBothIdleTime(int)" class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="void setReaderIdleTime(int)"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="void setWriterIdleTime(int)"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="long getWriteTimeoutInMillis()"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <method signature="long getThroughputCalculationIntervalInMillis()"
                    class="org.apache.mina.core.session.AbstractIoSessionConfig"/>
            <field name="serialVersionUID" class="org.apache.mina.core.session.AttributeKey"/>
            <method signature="boolean removeAttribute(org.apache.mina.core.session.IoSession,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultIoSessionAttributeMap"/>
            <method signature="boolean replaceAttribute(org.apache.mina.core.session.IoSession,java.lang.Object,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultIoSessionAttributeMap"/>
            <method signature="boolean containsAttribute(org.apache.mina.core.session.IoSession,java.lang.Object)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultIoSessionAttributeMap"/>
            <method signature="java.util.Set getAttributeKeys(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultIoSessionAttributeMap"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultIoSessionAttributeMap"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultWriteRequestQueue"/>
            <method signature="void clear(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultWriteRequestQueue"/>
            <method signature="boolean isEmpty(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultWriteRequestQueue"/>
            <method signature="org.apache.mina.core.write.WriteRequest poll(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.DefaultIoSessionDataStructureFactory$DefaultWriteRequestQueue"/>
            <class name="org.apache.mina.core.session.DummySession$1"/>
            <class name="org.apache.mina.core.session.DummySession$2"/>
            <class name="org.apache.mina.core.session.DummySession$3"/>
            <class name="org.apache.mina.core.session.DummySession$4"/>
            <class name="org.apache.mina.core.session.DummySession$5"/>
            <class name="org.apache.mina.core.session.DummySession$6"/>
            <class name="org.apache.mina.core.session.DummySession"/>
            <method signature="void put(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="org.apache.mina.core.session.IoSession recycle(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="void remove(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="void stopExpiring()" class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="int getExpirationInterval()"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="int getTimeToLive()" class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="void setExpirationInterval(int)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="void setTimeToLive(int)" class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="java.lang.Object generateKey(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <method signature="java.lang.Object generateKey(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.session.ExpiringSessionRecycler"/>
            <class name="org.apache.mina.core.session.IdleStatusChecker$NotifyingTask"/>
            <class name="org.apache.mina.core.session.IdleStatusChecker$SessionCloseListener"/>
            <class name="org.apache.mina.core.session.IdleStatusChecker"/>
            <class name="org.apache.mina.core.session.IoEvent$1"/>
            <class name="org.apache.mina.core.session.IoEvent"/>
            <class name="org.apache.mina.core.session.IoEventType"/>
            <method signature="org.apache.mina.core.write.WriteRequestQueue getWriteRequestQueue()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="org.apache.mina.core.future.ReadFuture read()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="org.apache.mina.core.future.WriteFuture write(java.lang.Object,java.net.SocketAddress)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="org.apache.mina.core.future.CloseFuture close()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object getAttachment()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object setAttachment(java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object getAttribute(java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object setAttribute(java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object setAttributeIfAbsent(java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object setAttributeIfAbsent(java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean removeAttribute(java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean replaceAttribute(java.lang.Object,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean containsAttribute(java.lang.Object)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.util.Set getAttributeKeys()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="org.apache.mina.core.future.CloseFuture getCloseFuture()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.net.SocketAddress getServiceAddress()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="void setCurrentWriteRequest(org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="void suspendRead()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="void suspendWrite()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="void resumeRead()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="void resumeWrite()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isReadSuspended()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isWriteSuspended()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="void updateThroughput(long,boolean)" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getWrittenBytes()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getReadMessages()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getWrittenMessages()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="double getReadBytesThroughput()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="double getWrittenBytesThroughput()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="double getReadMessagesThroughput()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="double getWrittenMessagesThroughput()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="int getScheduledWriteMessages()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getScheduledWriteBytes()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="java.lang.Object getCurrentWriteMessage()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="org.apache.mina.core.write.WriteRequest getCurrentWriteRequest()"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getCreationTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastIoTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastReadTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastWriteTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isIdle(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isReaderIdle()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isWriterIdle()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean isBothIdle()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="int getIdleCount(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="int getReaderIdleCount()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="int getWriterIdleCount()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="int getBothIdleCount()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastIdleTime(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastReaderIdleTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastWriterIdleTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="long getLastBothIdleTime()" class="org.apache.mina.core.session.IoSession"/>
            <method signature="boolean removeAttribute(org.apache.mina.core.session.IoSession,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSessionAttributeMap"/>
            <method signature="boolean replaceAttribute(org.apache.mina.core.session.IoSession,java.lang.Object,java.lang.Object,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSessionAttributeMap"/>
            <method signature="boolean containsAttribute(org.apache.mina.core.session.IoSession,java.lang.Object)"
                    class="org.apache.mina.core.session.IoSessionAttributeMap"/>
            <method signature="java.util.Set getAttributeKeys(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionAttributeMap"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionAttributeMap"/>
            <method signature="void setReadBufferSize(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setMinReadBufferSize(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setMaxReadBufferSize(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getThroughputCalculationIntervalInMillis()"
                    class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setThroughputCalculationInterval(int)"
                    class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getIdleTimeInMillis(org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setIdleTime(org.apache.mina.core.session.IdleStatus,int)"
                    class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="int getReaderIdleTime()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getReaderIdleTimeInMillis()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setReaderIdleTime(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="int getWriterIdleTime()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getWriterIdleTimeInMillis()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setWriterIdleTime(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="int getBothIdleTime()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getBothIdleTimeInMillis()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setBothIdleTime(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="long getWriteTimeoutInMillis()" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setWriteTimeout(int)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <method signature="void setUseReadOperation(boolean)" class="org.apache.mina.core.session.IoSessionConfig"/>
            <field name="serialVersionUID" class="org.apache.mina.core.session.IoSessionInitializationException"/>
            <method signature="void &lt;init&gt;()"
                    class="org.apache.mina.core.session.IoSessionInitializationException"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.apache.mina.core.session.IoSessionInitializationException"/>
            <method signature="void &lt;init&gt;(java.lang.Throwable)"
                    class="org.apache.mina.core.session.IoSessionInitializationException"/>
            <method signature="void put(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionRecycler$1"/>
            <method signature="org.apache.mina.core.session.IoSession recycle(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.session.IoSessionRecycler$1"/>
            <method signature="void remove(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionRecycler$1"/>
            <method signature="void put(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionRecycler"/>
            <method signature="org.apache.mina.core.session.IoSession recycle(java.net.SocketAddress,java.net.SocketAddress)"
                    class="org.apache.mina.core.session.IoSessionRecycler"/>
            <method signature="void remove(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.session.IoSessionRecycler"/>
            <class name="org.apache.mina.core.session.SessionState"/>
            <class name="org.apache.mina.core.session.UnknownMessageTypeException"/>
            <method signature="boolean isWritten()" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="void setWritten()" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="void join()" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean join(long)" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean isDone()" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="org.apache.mina.core.future.WriteFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="org.apache.mina.core.future.WriteFuture await()"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean await(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean await(long)" class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="boolean awaitUninterruptibly(long)"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="java.lang.Throwable getException()"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="org.apache.mina.core.future.IoFuture removeListener(org.apache.mina.core.future.IoFutureListener)"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <method signature="org.apache.mina.core.future.IoFuture await()"
                    class="org.apache.mina.core.write.DefaultWriteRequest$1"/>
            <class name="org.apache.mina.core.write.NothingWrittenException"/>
            <field name="serialVersionUID" class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.String)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(java.util.Collection)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.String)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="java.util.List getRequests()" class="org.apache.mina.core.write.WriteException"/>
            <method signature="org.apache.mina.core.write.WriteRequest getRequest()"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="java.util.List asRequestList(java.util.Collection)"
                    class="org.apache.mina.core.write.WriteException"/>
            <method signature="org.apache.mina.core.write.WriteRequest poll(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.write.WriteRequestQueue"/>
            <method signature="boolean isEmpty(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.write.WriteRequestQueue"/>
            <method signature="void clear(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.write.WriteRequestQueue"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.core.write.WriteRequestQueue"/>
            <method signature="org.apache.mina.core.write.WriteRequest getParentRequest()"
                    class="org.apache.mina.core.write.WriteRequestWrapper"/>
            <class name="org.apache.mina.core.write.WriteTimeoutException"/>
            <field name="serialVersionUID" class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.String)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(java.util.Collection,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(java.util.Collection)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.String)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.write.WriteRequest,java.lang.Throwable)"
                    class="org.apache.mina.core.write.WriteToClosedSessionException"/>
            <class name="org.apache.mina.filter.buffer.BufferedWriteFilter"/>
            <class name="org.apache.mina.filter.buffer.IoBufferLazyInitializer"/>
            <method signature="void write(java.lang.Object)"
                    class="org.apache.mina.filter.codec.AbstractProtocolDecoderOutput"/>
            <method signature="void mergeAll()" class="org.apache.mina.filter.codec.AbstractProtocolEncoderOutput"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.CumulativeProtocolDecoder"/>
            <field name="serialVersionUID" class="org.apache.mina.filter.codec.ProtocolCodecException"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.filter.codec.ProtocolCodecException"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.apache.mina.filter.codec.ProtocolCodecException"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.filter.codec.ProtocolCodecException"/>
            <method signature="org.apache.mina.filter.codec.ProtocolEncoder getEncoder(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFactory"/>
            <method signature="org.apache.mina.filter.codec.ProtocolDecoder getDecoder(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFactory"/>
            <class name="org.apache.mina.filter.codec.ProtocolCodecFilter$1"/>
            <class name="org.apache.mina.filter.codec.ProtocolCodecFilter$2"/>
            <method signature="org.apache.mina.core.future.WriteFuture flush()"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter$ProtocolEncoderOutputImpl"/>
            <method signature="void &lt;init&gt;(org.apache.mina.filter.codec.ProtocolEncoder,org.apache.mina.filter.codec.ProtocolDecoder)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void &lt;init&gt;(java.lang.Class,java.lang.Class)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void onPreAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void onPostRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void messageSent(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void sessionClosed(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void initCodec(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void disposeCodec(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void disposeEncoder(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void disposeDecoder(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <method signature="void disposeDecoderOut(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolCodecFilter"/>
            <class name="org.apache.mina.filter.codec.ProtocolCodecSession$1"/>
            <class name="org.apache.mina.filter.codec.ProtocolCodecSession$2"/>
            <class name="org.apache.mina.filter.codec.ProtocolCodecSession"/>
            <method signature="void finishDecode(org.apache.mina.core.session.IoSession,org.apache.mina.filter.codec.ProtocolDecoderOutput)"
                    class="org.apache.mina.filter.codec.ProtocolDecoder"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolDecoder"/>
            <method signature="void finishDecode(org.apache.mina.core.session.IoSession,org.apache.mina.filter.codec.ProtocolDecoderOutput)"
                    class="org.apache.mina.filter.codec.ProtocolDecoderAdapter"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolDecoderAdapter"/>
            <field name="serialVersionUID" class="org.apache.mina.filter.codec.ProtocolDecoderException"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.filter.codec.ProtocolDecoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.apache.mina.filter.codec.ProtocolDecoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.filter.codec.ProtocolDecoderException"/>
            <method signature="void write(java.lang.Object)"
                    class="org.apache.mina.filter.codec.ProtocolDecoderOutput"/>
            <method signature="void dispose(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.filter.codec.ProtocolEncoder"/>
            <class name="org.apache.mina.filter.codec.ProtocolEncoderAdapter"/>
            <field name="serialVersionUID" class="org.apache.mina.filter.codec.ProtocolEncoderException"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.filter.codec.ProtocolEncoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.apache.mina.filter.codec.ProtocolEncoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.filter.codec.ProtocolEncoderException"/>
            <method signature="void mergeAll()" class="org.apache.mina.filter.codec.ProtocolEncoderOutput"/>
            <method signature="org.apache.mina.core.future.WriteFuture flush()"
                    class="org.apache.mina.filter.codec.ProtocolEncoderOutput"/>
            <field name="serialVersionUID" class="org.apache.mina.filter.codec.RecoverableProtocolDecoderException"/>
            <method signature="void &lt;init&gt;()"
                    class="org.apache.mina.filter.codec.RecoverableProtocolDecoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String)"
                    class="org.apache.mina.filter.codec.RecoverableProtocolDecoderException"/>
            <method signature="void &lt;init&gt;(java.lang.Throwable)"
                    class="org.apache.mina.filter.codec.RecoverableProtocolDecoderException"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.filter.codec.RecoverableProtocolDecoderException"/>
            <class name="org.apache.mina.filter.codec.SynchronizedProtocolDecoder"/>
            <class name="org.apache.mina.filter.codec.SynchronizedProtocolEncoder"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolCodecFactory"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolDecoder$1"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolDecoder$DefaultConstructorMessageDecoderFactory"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolDecoder$SingletonMessageDecoderFactory"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolDecoder$State"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolDecoder"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolEncoder$1"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolEncoder$DefaultConstructorMessageEncoderFactory"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolEncoder$SingletonMessageEncoderFactory"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolEncoder$State"/>
            <class name="org.apache.mina.filter.codec.demux.DemuxingProtocolEncoder"/>
            <class name="org.apache.mina.filter.codec.demux.MessageDecoder"/>
            <class name="org.apache.mina.filter.codec.demux.MessageDecoderAdapter"/>
            <class name="org.apache.mina.filter.codec.demux.MessageDecoderFactory"/>
            <class name="org.apache.mina.filter.codec.demux.MessageDecoderResult"/>
            <class name="org.apache.mina.filter.codec.demux.MessageEncoder"/>
            <class name="org.apache.mina.filter.codec.demux.MessageEncoderFactory"/>
            <class name="org.apache.mina.filter.codec.prefixedstring.PrefixedStringCodecFactory"/>
            <class name="org.apache.mina.filter.codec.prefixedstring.PrefixedStringDecoder"/>
            <class name="org.apache.mina.filter.codec.prefixedstring.PrefixedStringEncoder"/>
            <class name="org.apache.mina.filter.codec.serialization.ObjectSerializationCodecFactory"/>
            <class name="org.apache.mina.filter.codec.serialization.ObjectSerializationDecoder"/>
            <class name="org.apache.mina.filter.codec.serialization.ObjectSerializationEncoder"/>
            <class name="org.apache.mina.filter.codec.serialization.ObjectSerializationInputStream"/>
            <class name="org.apache.mina.filter.codec.serialization.ObjectSerializationOutputStream"/>
            <class name="org.apache.mina.filter.codec.statemachine.ConsumeToCrLfDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.ConsumeToDynamicTerminatorDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.ConsumeToEndOfSessionDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.ConsumeToLinearWhitespaceDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.ConsumeToTerminatorDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.CrLfDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.DecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.DecodingStateMachine$1"/>
            <class name="org.apache.mina.filter.codec.statemachine.DecodingStateMachine"/>
            <class name="org.apache.mina.filter.codec.statemachine.DecodingStateProtocolDecoder"/>
            <class name="org.apache.mina.filter.codec.statemachine.FixedLengthDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.IntegerDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.LinearWhitespaceSkippingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.ShortIntegerDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.SingleByteDecodingState"/>
            <class name="org.apache.mina.filter.codec.statemachine.SkippingState"/>
            <class name="org.apache.mina.filter.codec.textline.LineDelimiter"/>
            <class name="org.apache.mina.filter.codec.textline.TextLineCodecFactory"/>
            <class name="org.apache.mina.filter.codec.textline.TextLineDecoder$1"/>
            <class name="org.apache.mina.filter.codec.textline.TextLineDecoder$Context"/>
            <class name="org.apache.mina.filter.codec.textline.TextLineDecoder"/>
            <class name="org.apache.mina.filter.codec.textline.TextLineEncoder"/>
            <class name="org.apache.mina.filter.errorgenerating.ErrorGeneratingFilter"/>
            <class name="org.apache.mina.filter.executor.DefaultIoEventSizeEstimator"/>
            <class name="org.apache.mina.filter.executor.ExecutorFilter"/>
            <class name="org.apache.mina.filter.executor.IoEventQueueHandler$1"/>
            <class name="org.apache.mina.filter.executor.IoEventQueueHandler"/>
            <class name="org.apache.mina.filter.executor.IoEventQueueThrottle"/>
            <class name="org.apache.mina.filter.executor.IoEventSizeEstimator"/>
            <class name="org.apache.mina.filter.executor.OrderedThreadPoolExecutor$1"/>
            <class name="org.apache.mina.filter.executor.OrderedThreadPoolExecutor$SessionTasksQueue"/>
            <class name="org.apache.mina.filter.executor.OrderedThreadPoolExecutor$Worker"/>
            <class name="org.apache.mina.filter.executor.OrderedThreadPoolExecutor"/>
            <class name="org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$1"/>
            <class name="org.apache.mina.filter.executor.UnorderedThreadPoolExecutor$Worker"/>
            <class name="org.apache.mina.filter.executor.UnorderedThreadPoolExecutor"/>
            <class name="org.apache.mina.filter.executor.WriteRequestFilter$1"/>
            <class name="org.apache.mina.filter.executor.WriteRequestFilter"/>
            <class name="org.apache.mina.filter.firewall.BlacklistFilter"/>
            <class name="org.apache.mina.filter.firewall.ConnectionThrottleFilter"/>
            <class name="org.apache.mina.filter.firewall.Subnet"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveFilter"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveMessageFactory"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutException"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler$1"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler$2"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler$3"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler$4"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler$5"/>
            <class name="org.apache.mina.filter.keepalive.KeepAliveRequestTimeoutHandler"/>
            <class name="org.apache.mina.filter.logging.LogLevel"/>
            <class name="org.apache.mina.filter.logging.LoggingFilter$1"/>
            <class name="org.apache.mina.filter.logging.LoggingFilter"/>
            <class name="org.apache.mina.filter.logging.MdcInjectionFilter$1"/>
            <class name="org.apache.mina.filter.logging.MdcInjectionFilter$MdcKey"/>
            <class name="org.apache.mina.filter.logging.MdcInjectionFilter"/>
            <class name="org.apache.mina.filter.reqres.Request"/>
            <class name="org.apache.mina.filter.reqres.RequestResponseFilter$1"/>
            <class name="org.apache.mina.filter.reqres.RequestResponseFilter$2"/>
            <class name="org.apache.mina.filter.reqres.RequestResponseFilter$TimeoutTask"/>
            <class name="org.apache.mina.filter.reqres.RequestResponseFilter"/>
            <class name="org.apache.mina.filter.reqres.RequestTimeoutException"/>
            <class name="org.apache.mina.filter.reqres.Response"/>
            <class name="org.apache.mina.filter.reqres.ResponseInspector"/>
            <class name="org.apache.mina.filter.reqres.ResponseInspectorFactory"/>
            <class name="org.apache.mina.filter.reqres.ResponseType"/>
            <class name="org.apache.mina.filter.ssl.BogusTrustManagerFactory$1"/>
            <class name="org.apache.mina.filter.ssl.BogusTrustManagerFactory$2"/>
            <class name="org.apache.mina.filter.ssl.BogusTrustManagerFactory$BogusTrustManagerFactorySpi"/>
            <class name="org.apache.mina.filter.ssl.BogusTrustManagerFactory"/>
            <class name="org.apache.mina.filter.ssl.KeyStoreFactory"/>
            <class name="org.apache.mina.filter.ssl.SslContextFactory"/>
            <class name="org.apache.mina.filter.ssl.SslFilter$1"/>
            <class name="org.apache.mina.filter.ssl.SslFilter$EncryptedWriteRequest"/>
            <class name="org.apache.mina.filter.ssl.SslFilter$SslFilterMessage"/>
            <class name="org.apache.mina.filter.ssl.SslFilter"/>
            <class name="org.apache.mina.filter.ssl.SslHandler$1"/>
            <class name="org.apache.mina.filter.ssl.SslHandler"/>
            <class name="org.apache.mina.filter.statistic.ProfilerTimerFilter$1"/>
            <class name="org.apache.mina.filter.statistic.ProfilerTimerFilter$TimerWorker"/>
            <class name="org.apache.mina.filter.statistic.ProfilerTimerFilter"/>
            <class name="org.apache.mina.filter.stream.AbstractStreamWriteFilter"/>
            <class name="org.apache.mina.filter.stream.FileRegionWriteFilter"/>
            <class name="org.apache.mina.filter.stream.StreamWriteFilter"/>
            <class name="org.apache.mina.filter.util.CommonEventFilter"/>
            <class name="org.apache.mina.filter.util.NoopFilter"/>
            <class name="org.apache.mina.filter.util.ReferenceCountingFilter"/>
            <class name="org.apache.mina.filter.util.SessionAttributeInitializingFilter"/>
            <class name="org.apache.mina.filter.util.WriteRequestFilter$FilteredWriteRequest"/>
            <class name="org.apache.mina.filter.util.WriteRequestFilter"/>
            <class name="org.apache.mina.handler.chain.ChainedIoHandler"/>
            <class name="org.apache.mina.handler.chain.IoHandlerChain$1"/>
            <class name="org.apache.mina.handler.chain.IoHandlerChain$2"/>
            <class name="org.apache.mina.handler.chain.IoHandlerChain$Entry$1"/>
            <class name="org.apache.mina.handler.chain.IoHandlerChain$Entry"/>
            <class name="org.apache.mina.handler.chain.IoHandlerChain"/>
            <class name="org.apache.mina.handler.chain.IoHandlerCommand$NextCommand"/>
            <class name="org.apache.mina.handler.chain.IoHandlerCommand"/>
            <class name="org.apache.mina.handler.demux.DemuxingIoHandler"/>
            <class name="org.apache.mina.handler.demux.ExceptionHandler$1"/>
            <class name="org.apache.mina.handler.demux.ExceptionHandler$2"/>
            <class name="org.apache.mina.handler.demux.ExceptionHandler"/>
            <class name="org.apache.mina.handler.demux.MessageHandler$1"/>
            <class name="org.apache.mina.handler.demux.MessageHandler"/>
            <class name="org.apache.mina.handler.multiton.SingleSessionIoHandler"/>
            <class name="org.apache.mina.handler.multiton.SingleSessionIoHandlerAdapter"/>
            <class name="org.apache.mina.handler.multiton.SingleSessionIoHandlerDelegate"/>
            <class name="org.apache.mina.handler.multiton.SingleSessionIoHandlerFactory"/>
            <class name="org.apache.mina.handler.stream.IoSessionInputStream"/>
            <class name="org.apache.mina.handler.stream.IoSessionOutputStream"/>
            <class name="org.apache.mina.handler.stream.StreamIoHandler$StreamIoException"/>
            <class name="org.apache.mina.handler.stream.StreamIoHandler"/>
            <class name="org.apache.mina.proxy.AbstractProxyLogicHandler$Event"/>
            <class name="org.apache.mina.proxy.AbstractProxyLogicHandler"/>
            <field name="serialVersionUID" class="org.apache.mina.proxy.ProxyAuthException"/>
            <method signature="void &lt;init&gt;(java.lang.String)" class="org.apache.mina.proxy.ProxyAuthException"/>
            <method signature="void &lt;init&gt;(java.lang.String,java.lang.Throwable)"
                    class="org.apache.mina.proxy.ProxyAuthException"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.proxy.ProxyConnector"/>
            <method signature="org.apache.mina.proxy.session.ProxyIoSession getProxyIoSession()"
                    class="org.apache.mina.proxy.ProxyConnector"/>
            <method signature="void cancelConnectFuture()" class="org.apache.mina.proxy.ProxyConnector"/>
            <method signature="org.apache.mina.core.future.ConnectFuture fireConnected(org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.proxy.ProxyConnector"/>
            <method signature="org.apache.mina.transport.socket.SocketConnector getConnector()"
                    class="org.apache.mina.proxy.ProxyConnector"/>
            <method signature="void doHandshake(org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.proxy.ProxyLogicHandler"/>
            <class name="org.apache.mina.proxy.event.IoSessionEvent$1"/>
            <class name="org.apache.mina.proxy.event.IoSessionEvent"/>
            <method signature="void discardSessionQueueEvents()"
                    class="org.apache.mina.proxy.event.IoSessionEventQueue"/>
            <method signature="void enqueueEventIfNecessary(org.apache.mina.proxy.event.IoSessionEvent)"
                    class="org.apache.mina.proxy.event.IoSessionEventQueue"/>
            <method signature="void flushPendingSessionEvents()"
                    class="org.apache.mina.proxy.event.IoSessionEventQueue"/>
            <method signature="void enqueueSessionEvent(org.apache.mina.proxy.event.IoSessionEvent)"
                    class="org.apache.mina.proxy.event.IoSessionEventQueue"/>
            <class name="org.apache.mina.proxy.event.IoSessionEventType$1"/>
            <class name="org.apache.mina.proxy.event.IoSessionEventType"/>
            <method signature="void onPreAdd(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void onPreRemove(org.apache.mina.core.filterchain.IoFilterChain,java.lang.String,org.apache.mina.core.filterchain.IoFilter$NextFilter)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void messageSent(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.write.WriteRequest)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void sessionCreated(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void sessionOpened(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void sessionIdle(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession,org.apache.mina.core.session.IdleStatus)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <method signature="void sessionClosed(org.apache.mina.core.filterchain.IoFilter$NextFilter,org.apache.mina.core.session.IoSession)"
                    class="org.apache.mina.proxy.filter.ProxyFilter"/>
            <class name="org.apache.mina.proxy.filter.ProxyHandshakeIoBuffer"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.proxy.handlers.ProxyRequest"/>
            <method signature="java.net.InetSocketAddress getEndpointAddress()"
                    class="org.apache.mina.proxy.handlers.ProxyRequest"/>
            <class name="org.apache.mina.proxy.handlers.http.AbstractAuthLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.AbstractHttpLogicHandler$1$1"/>
            <class name="org.apache.mina.proxy.handlers.http.AbstractHttpLogicHandler$1"/>
            <class name="org.apache.mina.proxy.handlers.http.AbstractHttpLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.HttpAuthenticationMethods"/>
            <class name="org.apache.mina.proxy.handlers.http.HttpProxyConstants"/>
            <class name="org.apache.mina.proxy.handlers.http.HttpProxyRequest"/>
            <class name="org.apache.mina.proxy.handlers.http.HttpProxyResponse"/>
            <class name="org.apache.mina.proxy.handlers.http.HttpSmartProxyHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.basic.HttpBasicAuthLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.basic.HttpNoAuthLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.digest.DigestUtilities"/>
            <class name="org.apache.mina.proxy.handlers.http.digest.HttpDigestAuthLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.ntlm.HttpNTLMAuthLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.http.ntlm.NTLMConstants"/>
            <class name="org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses"/>
            <class name="org.apache.mina.proxy.handlers.http.ntlm.NTLMUtilities"/>
            <class name="org.apache.mina.proxy.handlers.socks.AbstractSocksLogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.socks.Socks4LogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.socks.Socks5LogicHandler"/>
            <class name="org.apache.mina.proxy.handlers.socks.SocksProxyConstants"/>
            <field name="password" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <field name="host" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <field name="port" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <field name="serviceKerberosName" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="void &lt;init&gt;(byte,java.lang.String,int,java.lang.String)"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="byte[] getIpAddress()" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="byte[] getPort()" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="byte getCommandCode()" class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="byte getProtocolVersion()"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="java.lang.String getUserName()"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="java.lang.String getHost()"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="java.lang.String getPassword()"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="void setPassword(java.lang.String)"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="java.lang.String getServiceKerberosName()"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <method signature="void setServiceKerberosName(java.lang.String)"
                    class="org.apache.mina.proxy.handlers.socks.SocksProxyRequest"/>
            <field name="DEFAULT_ENCODING" class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <field name="preferedOrder" class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <field name="charsetName" class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="org.apache.mina.proxy.event.IoSessionEventQueue getEventQueue()"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="java.util.List getPreferedOrder()" class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="void setPreferedOrder(java.util.List)"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="void setHandler(org.apache.mina.proxy.ProxyLogicHandler)"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="void setProxyFilter(org.apache.mina.proxy.filter.ProxyFilter)"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="org.apache.mina.core.session.IoSession getSession()"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="org.apache.mina.proxy.ProxyConnector getConnector()"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="void setReconnectionNeeded(boolean)"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="java.nio.charset.Charset getCharset()"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="java.lang.String getCharsetName()" class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="void setCharsetName(java.lang.String)"
                    class="org.apache.mina.proxy.session.ProxyIoSession"/>
            <method signature="org.apache.mina.proxy.session.ProxyIoSession getProxySession()"
                    class="org.apache.mina.proxy.session.ProxyIoSessionInitializer"/>
            <class name="org.apache.mina.proxy.utils.ByteUtilities"/>
            <class name="org.apache.mina.proxy.utils.IoBufferDecoder$DecodingContext"/>
            <class name="org.apache.mina.proxy.utils.IoBufferDecoder"/>
            <class name="org.apache.mina.proxy.utils.MD4"/>
            <class name="org.apache.mina.proxy.utils.MD4Provider"/>
            <class name="org.apache.mina.proxy.utils.StringUtilities"/>
            <field name="DEFAULT_CLOSE_ON_PORT_UNREACHABLE"
                   class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <field name="closeOnPortUnreachable"
                   class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="void &lt;init&gt;()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="void doSetAll(org.apache.mina.core.session.IoSessionConfig)"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isBroadcastChanged()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isReceiveBufferSizeChanged()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isReuseAddressChanged()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isSendBufferSizeChanged()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isTrafficClassChanged()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="boolean isCloseOnPortUnreachable()"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="void setCloseOnPortUnreachable(boolean)"
                    class="org.apache.mina.transport.socket.AbstractDatagramSessionConfig"/>
            <method signature="java.net.InetSocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.DatagramAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.DatagramAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.DatagramAcceptor"/>
            <method signature="org.apache.mina.core.session.IoSessionRecycler getSessionRecycler()"
                    class="org.apache.mina.transport.socket.DatagramAcceptor"/>
            <method signature="void setSessionRecycler(org.apache.mina.core.session.IoSessionRecycler)"
                    class="org.apache.mina.transport.socket.DatagramAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultRemoteAddress()"
                    class="org.apache.mina.transport.socket.DatagramConnector"/>
            <method signature="void setDefaultRemoteAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.DatagramConnector"/>
            <method signature="boolean isBroadcast()" class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setBroadcast(boolean)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="boolean isReuseAddress()"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setReuseAddress(boolean)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="int getReceiveBufferSize()"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setReceiveBufferSize(int)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="int getSendBufferSize()" class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setSendBufferSize(int)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="int getTrafficClass()" class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setTrafficClass(int)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="boolean isCloseOnPortUnreachable()"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <method signature="void setCloseOnPortUnreachable(boolean)"
                    class="org.apache.mina.transport.socket.DatagramSessionConfig"/>
            <class name="org.apache.mina.transport.socket.DefaultDatagramSessionConfig"/>
            <method signature="java.net.InetSocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="boolean isReuseAddress()" class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="void setReuseAddress(boolean)" class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="int getBacklog()" class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="void setBacklog(int)" class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="org.apache.mina.transport.socket.SocketSessionConfig getSessionConfig()"
                    class="org.apache.mina.transport.socket.SocketAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultRemoteAddress()"
                    class="org.apache.mina.transport.socket.SocketConnector"/>
            <class name="org.apache.mina.transport.socket.nio.NioDatagramAcceptor$1"/>
            <class name="org.apache.mina.transport.socket.nio.NioDatagramAcceptor$DatagramChannelIterator"/>
            <field name="selector" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void &lt;init&gt;(java.util.concurrent.Executor)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void init()" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void destroy()" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="org.apache.mina.core.service.TransportMetadata getTransportMetadata()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="org.apache.mina.transport.socket.DatagramSessionConfig getSessionConfig()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.InetSocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.nio.channels.DatagramChannel open(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="boolean isReadable(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="boolean isWritable(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="org.apache.mina.transport.socket.nio.NioSession newSession(org.apache.mina.core.service.IoProcessor,java.nio.channels.DatagramChannel,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress receive(java.nio.channels.DatagramChannel,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="int select()" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="int select(int)" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.util.Iterator selectedHandles()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="int send(org.apache.mina.transport.socket.nio.NioSession,org.apache.mina.core.buffer.IoBuffer,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.transport.socket.nio.NioSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void close(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void wakeup()" class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="org.apache.mina.core.session.AbstractIoSession newSession(org.apache.mina.core.service.IoProcessor,java.lang.Object,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="int send(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress receive(java.lang.Object,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="boolean isWritable(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="boolean isReadable(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void close(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.lang.Object open(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="java.net.SocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramAcceptor"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void &lt;init&gt;(int)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void &lt;init&gt;(java.lang.Class,int)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void &lt;init&gt;(java.lang.Class)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.core.service.TransportMetadata getTransportMetadata()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.transport.socket.DatagramSessionConfig getSessionConfig()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.net.InetSocketAddress getDefaultRemoteAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void setDefaultRemoteAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void init()" class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.nio.channels.DatagramChannel newHandle(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="boolean connect(java.nio.channels.DatagramChannel,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.transport.socket.nio.NioSession newSession(org.apache.mina.core.service.IoProcessor,java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void close(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.util.Iterator allHandles()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest getConnectionRequest(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void destroy()" class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="boolean finishConnect(java.nio.channels.DatagramChannel)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void register(java.nio.channels.DatagramChannel,org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="int select(int)" class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.util.Iterator selectedHandles()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void wakeup()" class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest getConnectionRequest(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void register(java.lang.Object,org.apache.mina.core.polling.AbstractPollingIoConnector$ConnectionRequest)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="void close(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="org.apache.mina.core.session.AbstractIoSession newSession(org.apache.mina.core.service.IoProcessor,java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="boolean finishConnect(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="boolean connect(java.lang.Object,java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.lang.Object newHandle(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <method signature="java.net.SocketAddress getDefaultRemoteAddress()"
                    class="org.apache.mina.transport.socket.nio.NioDatagramConnector"/>
            <class name="org.apache.mina.transport.socket.nio.NioDatagramSession"/>
            <class name="org.apache.mina.transport.socket.nio.NioDatagramSessionConfig"/>
            <class name="org.apache.mina.transport.socket.nio.NioProcessor$1"/>
            <class name="org.apache.mina.transport.socket.nio.NioProcessor$IoSessionIterator"/>
            <field name="selector" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void &lt;init&gt;(java.util.concurrent.Executor)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void dispose0()" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int select(long)" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int select()" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isSelectorEmpty()" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void wakeup()" class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="java.util.Iterator allSessions()"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="java.util.Iterator selectedSessions()"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void init(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void destroy(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="org.apache.mina.core.session.SessionState getState(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isReadable(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isWritable(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isInterestedInRead(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isInterestedInWrite(org.apache.mina.transport.socket.nio.NioSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void setInterestedInRead(org.apache.mina.transport.socket.nio.NioSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.transport.socket.nio.NioSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int read(org.apache.mina.transport.socket.nio.NioSession,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int write(org.apache.mina.transport.socket.nio.NioSession,org.apache.mina.core.buffer.IoBuffer,int)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int transferFile(org.apache.mina.transport.socket.nio.NioSession,org.apache.mina.core.file.FileRegion,int)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int transferFile(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.file.FileRegion,int)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int write(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer,int)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="int read(org.apache.mina.core.session.AbstractIoSession,org.apache.mina.core.buffer.IoBuffer)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void destroy(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void init(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isInterestedInWrite(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isInterestedInRead(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void setInterestedInRead(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="void setInterestedInWrite(org.apache.mina.core.session.AbstractIoSession,boolean)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isReadable(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="boolean isWritable(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="org.apache.mina.core.session.SessionState getState(org.apache.mina.core.session.AbstractIoSession)"
                    class="org.apache.mina.transport.socket.nio.NioProcessor"/>
            <method signature="java.nio.channels.ByteChannel getChannel()"
                    class="org.apache.mina.transport.socket.nio.NioSession"/>
            <method signature="java.nio.channels.SelectionKey getSelectionKey()"
                    class="org.apache.mina.transport.socket.nio.NioSession"/>
            <method signature="void setSelectionKey(java.nio.channels.SelectionKey)"
                    class="org.apache.mina.transport.socket.nio.NioSession"/>
            <class name="org.apache.mina.transport.socket.nio.NioSocketAcceptor$1"/>
            <class name="org.apache.mina.transport.socket.nio.NioSocketAcceptor$ServerSocketChannelIterator"/>
            <field name="backlog" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <field name="reuseAddress" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <field name="selector" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void &lt;init&gt;(int)" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void &lt;init&gt;(java.util.concurrent.Executor,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void init()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void destroy()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="org.apache.mina.core.service.TransportMetadata getTransportMetadata()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="org.apache.mina.transport.socket.SocketSessionConfig getSessionConfig()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.InetSocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.InetSocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void setDefaultLocalAddress(java.net.InetSocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="boolean isReuseAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void setReuseAddress(boolean)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="int getBacklog()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void setBacklog(int)" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="org.apache.mina.transport.socket.nio.NioSession accept(org.apache.mina.core.service.IoProcessor,java.nio.channels.ServerSocketChannel)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.nio.channels.ServerSocketChannel open(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.nio.channels.ServerSocketChannel)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="int select()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.util.Iterator selectedHandles()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void close(java.nio.channels.ServerSocketChannel)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void wakeup()" class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void close(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="org.apache.mina.core.session.AbstractIoSession accept(org.apache.mina.core.service.IoProcessor,java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.SocketAddress localAddress(java.lang.Object)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.lang.Object open(java.net.SocketAddress)"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.SocketAddress getDefaultLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="java.net.SocketAddress getLocalAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketAcceptor"/>
            <method signature="void &lt;init&gt;(int)" class="org.apache.mina.transport.socket.nio.NioSocketConnector"/>
            <method signature="void &lt;init&gt;(org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.transport.socket.nio.NioSocketConnector"/>
            <method signature="void &lt;init&gt;(java.util.concurrent.Executor,org.apache.mina.core.service.IoProcessor)"
                    class="org.apache.mina.transport.socket.nio.NioSocketConnector"/>
            <method signature="void &lt;init&gt;(java.lang.Class,int)"
                    class="org.apache.mina.transport.socket.nio.NioSocketConnector"/>
            <method signature="void &lt;init&gt;(java.lang.Class)"
                    class="org.apache.mina.transport.socket.nio.NioSocketConnector"/>
            <field name="key" class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="java.nio.channels.SocketChannel getChannel()"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="java.nio.channels.SelectionKey getSelectionKey()"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="void setSelectionKey(java.nio.channels.SelectionKey)"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="java.net.InetSocketAddress getServiceAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="java.nio.channels.ByteChannel getChannel()"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="java.net.SocketAddress getServiceAddress()"
                    class="org.apache.mina.transport.socket.nio.NioSocketSession"/>
            <method signature="void &lt;init&gt;()"
                    class="org.apache.mina.transport.vmpipe.DefaultVmPipeSessionConfig"/>
            <method signature="void doSetAll(org.apache.mina.core.session.IoSessionConfig)"
                    class="org.apache.mina.transport.vmpipe.DefaultVmPipeSessionConfig"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipe"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeAcceptor"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeAddress"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeConnector$1"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeConnector$LocalAddressReclaimer"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeConnector"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeFilterChain$1"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeFilterChain$VmPipeIoProcessor"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeFilterChain"/>
            <class name="org.apache.mina.transport.vmpipe.VmPipeSession"/>
            <class name="org.apache.mina.util.AvailablePortFinder"/>
            <class name="org.apache.mina.util.Base64"/>
            <field name="serialVersionUID" class="org.apache.mina.util.CircularQueue"/>
            <field name="DEFAULT_CAPACITY" class="org.apache.mina.util.CircularQueue"/>
            <class name="org.apache.mina.util.ConcurrentHashSet"/>
            <class name="org.apache.mina.util.CopyOnWriteMap"/>
            <method signature="void setInstance(org.apache.mina.util.ExceptionMonitor)"
                    class="org.apache.mina.util.ExceptionMonitor"/>
            <method signature="void startExpiring()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <method signature="void startExpiringIfNotStarted()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <method signature="void stopExpiring()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <method signature="boolean isRunning()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <method signature="int getTimeToLive()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <method signature="int getExpirationInterval()" class="org.apache.mina.util.ExpiringMap$Expirer"/>
            <field name="DEFAULT_TIME_TO_LIVE" class="org.apache.mina.util.ExpiringMap"/>
            <field name="DEFAULT_EXPIRATION_INTERVAL" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="void &lt;init&gt;()" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="void &lt;init&gt;(int)" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="void removeExpirationListener(org.apache.mina.util.ExpirationListener)"
                    class="org.apache.mina.util.ExpiringMap"/>
            <method signature="int getExpirationInterval()" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="int getTimeToLive()" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="void setExpirationInterval(int)" class="org.apache.mina.util.ExpiringMap"/>
            <method signature="void setTimeToLive(int)" class="org.apache.mina.util.ExpiringMap"/>
            <field name="serialVersionUID" class="org.apache.mina.util.IdentityHashSet"/>
            <method signature="void &lt;init&gt;(int)" class="org.apache.mina.util.IdentityHashSet"/>
            <method signature="void &lt;init&gt;(java.util.Collection)" class="org.apache.mina.util.IdentityHashSet"/>
            <class name="org.apache.mina.util.LazyInitializedCacheMap$NoopInitializer"/>
            <class name="org.apache.mina.util.LazyInitializedCacheMap"/>
            <class name="org.apache.mina.util.LazyInitializer"/>
            <class name="org.apache.mina.util.Log4jXmlFormatter"/>
            <field name="serialVersionUID" class="org.apache.mina.util.MapBackedSet"/>
            <method signature="void &lt;init&gt;(java.util.Map,java.util.Collection)"
                    class="org.apache.mina.util.MapBackedSet"/>
            <class name="org.apache.mina.util.SynchronizedQueue"/>
            <class name="org.apache.mina.util.Transform"/>
            <class name="org.apache.mina.util.byteaccess.AbstractByteArray"/>
            <class name="org.apache.mina.util.byteaccess.BufferByteArray$1"/>
            <class name="org.apache.mina.util.byteaccess.BufferByteArray$CursorImpl"/>
            <class name="org.apache.mina.util.byteaccess.BufferByteArray"/>
            <class name="org.apache.mina.util.byteaccess.ByteArray$Cursor"/>
            <class name="org.apache.mina.util.byteaccess.ByteArray"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayFactory"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayList$1"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayList$Node"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayList"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayPool$DirectBufferByteArray"/>
            <class name="org.apache.mina.util.byteaccess.ByteArrayPool"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArray$1"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArray$2"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArray$CursorImpl"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArray$CursorListener"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArray"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeBase$1"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeBase"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeReader"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeWriter$ChunkedExpander"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeWriter$Expander"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeWriter$Flusher"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeWriter$NopExpander"/>
            <class name="org.apache.mina.util.byteaccess.CompositeByteArrayRelativeWriter"/>
            <class name="org.apache.mina.util.byteaccess.IoAbsoluteReader"/>
            <class name="org.apache.mina.util.byteaccess.IoAbsoluteWriter"/>
            <class name="org.apache.mina.util.byteaccess.IoRelativeReader"/>
            <class name="org.apache.mina.util.byteaccess.IoRelativeWriter"/>
            <class name="org.apache.mina.util.byteaccess.SimpleByteArrayFactory$1"/>
            <class name="org.apache.mina.util.byteaccess.SimpleByteArrayFactory"/>
        </removed-code>
        <removed-resources>
        </removed-resources>
        <!-- 	shrinked c:\develope\freerapid\dev\mina-core-2.0.0-RC1.jar BY 71,67%. -->
        <!-- 	size before: 677 KB, size after: 191 KB. -->
        <!-- 	removed 285 classes, 1279 methods, 97 fields, 0 resources. -->
        <!-- 	185 classes remaining of 470 total. -->
    </inOutPair>
    <!-- WARNING:Not all dependencies could be resolved. Please see the logfile for details. -->
</yshrink>

